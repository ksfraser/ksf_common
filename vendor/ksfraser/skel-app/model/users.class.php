<?php 
//This file was generated by calling php /var/www/html/skel-app/generator.php acl 

//this script may only be included - so its better to die if called directly.
if ( strpos( $_SERVER["SCRIPT_NAME"], basename(__FILE__) ) !== false ) {
  header( "location: ../index.php" );
  exit;
}

include_once('users.extend.php');

class users extends generictable 
{
         private $observers;
         var $data; //data passed in by other calls
         var $idusers;
		 /*User Index */
         var $username;
		 /*UserName */
         var $surname;
		 /*Surname */
         var $firstname;
		 /*Firstname */
         var $emailaddress;
		 /*Email Address */
         var $password;
		 /*Password */
         var $roles_id;
		 /*Role Access Control */
         function __construct()
         {
         	$this->querytablename = 'users';
         	$this->fieldspec['idusers']['metadata_id'] = '5934';
         	$this->fieldspec['idusers']['table_name'] = 'users';
         	$this->fieldspec['idusers']['column_name'] = 'idusers';
         	$this->fieldspec['idusers']['pretty_name'] = 'User Index';
         	$this->fieldspec['idusers']['abstract_data_type'] = 'integer';
         	$this->fieldspec['idusers']['db_data_type'] = 'integer';
         	$this->fieldspec['idusers']['field_null'] = 'NO';
         	$this->fieldspec['idusers']['field_key'] = '';
         	$this->fieldspec['idusers']['extra_sql'] = '';
         	$this->fieldspec['idusers']['html_form_type'] = 'integer';
         	$this->fieldspec['idusers']['html_form_options'] = '';
         	$this->fieldspec['idusers']['html_form_explanation'] = '';
         	$this->fieldspec['idusers']['help_text'] = '';
         	$this->fieldspec['idusers']['mandatory_p'] = 'N';
         	$this->fieldspec['idusers']['sort_key'] = '0';
         	$this->fieldspec['idusers']['form_sort_key'] = '0';
         	$this->fieldspec['idusers']['form_number'] = '1';
         	$this->fieldspec['idusers']['default_value'] = '0';
         	$this->fieldspec['idusers']['field_toupper'] = 'NO';
         	$this->fieldspec['idusers']['validationprocname'] = '';
         	$this->fieldspec['idusers']['c_size'] = '45';
         	$this->fieldspec['idusers']['prikey'] = 'N';
         	$this->fieldspec['idusers']['noedit'] = 'N';
         	$this->fieldspec['idusers']['nodisplay'] = 'N';
         	$this->fieldspec['idusers']['c_unsigned'] = 'N';
         	$this->fieldspec['idusers']['c_zerofill'] = 'N';
         	$this->fieldspec['idusers']['c_auto_increment'] = 'N';
         	$this->fieldspec['idusers']['foreign_table'] = '';
         	$this->fieldspec['idusers']['foreign_key'] = '';
         	$this->fieldspec['idusers']['application'] = 'acl';
         	$this->fieldspec['idusers']['issearchable'] = '1';
         	$this->fieldspec['idusers']['preinserttrigger'] = '';
         	$this->fieldspec['idusers']['postinserttrigger'] = '';
         	$this->fieldspec['idusers']['preupdatetrigger'] = '';
         	$this->fieldspec['idusers']['postupdatetrigger'] = '';
         	$this->fieldspec['idusers']['predeletetrigger'] = '';
         	$this->fieldspec['idusers']['postdeletetrigger'] = '';
         	$this->fieldspec['idusers']['postinsert'] = 'PostidusersInsert';
         	$this->fieldspec['idusers']['postupdate'] = 'PostidusersUpdate';
         	$this->fieldspec['idusers']['postdelete'] = 'PostidusersDelete';
         	$this->fieldspec['idusers']['preinsert'] = 'PreidusersInsert';
         	$this->fieldspec['idusers']['preupdate'] = 'PreidusersUpdate';
         	$this->fieldspec['idusers']['predelete'] = 'PreidusersDelete';
         	$this->fieldspec['username']['metadata_id'] = '2874';
         	$this->fieldspec['username']['table_name'] = 'users';
         	$this->fieldspec['username']['column_name'] = 'username';
         	$this->fieldspec['username']['pretty_name'] = 'UserName';
         	$this->fieldspec['username']['abstract_data_type'] = 'userid';
         	$this->fieldspec['username']['db_data_type'] = 'varchar';
         	$this->fieldspec['username']['field_null'] = 'NO';
         	$this->fieldspec['username']['field_key'] = '0';
         	$this->fieldspec['username']['extra_sql'] = ' ';
         	$this->fieldspec['username']['html_form_type'] = 'text';
         	$this->fieldspec['username']['html_form_options'] = ' ';
         	$this->fieldspec['username']['html_form_explanation'] = ' ';
         	$this->fieldspec['username']['help_text'] = ' ';
         	$this->fieldspec['username']['mandatory_p'] = 'y';
         	$this->fieldspec['username']['sort_key'] = '0';
         	$this->fieldspec['username']['form_sort_key'] = '0';
         	$this->fieldspec['username']['form_number'] = '1';
         	$this->fieldspec['username']['default_value'] = '';
         	$this->fieldspec['username']['field_toupper'] = 'NO';
         	$this->fieldspec['username']['validationprocname'] = ' ';
         	$this->fieldspec['username']['c_size'] = '255';
         	$this->fieldspec['username']['prikey'] = 'Y';
         	$this->fieldspec['username']['noedit'] = 'N';
         	$this->fieldspec['username']['nodisplay'] = 'N';
         	$this->fieldspec['username']['c_unsigned'] = 'N';
         	$this->fieldspec['username']['c_zerofill'] = 'N';
         	$this->fieldspec['username']['c_auto_increment'] = 'N';
         	$this->fieldspec['username']['foreign_table'] = '';
         	$this->fieldspec['username']['foreign_key'] = '';
         	$this->fieldspec['username']['application'] = 'acl';
         	$this->fieldspec['username']['issearchable'] = '1';
         	$this->fieldspec['username']['preinserttrigger'] = '';
         	$this->fieldspec['username']['postinserttrigger'] = '';
         	$this->fieldspec['username']['preupdatetrigger'] = '';
         	$this->fieldspec['username']['postupdatetrigger'] = '';
         	$this->fieldspec['username']['predeletetrigger'] = '';
         	$this->fieldspec['username']['postdeletetrigger'] = '';
         	$this->fieldspec['username']['postinsert'] = 'PostusernameInsert';
         	$this->fieldspec['username']['postupdate'] = 'PostusernameUpdate';
         	$this->fieldspec['username']['postdelete'] = 'PostusernameDelete';
         	$this->fieldspec['username']['preinsert'] = 'PreusernameInsert';
         	$this->fieldspec['username']['preupdate'] = 'PreusernameUpdate';
         	$this->fieldspec['username']['predelete'] = 'PreusernameDelete';
         	$this->fieldspec['surname']['metadata_id'] = '2875';
         	$this->fieldspec['surname']['table_name'] = 'users';
         	$this->fieldspec['surname']['column_name'] = 'surname';
         	$this->fieldspec['surname']['pretty_name'] = 'Surname';
         	$this->fieldspec['surname']['abstract_data_type'] = 'string';
         	$this->fieldspec['surname']['db_data_type'] = 'varchar';
         	$this->fieldspec['surname']['field_null'] = 'NO';
         	$this->fieldspec['surname']['field_key'] = '0';
         	$this->fieldspec['surname']['extra_sql'] = ' ';
         	$this->fieldspec['surname']['html_form_type'] = 'text';
         	$this->fieldspec['surname']['html_form_options'] = ' ';
         	$this->fieldspec['surname']['html_form_explanation'] = ' ';
         	$this->fieldspec['surname']['help_text'] = ' ';
         	$this->fieldspec['surname']['mandatory_p'] = 'n';
         	$this->fieldspec['surname']['sort_key'] = '0';
         	$this->fieldspec['surname']['form_sort_key'] = '0';
         	$this->fieldspec['surname']['form_number'] = '1';
         	$this->fieldspec['surname']['default_value'] = '';
         	$this->fieldspec['surname']['field_toupper'] = 'NO';
         	$this->fieldspec['surname']['validationprocname'] = ' ';
         	$this->fieldspec['surname']['c_size'] = '45';
         	$this->fieldspec['surname']['prikey'] = 'n';
         	$this->fieldspec['surname']['noedit'] = 'n';
         	$this->fieldspec['surname']['nodisplay'] = 'n';
         	$this->fieldspec['surname']['c_unsigned'] = 'n';
         	$this->fieldspec['surname']['c_zerofill'] = 'n';
         	$this->fieldspec['surname']['c_auto_increment'] = 'n';
         	$this->fieldspec['surname']['foreign_table'] = '';
         	$this->fieldspec['surname']['foreign_key'] = '';
         	$this->fieldspec['surname']['application'] = 'acl';
         	$this->fieldspec['surname']['issearchable'] = '1';
         	$this->fieldspec['surname']['preinserttrigger'] = '';
         	$this->fieldspec['surname']['postinserttrigger'] = '';
         	$this->fieldspec['surname']['preupdatetrigger'] = '';
         	$this->fieldspec['surname']['postupdatetrigger'] = '';
         	$this->fieldspec['surname']['predeletetrigger'] = '';
         	$this->fieldspec['surname']['postdeletetrigger'] = '';
         	$this->fieldspec['surname']['postinsert'] = 'PostsurnameInsert';
         	$this->fieldspec['surname']['postupdate'] = 'PostsurnameUpdate';
         	$this->fieldspec['surname']['postdelete'] = 'PostsurnameDelete';
         	$this->fieldspec['surname']['preinsert'] = 'PresurnameInsert';
         	$this->fieldspec['surname']['preupdate'] = 'PresurnameUpdate';
         	$this->fieldspec['surname']['predelete'] = 'PresurnameDelete';
         	$this->fieldspec['firstname']['metadata_id'] = '2876';
         	$this->fieldspec['firstname']['table_name'] = 'users';
         	$this->fieldspec['firstname']['column_name'] = 'firstname';
         	$this->fieldspec['firstname']['pretty_name'] = 'Firstname';
         	$this->fieldspec['firstname']['abstract_data_type'] = 'string';
         	$this->fieldspec['firstname']['db_data_type'] = 'varchar';
         	$this->fieldspec['firstname']['field_null'] = 'NO';
         	$this->fieldspec['firstname']['field_key'] = '0';
         	$this->fieldspec['firstname']['extra_sql'] = ' ';
         	$this->fieldspec['firstname']['html_form_type'] = 'text';
         	$this->fieldspec['firstname']['html_form_options'] = ' ';
         	$this->fieldspec['firstname']['html_form_explanation'] = ' ';
         	$this->fieldspec['firstname']['help_text'] = ' ';
         	$this->fieldspec['firstname']['mandatory_p'] = 'n';
         	$this->fieldspec['firstname']['sort_key'] = '0';
         	$this->fieldspec['firstname']['form_sort_key'] = '0';
         	$this->fieldspec['firstname']['form_number'] = '1';
         	$this->fieldspec['firstname']['default_value'] = '';
         	$this->fieldspec['firstname']['field_toupper'] = 'NO';
         	$this->fieldspec['firstname']['validationprocname'] = ' ';
         	$this->fieldspec['firstname']['c_size'] = '45';
         	$this->fieldspec['firstname']['prikey'] = 'n';
         	$this->fieldspec['firstname']['noedit'] = 'n';
         	$this->fieldspec['firstname']['nodisplay'] = 'n';
         	$this->fieldspec['firstname']['c_unsigned'] = 'n';
         	$this->fieldspec['firstname']['c_zerofill'] = 'n';
         	$this->fieldspec['firstname']['c_auto_increment'] = 'n';
         	$this->fieldspec['firstname']['foreign_table'] = '';
         	$this->fieldspec['firstname']['foreign_key'] = '';
         	$this->fieldspec['firstname']['application'] = 'acl';
         	$this->fieldspec['firstname']['issearchable'] = '1';
         	$this->fieldspec['firstname']['preinserttrigger'] = '';
         	$this->fieldspec['firstname']['postinserttrigger'] = '';
         	$this->fieldspec['firstname']['preupdatetrigger'] = '';
         	$this->fieldspec['firstname']['postupdatetrigger'] = '';
         	$this->fieldspec['firstname']['predeletetrigger'] = '';
         	$this->fieldspec['firstname']['postdeletetrigger'] = '';
         	$this->fieldspec['firstname']['postinsert'] = 'PostfirstnameInsert';
         	$this->fieldspec['firstname']['postupdate'] = 'PostfirstnameUpdate';
         	$this->fieldspec['firstname']['postdelete'] = 'PostfirstnameDelete';
         	$this->fieldspec['firstname']['preinsert'] = 'PrefirstnameInsert';
         	$this->fieldspec['firstname']['preupdate'] = 'PrefirstnameUpdate';
         	$this->fieldspec['firstname']['predelete'] = 'PrefirstnameDelete';
         	$this->fieldspec['emailaddress']['metadata_id'] = '2877';
         	$this->fieldspec['emailaddress']['table_name'] = 'users';
         	$this->fieldspec['emailaddress']['column_name'] = 'emailaddress';
         	$this->fieldspec['emailaddress']['pretty_name'] = 'Email Address';
         	$this->fieldspec['emailaddress']['abstract_data_type'] = 'string';
         	$this->fieldspec['emailaddress']['db_data_type'] = 'varchar';
         	$this->fieldspec['emailaddress']['field_null'] = 'NO';
         	$this->fieldspec['emailaddress']['field_key'] = '0';
         	$this->fieldspec['emailaddress']['extra_sql'] = ' ';
         	$this->fieldspec['emailaddress']['html_form_type'] = 'text';
         	$this->fieldspec['emailaddress']['html_form_options'] = ' ';
         	$this->fieldspec['emailaddress']['html_form_explanation'] = ' ';
         	$this->fieldspec['emailaddress']['help_text'] = ' ';
         	$this->fieldspec['emailaddress']['mandatory_p'] = 'Y';
         	$this->fieldspec['emailaddress']['sort_key'] = '0';
         	$this->fieldspec['emailaddress']['form_sort_key'] = '0';
         	$this->fieldspec['emailaddress']['form_number'] = '1';
         	$this->fieldspec['emailaddress']['default_value'] = '';
         	$this->fieldspec['emailaddress']['field_toupper'] = 'NO';
         	$this->fieldspec['emailaddress']['validationprocname'] = ' ';
         	$this->fieldspec['emailaddress']['c_size'] = '255';
         	$this->fieldspec['emailaddress']['prikey'] = 'N';
         	$this->fieldspec['emailaddress']['noedit'] = 'N';
         	$this->fieldspec['emailaddress']['nodisplay'] = 'N';
         	$this->fieldspec['emailaddress']['c_unsigned'] = 'N';
         	$this->fieldspec['emailaddress']['c_zerofill'] = 'N';
         	$this->fieldspec['emailaddress']['c_auto_increment'] = 'N';
         	$this->fieldspec['emailaddress']['foreign_table'] = '';
         	$this->fieldspec['emailaddress']['foreign_key'] = '';
         	$this->fieldspec['emailaddress']['application'] = 'acl';
         	$this->fieldspec['emailaddress']['issearchable'] = '1';
         	$this->fieldspec['emailaddress']['preinserttrigger'] = '';
         	$this->fieldspec['emailaddress']['postinserttrigger'] = '';
         	$this->fieldspec['emailaddress']['preupdatetrigger'] = '';
         	$this->fieldspec['emailaddress']['postupdatetrigger'] = '';
         	$this->fieldspec['emailaddress']['predeletetrigger'] = '';
         	$this->fieldspec['emailaddress']['postdeletetrigger'] = '';
         	$this->fieldspec['emailaddress']['postinsert'] = 'PostemailaddressInsert';
         	$this->fieldspec['emailaddress']['postupdate'] = 'PostemailaddressUpdate';
         	$this->fieldspec['emailaddress']['postdelete'] = 'PostemailaddressDelete';
         	$this->fieldspec['emailaddress']['preinsert'] = 'PreemailaddressInsert';
         	$this->fieldspec['emailaddress']['preupdate'] = 'PreemailaddressUpdate';
         	$this->fieldspec['emailaddress']['predelete'] = 'PreemailaddressDelete';
         	$this->fieldspec['password']['metadata_id'] = '2878';
         	$this->fieldspec['password']['table_name'] = 'users';
         	$this->fieldspec['password']['column_name'] = 'password';
         	$this->fieldspec['password']['pretty_name'] = 'Password';
         	$this->fieldspec['password']['abstract_data_type'] = 'password';
         	$this->fieldspec['password']['db_data_type'] = 'varchar';
         	$this->fieldspec['password']['field_null'] = 'NO';
         	$this->fieldspec['password']['field_key'] = '0';
         	$this->fieldspec['password']['extra_sql'] = ' ';
         	$this->fieldspec['password']['html_form_type'] = 'password';
         	$this->fieldspec['password']['html_form_options'] = ' ';
         	$this->fieldspec['password']['html_form_explanation'] = ' ';
         	$this->fieldspec['password']['help_text'] = ' ';
         	$this->fieldspec['password']['mandatory_p'] = 'Y';
         	$this->fieldspec['password']['sort_key'] = '0';
         	$this->fieldspec['password']['form_sort_key'] = '0';
         	$this->fieldspec['password']['form_number'] = '1';
         	$this->fieldspec['password']['default_value'] = '';
         	$this->fieldspec['password']['field_toupper'] = 'NO';
         	$this->fieldspec['password']['validationprocname'] = ' ';
         	$this->fieldspec['password']['c_size'] = '45';
         	$this->fieldspec['password']['prikey'] = 'N';
         	$this->fieldspec['password']['noedit'] = 'N';
         	$this->fieldspec['password']['nodisplay'] = 'N';
         	$this->fieldspec['password']['c_unsigned'] = 'N';
         	$this->fieldspec['password']['c_zerofill'] = 'N';
         	$this->fieldspec['password']['c_auto_increment'] = 'N';
         	$this->fieldspec['password']['foreign_table'] = '';
         	$this->fieldspec['password']['foreign_key'] = '';
         	$this->fieldspec['password']['application'] = 'acl';
         	$this->fieldspec['password']['issearchable'] = '1';
         	$this->fieldspec['password']['preinserttrigger'] = '';
         	$this->fieldspec['password']['postinserttrigger'] = '';
         	$this->fieldspec['password']['preupdatetrigger'] = '';
         	$this->fieldspec['password']['postupdatetrigger'] = '';
         	$this->fieldspec['password']['predeletetrigger'] = '';
         	$this->fieldspec['password']['postdeletetrigger'] = '';
         	$this->fieldspec['password']['postinsert'] = 'PostpasswordInsert';
         	$this->fieldspec['password']['postupdate'] = 'PostpasswordUpdate';
         	$this->fieldspec['password']['postdelete'] = 'PostpasswordDelete';
         	$this->fieldspec['password']['preinsert'] = 'PrepasswordInsert';
         	$this->fieldspec['password']['preupdate'] = 'PrepasswordUpdate';
         	$this->fieldspec['password']['predelete'] = 'PrepasswordDelete';
         	$this->fieldspec['roles_id']['metadata_id'] = '2879';
         	$this->fieldspec['roles_id']['table_name'] = 'users';
         	$this->fieldspec['roles_id']['column_name'] = 'roles_id';
         	$this->fieldspec['roles_id']['pretty_name'] = 'Role Access Control';
         	$this->fieldspec['roles_id']['abstract_data_type'] = 'Integer Bit Flags';
         	$this->fieldspec['roles_id']['db_data_type'] = 'integer';
         	$this->fieldspec['roles_id']['field_null'] = 'NO';
         	$this->fieldspec['roles_id']['field_key'] = '0';
         	$this->fieldspec['roles_id']['extra_sql'] = ' ';
         	$this->fieldspec['roles_id']['html_form_type'] = 'fddl';
         	$this->fieldspec['roles_id']['html_form_options'] = '<fk><field>roledescription</field></fk>';
         	$this->fieldspec['roles_id']['html_form_explanation'] = ' ';
         	$this->fieldspec['roles_id']['help_text'] = 'Bit representation of access';
         	$this->fieldspec['roles_id']['mandatory_p'] = 'Y';
         	$this->fieldspec['roles_id']['sort_key'] = '0';
         	$this->fieldspec['roles_id']['form_sort_key'] = '0';
         	$this->fieldspec['roles_id']['form_number'] = '1';
         	$this->fieldspec['roles_id']['default_value'] = '';
         	$this->fieldspec['roles_id']['field_toupper'] = 'NO';
         	$this->fieldspec['roles_id']['validationprocname'] = ' ';
         	$this->fieldspec['roles_id']['c_size'] = '8';
         	$this->fieldspec['roles_id']['prikey'] = 'N';
         	$this->fieldspec['roles_id']['noedit'] = 'N';
         	$this->fieldspec['roles_id']['nodisplay'] = 'N';
         	$this->fieldspec['roles_id']['c_unsigned'] = 'N';
         	$this->fieldspec['roles_id']['c_zerofill'] = 'N';
         	$this->fieldspec['roles_id']['c_auto_increment'] = 'N';
         	$this->fieldspec['roles_id']['foreign_table'] = 'roles';
         	$this->fieldspec['roles_id']['foreign_key'] = 'roles_id';
         	$this->fieldspec['roles_id']['application'] = 'acl';
         	$this->fieldspec['roles_id']['issearchable'] = '1';
         	$this->fieldspec['roles_id']['preinserttrigger'] = '';
         	$this->fieldspec['roles_id']['postinserttrigger'] = '';
         	$this->fieldspec['roles_id']['preupdatetrigger'] = '';
         	$this->fieldspec['roles_id']['postupdatetrigger'] = '';
         	$this->fieldspec['roles_id']['predeletetrigger'] = '';
         	$this->fieldspec['roles_id']['postdeletetrigger'] = '';
         	$this->fieldspec['roles_id']['postinsert'] = 'Postroles_idInsert';
         	$this->fieldspec['roles_id']['postupdate'] = 'Postroles_idUpdate';
         	$this->fieldspec['roles_id']['postdelete'] = 'Postroles_idDelete';
         	$this->fieldspec['roles_id']['preinsert'] = 'Preroles_idInsert';
         	$this->fieldspec['roles_id']['preupdate'] = 'Preroles_idUpdate';
         	$this->fieldspec['roles_id']['predelete'] = 'Preroles_idDelete';
         	$this->fieldlist = array('idusers', 'username', 'surname', 'firstname', 'emailaddress', 'password', 'roles_id');
         	$this->searchlist = array('idusers', 'username', 'surname', 'firstname', 'emailaddress', 'password', 'roles_id', );
	         return SUCCESS;
         }
         function users()
         { //For older php which doesn't have constructor
              return $this->__construct();
         }
         function Push()
         {
	         $_SESSION['users'] = serialize($this);
	         return SUCCESS;
         }
         function Pop()
         {
                 //Can't do this in self - this is how to do it outside
	       //  $this = unserialize($_SESSION['users']);
	         return SUCCESS;
         }
         function ObserverRegister( $observer, $event )
         {
                 $this->observers[$event][] = $observer;
	         return SUCCESS;
         }
         function ObserverDeRegister( $observer )
         {
                 $this->observers[] = array_diff( $this->observers, array( $observer) );
	         return SUCCESS;
         }
         function ObserverNotify( $event, $msg )
         {
                 if ( isset( $this->observers[$event] ) )
                 	foreach ( $this->observers[$event] as $obs ) 
                 	{
                      		$obs->notify( $event, $msg );
                 	}
                 /* '**' being used as 'ALL' */
                 if ( isset( $this->observers['**'] ) )
                 	foreach ( $this->observers['**'] as $obs ) 
                 	{
                      		$obs->notify( $event, $msg );
                 	}
	         return SUCCESS;
         }
         function notify( $object )
         {
                 //Called when another object we are observing sends us a notification
	         return SUCCESS;
         }
         function PreidusersInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PreidusersInsert ) )
	            return PreidusersInsert( $this );
                 else return;
         }
         function PostidusersInsert( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostidusersInsert ) )
	            return PostidusersInsert( $this );
                 else return;
         }
         function PreidusersUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PreidusersUpdate ) )
	            return PreidusersUpdate( $this );
                 else return;
         }
         function PostidusersUpdate( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostidusersUpdate ) )
	            return PostidusersUpdate( $this );
                 else return;
         }
         function PreidusersDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PreidusersDelete ) )
	            return PreidusersDelete( $this );
                 else return;
         }
         function PostidusersDelete( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostidusersDelete ) )
	            return PostidusersDelete( $this );
                 else return;
         }
         function Setidusers($value)
         {
                 $this->idusers = $value;
	          return SUCCESS;
         }
         function Getidusers()
         {
                    return $this->idusers;
         }
         function PreusernameInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PreusernameInsert ) )
	            return PreusernameInsert( $this );
                 else return;
         }
         function PostusernameInsert( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostusernameInsert ) )
	            return PostusernameInsert( $this );
                 else return;
         }
         function PreusernameUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PreusernameUpdate ) )
	            return PreusernameUpdate( $this );
                 else return;
         }
         function PostusernameUpdate( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostusernameUpdate ) )
	            return PostusernameUpdate( $this );
                 else return;
         }
         function PreusernameDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PreusernameDelete ) )
	            return PreusernameDelete( $this );
                 else return;
         }
         function PostusernameDelete( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostusernameDelete ) )
	            return PostusernameDelete( $this );
                 else return;
         }
         function Setusername($value)
         {
                 $this->username = $value;
	          return SUCCESS;
         }
         function Getusername()
         {
                    return $this->username;
         }
         function PresurnameInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PresurnameInsert ) )
	            return PresurnameInsert( $this );
                 else return;
         }
         function PostsurnameInsert( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostsurnameInsert ) )
	            return PostsurnameInsert( $this );
                 else return;
         }
         function PresurnameUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PresurnameUpdate ) )
	            return PresurnameUpdate( $this );
                 else return;
         }
         function PostsurnameUpdate( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostsurnameUpdate ) )
	            return PostsurnameUpdate( $this );
                 else return;
         }
         function PresurnameDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PresurnameDelete ) )
	            return PresurnameDelete( $this );
                 else return;
         }
         function PostsurnameDelete( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostsurnameDelete ) )
	            return PostsurnameDelete( $this );
                 else return;
         }
         function Setsurname($value)
         {
                 $this->surname = $value;
	          return SUCCESS;
         }
         function Getsurname()
         {
                    return $this->surname;
         }
         function PrefirstnameInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrefirstnameInsert ) )
	            return PrefirstnameInsert( $this );
                 else return;
         }
         function PostfirstnameInsert( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostfirstnameInsert ) )
	            return PostfirstnameInsert( $this );
                 else return;
         }
         function PrefirstnameUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrefirstnameUpdate ) )
	            return PrefirstnameUpdate( $this );
                 else return;
         }
         function PostfirstnameUpdate( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostfirstnameUpdate ) )
	            return PostfirstnameUpdate( $this );
                 else return;
         }
         function PrefirstnameDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrefirstnameDelete ) )
	            return PrefirstnameDelete( $this );
                 else return;
         }
         function PostfirstnameDelete( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostfirstnameDelete ) )
	            return PostfirstnameDelete( $this );
                 else return;
         }
         function Setfirstname($value)
         {
                 $this->firstname = $value;
	          return SUCCESS;
         }
         function Getfirstname()
         {
                    return $this->firstname;
         }
         function PreemailaddressInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PreemailaddressInsert ) )
	            return PreemailaddressInsert( $this );
                 else return;
         }
         function PostemailaddressInsert( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostemailaddressInsert ) )
	            return PostemailaddressInsert( $this );
                 else return;
         }
         function PreemailaddressUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PreemailaddressUpdate ) )
	            return PreemailaddressUpdate( $this );
                 else return;
         }
         function PostemailaddressUpdate( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostemailaddressUpdate ) )
	            return PostemailaddressUpdate( $this );
                 else return;
         }
         function PreemailaddressDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PreemailaddressDelete ) )
	            return PreemailaddressDelete( $this );
                 else return;
         }
         function PostemailaddressDelete( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostemailaddressDelete ) )
	            return PostemailaddressDelete( $this );
                 else return;
         }
         function Setemailaddress($value)
         {
                 $this->emailaddress = $value;
	          return SUCCESS;
         }
         function Getemailaddress()
         {
                    return $this->emailaddress;
         }
         function PrepasswordInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrepasswordInsert ) )
	            return PrepasswordInsert( $this );
                 else return;
         }
         function PostpasswordInsert( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostpasswordInsert ) )
	            return PostpasswordInsert( $this );
                 else return;
         }
         function PrepasswordUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrepasswordUpdate ) )
	            return PrepasswordUpdate( $this );
                 else return;
         }
         function PostpasswordUpdate( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostpasswordUpdate ) )
	            return PostpasswordUpdate( $this );
                 else return;
         }
         function PrepasswordDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrepasswordDelete ) )
	            return PrepasswordDelete( $this );
                 else return;
         }
         function PostpasswordDelete( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostpasswordDelete ) )
	            return PostpasswordDelete( $this );
                 else return;
         }
         function Setpassword($value)
         {
                 $this->password = $value;
	          return SUCCESS;
         }
         function Getpassword()
         {
                    return $this->password;
         }
         function Preroles_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idInsert ) )
	            return Preroles_idInsert( $this );
                 else return;
         }
         function Postroles_idInsert( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( Postroles_idInsert ) )
	            return Postroles_idInsert( $this );
                 else return;
         }
         function Preroles_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idUpdate ) )
	            return Preroles_idUpdate( $this );
                 else return;
         }
         function Postroles_idUpdate( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( Postroles_idUpdate ) )
	            return Postroles_idUpdate( $this );
                 else return;
         }
         function Preroles_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idDelete ) )
	            return Preroles_idDelete( $this );
                 else return;
         }
         function Postroles_idDelete( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( Postroles_idDelete ) )
	            return Postroles_idDelete( $this );
                 else return;
         }
         function Setroles_id($value)
         {
                 $this->roles_id = $value;
	          return SUCCESS;
         }
         function Getroles_id()
         {
                    return $this->roles_id;
         }
} /* class users */
