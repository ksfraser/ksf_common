<?php 
//This file was generated by calling php /var/www/html/codemeta/generator.php interapp 

//this script may only be included - so its better to die if called directly.
if ( strpos( $_SERVER["SCRIPT_NAME"], basename(__FILE__) ) !== false ) {
  header( "location: ../index.php" );
  exit;
}

class msgqueue extends generictable 
{
          private $observers;
         var $data; //data passed in by other calls         var $idmsgqueue;
		 /*Index */
         var $msgid;
		 /*Message ID */
         var $mfrom;
		 /*Message From */
         var $mto;
		 /*Message To */
         var $message;
		 /*Message Body */
         var $date;
		 /*Date */
         var $mstatus;
		 /*Message Status */
         function __constructor()
         {
         $this->querytablename = 'msgqueue';
         $this->fieldspec['idmsgqueue']['metadata_id'] = '2862';
         $this->fieldspec['idmsgqueue']['table_name'] = 'msgqueue';
         $this->fieldspec['idmsgqueue']['column_name'] = 'idmsgqueue';
         $this->fieldspec['idmsgqueue']['pretty_name'] = 'Index';
         $this->fieldspec['idmsgqueue']['abstract_data_type'] = 'int';
         $this->fieldspec['idmsgqueue']['db_data_type'] = 'int';
         $this->fieldspec['idmsgqueue']['field_null'] = 'YES';
         $this->fieldspec['idmsgqueue']['field_key'] = '';
         $this->fieldspec['idmsgqueue']['extra_sql'] = ' ';
         $this->fieldspec['idmsgqueue']['html_form_type'] = 'integer';
         $this->fieldspec['idmsgqueue']['html_form_options'] = '';
         $this->fieldspec['idmsgqueue']['html_form_explanation'] = '';
         $this->fieldspec['idmsgqueue']['help_text'] = '';
         $this->fieldspec['idmsgqueue']['mandatory_p'] = 'N';
         $this->fieldspec['idmsgqueue']['sort_key'] = '0';
         $this->fieldspec['idmsgqueue']['form_sort_key'] = '0';
         $this->fieldspec['idmsgqueue']['form_number'] = '1';
         $this->fieldspec['idmsgqueue']['default_value'] = '';
         $this->fieldspec['idmsgqueue']['field_toupper'] = 'NO';
         $this->fieldspec['idmsgqueue']['validationprocname'] = '';
         $this->fieldspec['idmsgqueue']['c_size'] = '10';
         $this->fieldspec['idmsgqueue']['prikey'] = 'Y';
         $this->fieldspec['idmsgqueue']['noedit'] = 'Y';
         $this->fieldspec['idmsgqueue']['nodisplay'] = 'N';
         $this->fieldspec['idmsgqueue']['c_unsigned'] = 'Y';
         $this->fieldspec['idmsgqueue']['c_zerofill'] = 'N';
         $this->fieldspec['idmsgqueue']['c_auto_increment'] = 'Y';
         $this->fieldspec['idmsgqueue']['foreign_table'] = '';
         $this->fieldspec['idmsgqueue']['foreign_key'] = '';
         $this->fieldspec['idmsgqueue']['application'] = 'interapp';
         $this->fieldspec['idmsgqueue']['issearchable'] = '1';
         $this->fieldspec['idmsgqueue']['preinserttrigger'] = '';
         $this->fieldspec['idmsgqueue']['postinserttrigger'] = '';
         $this->fieldspec['idmsgqueue']['preupdatetrigger'] = '';
         $this->fieldspec['idmsgqueue']['postupdatetrigger'] = '';
         $this->fieldspec['idmsgqueue']['predeletetrigger'] = '';
         $this->fieldspec['idmsgqueue']['postdeletetrigger'] = '';
         $this->fieldspec['msgid']['metadata_id'] = '2863';
         $this->fieldspec['msgid']['table_name'] = 'msgqueue';
         $this->fieldspec['msgid']['column_name'] = 'msgid';
         $this->fieldspec['msgid']['pretty_name'] = 'Message ID';
         $this->fieldspec['msgid']['abstract_data_type'] = 'varchar';
         $this->fieldspec['msgid']['db_data_type'] = 'varchar';
         $this->fieldspec['msgid']['field_null'] = 'YES';
         $this->fieldspec['msgid']['field_key'] = '';
         $this->fieldspec['msgid']['extra_sql'] = ' ';
         $this->fieldspec['msgid']['html_form_type'] = 'text';
         $this->fieldspec['msgid']['html_form_options'] = '';
         $this->fieldspec['msgid']['html_form_explanation'] = '';
         $this->fieldspec['msgid']['help_text'] = '';
         $this->fieldspec['msgid']['mandatory_p'] = 'N';
         $this->fieldspec['msgid']['sort_key'] = '0';
         $this->fieldspec['msgid']['form_sort_key'] = '0';
         $this->fieldspec['msgid']['form_number'] = '1';
         $this->fieldspec['msgid']['default_value'] = '';
         $this->fieldspec['msgid']['field_toupper'] = 'NO';
         $this->fieldspec['msgid']['validationprocname'] = '';
         $this->fieldspec['msgid']['c_size'] = '45';
         $this->fieldspec['msgid']['prikey'] = 'N';
         $this->fieldspec['msgid']['noedit'] = 'N';
         $this->fieldspec['msgid']['nodisplay'] = 'N';
         $this->fieldspec['msgid']['c_unsigned'] = 'Y';
         $this->fieldspec['msgid']['c_zerofill'] = 'N';
         $this->fieldspec['msgid']['c_auto_increment'] = 'N';
         $this->fieldspec['msgid']['foreign_table'] = '';
         $this->fieldspec['msgid']['foreign_key'] = '';
         $this->fieldspec['msgid']['application'] = 'interapp';
         $this->fieldspec['msgid']['issearchable'] = '1';
         $this->fieldspec['msgid']['preinserttrigger'] = '';
         $this->fieldspec['msgid']['postinserttrigger'] = '';
         $this->fieldspec['msgid']['preupdatetrigger'] = '';
         $this->fieldspec['msgid']['postupdatetrigger'] = '';
         $this->fieldspec['msgid']['predeletetrigger'] = '';
         $this->fieldspec['msgid']['postdeletetrigger'] = '';
         $this->fieldspec['mfrom']['metadata_id'] = '2864';
         $this->fieldspec['mfrom']['table_name'] = 'msgqueue';
         $this->fieldspec['mfrom']['column_name'] = 'mfrom';
         $this->fieldspec['mfrom']['pretty_name'] = 'Message From';
         $this->fieldspec['mfrom']['abstract_data_type'] = 'varchar';
         $this->fieldspec['mfrom']['db_data_type'] = 'varchar';
         $this->fieldspec['mfrom']['field_null'] = 'YES';
         $this->fieldspec['mfrom']['field_key'] = '';
         $this->fieldspec['mfrom']['extra_sql'] = ' ';
         $this->fieldspec['mfrom']['html_form_type'] = 'text';
         $this->fieldspec['mfrom']['html_form_options'] = '';
         $this->fieldspec['mfrom']['html_form_explanation'] = '';
         $this->fieldspec['mfrom']['help_text'] = '';
         $this->fieldspec['mfrom']['mandatory_p'] = 'N';
         $this->fieldspec['mfrom']['sort_key'] = '0';
         $this->fieldspec['mfrom']['form_sort_key'] = '0';
         $this->fieldspec['mfrom']['form_number'] = '1';
         $this->fieldspec['mfrom']['default_value'] = '';
         $this->fieldspec['mfrom']['field_toupper'] = 'NO';
         $this->fieldspec['mfrom']['validationprocname'] = '';
         $this->fieldspec['mfrom']['c_size'] = '45';
         $this->fieldspec['mfrom']['prikey'] = 'N';
         $this->fieldspec['mfrom']['noedit'] = 'N';
         $this->fieldspec['mfrom']['nodisplay'] = 'N';
         $this->fieldspec['mfrom']['c_unsigned'] = 'N';
         $this->fieldspec['mfrom']['c_zerofill'] = 'N';
         $this->fieldspec['mfrom']['c_auto_increment'] = 'N';
         $this->fieldspec['mfrom']['foreign_table'] = '';
         $this->fieldspec['mfrom']['foreign_key'] = '';
         $this->fieldspec['mfrom']['application'] = 'interapp';
         $this->fieldspec['mfrom']['issearchable'] = '1';
         $this->fieldspec['mfrom']['preinserttrigger'] = '';
         $this->fieldspec['mfrom']['postinserttrigger'] = '';
         $this->fieldspec['mfrom']['preupdatetrigger'] = '';
         $this->fieldspec['mfrom']['postupdatetrigger'] = '';
         $this->fieldspec['mfrom']['predeletetrigger'] = '';
         $this->fieldspec['mfrom']['postdeletetrigger'] = '';
         $this->fieldspec['mto']['metadata_id'] = '2865';
         $this->fieldspec['mto']['table_name'] = 'msgqueue';
         $this->fieldspec['mto']['column_name'] = 'mto';
         $this->fieldspec['mto']['pretty_name'] = 'Message To';
         $this->fieldspec['mto']['abstract_data_type'] = 'varchar';
         $this->fieldspec['mto']['db_data_type'] = 'varchar';
         $this->fieldspec['mto']['field_null'] = 'YES';
         $this->fieldspec['mto']['field_key'] = '';
         $this->fieldspec['mto']['extra_sql'] = ' ';
         $this->fieldspec['mto']['html_form_type'] = 'text';
         $this->fieldspec['mto']['html_form_options'] = '';
         $this->fieldspec['mto']['html_form_explanation'] = '';
         $this->fieldspec['mto']['help_text'] = '';
         $this->fieldspec['mto']['mandatory_p'] = 'N';
         $this->fieldspec['mto']['sort_key'] = '0';
         $this->fieldspec['mto']['form_sort_key'] = '0';
         $this->fieldspec['mto']['form_number'] = '1';
         $this->fieldspec['mto']['default_value'] = '';
         $this->fieldspec['mto']['field_toupper'] = 'NO';
         $this->fieldspec['mto']['validationprocname'] = '';
         $this->fieldspec['mto']['c_size'] = '45';
         $this->fieldspec['mto']['prikey'] = 'N';
         $this->fieldspec['mto']['noedit'] = 'N';
         $this->fieldspec['mto']['nodisplay'] = 'N';
         $this->fieldspec['mto']['c_unsigned'] = 'N';
         $this->fieldspec['mto']['c_zerofill'] = 'N';
         $this->fieldspec['mto']['c_auto_increment'] = 'N';
         $this->fieldspec['mto']['foreign_table'] = '';
         $this->fieldspec['mto']['foreign_key'] = '';
         $this->fieldspec['mto']['application'] = 'interapp';
         $this->fieldspec['mto']['issearchable'] = '1';
         $this->fieldspec['mto']['preinserttrigger'] = '';
         $this->fieldspec['mto']['postinserttrigger'] = '';
         $this->fieldspec['mto']['preupdatetrigger'] = '';
         $this->fieldspec['mto']['postupdatetrigger'] = '';
         $this->fieldspec['mto']['predeletetrigger'] = '';
         $this->fieldspec['mto']['postdeletetrigger'] = '';
         $this->fieldspec['message']['metadata_id'] = '2866';
         $this->fieldspec['message']['table_name'] = 'msgqueue';
         $this->fieldspec['message']['column_name'] = 'message';
         $this->fieldspec['message']['pretty_name'] = 'Message Body';
         $this->fieldspec['message']['abstract_data_type'] = 'text';
         $this->fieldspec['message']['db_data_type'] = 'text';
         $this->fieldspec['message']['field_null'] = 'YES';
         $this->fieldspec['message']['field_key'] = '';
         $this->fieldspec['message']['extra_sql'] = ' ';
         $this->fieldspec['message']['html_form_type'] = 'text';
         $this->fieldspec['message']['html_form_options'] = '';
         $this->fieldspec['message']['html_form_explanation'] = '';
         $this->fieldspec['message']['help_text'] = '';
         $this->fieldspec['message']['mandatory_p'] = 'N';
         $this->fieldspec['message']['sort_key'] = '0';
         $this->fieldspec['message']['form_sort_key'] = '0';
         $this->fieldspec['message']['form_number'] = '1';
         $this->fieldspec['message']['default_value'] = '';
         $this->fieldspec['message']['field_toupper'] = 'NO';
         $this->fieldspec['message']['validationprocname'] = '';
         $this->fieldspec['message']['c_size'] = '';
         $this->fieldspec['message']['prikey'] = 'N';
         $this->fieldspec['message']['noedit'] = 'N';
         $this->fieldspec['message']['nodisplay'] = 'N';
         $this->fieldspec['message']['c_unsigned'] = 'N';
         $this->fieldspec['message']['c_zerofill'] = 'N';
         $this->fieldspec['message']['c_auto_increment'] = 'N';
         $this->fieldspec['message']['foreign_table'] = '';
         $this->fieldspec['message']['foreign_key'] = '';
         $this->fieldspec['message']['application'] = 'interapp';
         $this->fieldspec['message']['issearchable'] = '1';
         $this->fieldspec['message']['preinserttrigger'] = '';
         $this->fieldspec['message']['postinserttrigger'] = '';
         $this->fieldspec['message']['preupdatetrigger'] = '';
         $this->fieldspec['message']['postupdatetrigger'] = '';
         $this->fieldspec['message']['predeletetrigger'] = '';
         $this->fieldspec['message']['postdeletetrigger'] = '';
         $this->fieldspec['date']['metadata_id'] = '2867';
         $this->fieldspec['date']['table_name'] = 'msgqueue';
         $this->fieldspec['date']['column_name'] = 'date';
         $this->fieldspec['date']['pretty_name'] = 'Date';
         $this->fieldspec['date']['abstract_data_type'] = 'timestamp';
         $this->fieldspec['date']['db_data_type'] = 'timestamp';
         $this->fieldspec['date']['field_null'] = 'YES';
         $this->fieldspec['date']['field_key'] = '';
         $this->fieldspec['date']['extra_sql'] = ' ';
         $this->fieldspec['date']['html_form_type'] = 'datetime';
         $this->fieldspec['date']['html_form_options'] = '';
         $this->fieldspec['date']['html_form_explanation'] = '';
         $this->fieldspec['date']['help_text'] = '';
         $this->fieldspec['date']['mandatory_p'] = 'N';
         $this->fieldspec['date']['sort_key'] = '0';
         $this->fieldspec['date']['form_sort_key'] = '0';
         $this->fieldspec['date']['form_number'] = '1';
         $this->fieldspec['date']['default_value'] = 'NULL';
         $this->fieldspec['date']['field_toupper'] = 'NO';
         $this->fieldspec['date']['validationprocname'] = '';
         $this->fieldspec['date']['c_size'] = '';
         $this->fieldspec['date']['prikey'] = 'N';
         $this->fieldspec['date']['noedit'] = 'Y';
         $this->fieldspec['date']['nodisplay'] = 'N';
         $this->fieldspec['date']['c_unsigned'] = 'N';
         $this->fieldspec['date']['c_zerofill'] = 'N';
         $this->fieldspec['date']['c_auto_increment'] = 'N';
         $this->fieldspec['date']['foreign_table'] = '';
         $this->fieldspec['date']['foreign_key'] = '';
         $this->fieldspec['date']['application'] = 'interapp';
         $this->fieldspec['date']['issearchable'] = '1';
         $this->fieldspec['date']['preinserttrigger'] = '';
         $this->fieldspec['date']['postinserttrigger'] = '';
         $this->fieldspec['date']['preupdatetrigger'] = '';
         $this->fieldspec['date']['postupdatetrigger'] = '';
         $this->fieldspec['date']['predeletetrigger'] = '';
         $this->fieldspec['date']['postdeletetrigger'] = '';
         $this->fieldspec['mstatus']['metadata_id'] = '2868';
         $this->fieldspec['mstatus']['table_name'] = 'msgqueue';
         $this->fieldspec['mstatus']['column_name'] = 'mstatus';
         $this->fieldspec['mstatus']['pretty_name'] = 'Message Status';
         $this->fieldspec['mstatus']['abstract_data_type'] = 'varchar';
         $this->fieldspec['mstatus']['db_data_type'] = 'varchar';
         $this->fieldspec['mstatus']['field_null'] = 'YES';
         $this->fieldspec['mstatus']['field_key'] = '';
         $this->fieldspec['mstatus']['extra_sql'] = ' ';
         $this->fieldspec['mstatus']['html_form_type'] = 'text';
         $this->fieldspec['mstatus']['html_form_options'] = '';
         $this->fieldspec['mstatus']['html_form_explanation'] = '';
         $this->fieldspec['mstatus']['help_text'] = '';
         $this->fieldspec['mstatus']['mandatory_p'] = 'N';
         $this->fieldspec['mstatus']['sort_key'] = '0';
         $this->fieldspec['mstatus']['form_sort_key'] = '0';
         $this->fieldspec['mstatus']['form_number'] = '1';
         $this->fieldspec['mstatus']['default_value'] = 'new';
         $this->fieldspec['mstatus']['field_toupper'] = 'NO';
         $this->fieldspec['mstatus']['validationprocname'] = '';
         $this->fieldspec['mstatus']['c_size'] = '45';
         $this->fieldspec['mstatus']['prikey'] = 'N';
         $this->fieldspec['mstatus']['noedit'] = 'Y';
         $this->fieldspec['mstatus']['nodisplay'] = 'N';
         $this->fieldspec['mstatus']['c_unsigned'] = 'Y';
         $this->fieldspec['mstatus']['c_zerofill'] = 'N';
         $this->fieldspec['mstatus']['c_auto_increment'] = 'N';
         $this->fieldspec['mstatus']['foreign_table'] = '';
         $this->fieldspec['mstatus']['foreign_key'] = '';
         $this->fieldspec['mstatus']['application'] = 'interapp';
         $this->fieldspec['mstatus']['issearchable'] = '1';
         $this->fieldspec['mstatus']['preinserttrigger'] = '';
         $this->fieldspec['mstatus']['postinserttrigger'] = '';
         $this->fieldspec['mstatus']['preupdatetrigger'] = '';
         $this->fieldspec['mstatus']['postupdatetrigger'] = '';
         $this->fieldspec['mstatus']['predeletetrigger'] = '';
         $this->fieldspec['mstatus']['postdeletetrigger'] = '';
         $this->fieldlist = array('idmsgqueue', 'msgid', 'mfrom', 'mto', 'message', 'date', 'mstatus');
         $this->searchlist = array('idmsgqueue', 'msgid', 'mfrom', 'mto', 'message', 'date', 'mstatus', );
	         return SUCCESS;
         }
         function msgqueue()
         { //For older php which doesn't have constructor
              return $this->__constructor();
         }
         function Push()
         {
	         $_SESSION['msgqueue'] = serialize($this);
	         return SUCCESS;
         }
         function Pop()
         {
                 //Can't do this in self - this is how to do it outside
	       //  $this = unserialize($_SESSION['msgqueue']);
	         return SUCCESS;
         }
         function ObserverRegister( $observer, $event )
         {
                 $this->observers[$event][] = $observer;
	         return SUCCESS;
         }
         function ObserverDeRegister( $observer )
         {
                 $this->observers[] = array_diff( $this->observers, array( $observer) );
	         return SUCCESS;
         }
         function ObserverNotify( $event, $msg )
         {
                 if ( isset( $this->observers[$event] ) )
                 	foreach ( $this->observers[$event] as $obs ) 
                 	{
                      		$obs->notify( $event, $msg );
                 	}
                 /* '**' being used as 'ALL' */
                 if ( isset( $this->observers['**'] ) )
                 	foreach ( $this->observers['**'] as $obs ) 
                 	{
                      		$obs->notify( $event, $msg );
                 	}
	         return SUCCESS;
         }
         function notify( $object )
         {
                 //Called when another object we are observing sends us a notification
	         return SUCCESS;
         }
         function PreidmsgqueueInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PreidmsgqueueInsert ) )
	            return PreidmsgqueueInsert( $this );
                 else return;
         }
         function PostidmsgqueueInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PreidmsgqueueInsert ) )
	            return PreidmsgqueueInsert( $this );
                 else return;
         }
         function PreidmsgqueueUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PreidmsgqueueUpdate ) )
	            return PreidmsgqueueUpdate( $this );
                 else return;
         }
         function PostidmsgqueueUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PreidmsgqueueUpdate ) )
	            return PreidmsgqueueUpdate( $this );
                 else return;
         }
         function PreidmsgqueueDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PreidmsgqueueDelete ) )
	            return PreidmsgqueueDelete( $this );
                 else return;
         }
         function PostidmsgqueueDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PreidmsgqueueDelete ) )
	            return PreidmsgqueueDelete( $this );
                 else return;
         }
         function Setidmsgqueue($value)
         {
                 $this->idmsgqueue = $value;
	          return SUCCESS;
         }
         function Getidmsgqueue()
         {
                    return $this->idmsgqueue;
         }
         function PremsgidInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremsgidInsert ) )
	            return PremsgidInsert( $this );
                 else return;
         }
         function PostmsgidInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremsgidInsert ) )
	            return PremsgidInsert( $this );
                 else return;
         }
         function PremsgidUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremsgidUpdate ) )
	            return PremsgidUpdate( $this );
                 else return;
         }
         function PostmsgidUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremsgidUpdate ) )
	            return PremsgidUpdate( $this );
                 else return;
         }
         function PremsgidDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremsgidDelete ) )
	            return PremsgidDelete( $this );
                 else return;
         }
         function PostmsgidDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremsgidDelete ) )
	            return PremsgidDelete( $this );
                 else return;
         }
         function Setmsgid($value)
         {
                 $this->msgid = $value;
	          return SUCCESS;
         }
         function Getmsgid()
         {
                    return $this->msgid;
         }
         function PremfromInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremfromInsert ) )
	            return PremfromInsert( $this );
                 else return;
         }
         function PostmfromInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremfromInsert ) )
	            return PremfromInsert( $this );
                 else return;
         }
         function PremfromUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremfromUpdate ) )
	            return PremfromUpdate( $this );
                 else return;
         }
         function PostmfromUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremfromUpdate ) )
	            return PremfromUpdate( $this );
                 else return;
         }
         function PremfromDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremfromDelete ) )
	            return PremfromDelete( $this );
                 else return;
         }
         function PostmfromDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremfromDelete ) )
	            return PremfromDelete( $this );
                 else return;
         }
         function Setmfrom($value)
         {
                 $this->mfrom = $value;
	          return SUCCESS;
         }
         function Getmfrom()
         {
                    return $this->mfrom;
         }
         function PremtoInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremtoInsert ) )
	            return PremtoInsert( $this );
                 else return;
         }
         function PostmtoInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremtoInsert ) )
	            return PremtoInsert( $this );
                 else return;
         }
         function PremtoUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremtoUpdate ) )
	            return PremtoUpdate( $this );
                 else return;
         }
         function PostmtoUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremtoUpdate ) )
	            return PremtoUpdate( $this );
                 else return;
         }
         function PremtoDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremtoDelete ) )
	            return PremtoDelete( $this );
                 else return;
         }
         function PostmtoDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremtoDelete ) )
	            return PremtoDelete( $this );
                 else return;
         }
         function Setmto($value)
         {
                 $this->mto = $value;
	          return SUCCESS;
         }
         function Getmto()
         {
                    return $this->mto;
         }
         function PremessageInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremessageInsert ) )
	            return PremessageInsert( $this );
                 else return;
         }
         function PostmessageInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremessageInsert ) )
	            return PremessageInsert( $this );
                 else return;
         }
         function PremessageUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremessageUpdate ) )
	            return PremessageUpdate( $this );
                 else return;
         }
         function PostmessageUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremessageUpdate ) )
	            return PremessageUpdate( $this );
                 else return;
         }
         function PremessageDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremessageDelete ) )
	            return PremessageDelete( $this );
                 else return;
         }
         function PostmessageDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremessageDelete ) )
	            return PremessageDelete( $this );
                 else return;
         }
         function Setmessage($value)
         {
                 $this->message = $value;
	          return SUCCESS;
         }
         function Getmessage()
         {
                    return $this->message;
         }
         function PredateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredateInsert ) )
	            return PredateInsert( $this );
                 else return;
         }
         function PostdateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredateInsert ) )
	            return PredateInsert( $this );
                 else return;
         }
         function PredateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredateUpdate ) )
	            return PredateUpdate( $this );
                 else return;
         }
         function PostdateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredateUpdate ) )
	            return PredateUpdate( $this );
                 else return;
         }
         function PredateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredateDelete ) )
	            return PredateDelete( $this );
                 else return;
         }
         function PostdateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredateDelete ) )
	            return PredateDelete( $this );
                 else return;
         }
         function Setdate($value)
         {
                 $this->date = $value;
	          return SUCCESS;
         }
         function Getdate()
         {
                    return $this->date;
         }
         function PremstatusInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremstatusInsert ) )
	            return PremstatusInsert( $this );
                 else return;
         }
         function PostmstatusInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremstatusInsert ) )
	            return PremstatusInsert( $this );
                 else return;
         }
         function PremstatusUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremstatusUpdate ) )
	            return PremstatusUpdate( $this );
                 else return;
         }
         function PostmstatusUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremstatusUpdate ) )
	            return PremstatusUpdate( $this );
                 else return;
         }
         function PremstatusDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremstatusDelete ) )
	            return PremstatusDelete( $this );
                 else return;
         }
         function PostmstatusDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PremstatusDelete ) )
	            return PremstatusDelete( $this );
                 else return;
         }
         function Setmstatus($value)
         {
                 $this->mstatus = $value;
	          return SUCCESS;
         }
         function Getmstatus()
         {
                    return $this->mstatus;
         }
} /* class msgqueue */
