<?php 
//This file was generated by calling php /var/www/html/skel-app/generator.php acl 

//this script may only be included - so its better to die if called directly.
if ( strpos( $_SERVER["SCRIPT_NAME"], basename(__FILE__) ) !== false ) {
  header( "location: ../index.php" );
  exit;
}

include_once('roles.extend.php');

class roles extends generictable 
{
         private $observers;
         var $data; //data passed in by other calls
         var $h_role_access;
		 /*Role Access Number - 2 ^ (id - 1) */
         var $h_compesate_access;
		 /*A composate Role Access Number */
         var $roledescription;
		 /*Role Description */
         var $roles_id;
		 /*Role Index */
         function __construct()
         {
         	$this->querytablename = 'roles';
         	$this->fieldspec['h_role_access']['metadata_id'] = '3082';
         	$this->fieldspec['h_role_access']['table_name'] = 'roles';
         	$this->fieldspec['h_role_access']['column_name'] = 'h_role_access';
         	$this->fieldspec['h_role_access']['pretty_name'] = 'Role Access Number - 2 ^ (id - 1)';
         	$this->fieldspec['h_role_access']['abstract_data_type'] = 'int';
         	$this->fieldspec['h_role_access']['db_data_type'] = 'int';
         	$this->fieldspec['h_role_access']['field_null'] = 'NO';
         	$this->fieldspec['h_role_access']['field_key'] = '0';
         	$this->fieldspec['h_role_access']['extra_sql'] = ' ';
         	$this->fieldspec['h_role_access']['html_form_type'] = 'hidden';
         	$this->fieldspec['h_role_access']['html_form_options'] = ' ';
         	$this->fieldspec['h_role_access']['html_form_explanation'] = ' ';
         	$this->fieldspec['h_role_access']['help_text'] = ' ';
         	$this->fieldspec['h_role_access']['mandatory_p'] = 'Y';
         	$this->fieldspec['h_role_access']['sort_key'] = '0';
         	$this->fieldspec['h_role_access']['form_sort_key'] = '0';
         	$this->fieldspec['h_role_access']['form_number'] = '1';
         	$this->fieldspec['h_role_access']['default_value'] = '';
         	$this->fieldspec['h_role_access']['field_toupper'] = 'YES';
         	$this->fieldspec['h_role_access']['validationprocname'] = ' ';
         	$this->fieldspec['h_role_access']['c_size'] = '8';
         	$this->fieldspec['h_role_access']['prikey'] = 'N';
         	$this->fieldspec['h_role_access']['noedit'] = 'N';
         	$this->fieldspec['h_role_access']['nodisplay'] = 'N';
         	$this->fieldspec['h_role_access']['c_unsigned'] = 'N';
         	$this->fieldspec['h_role_access']['c_zerofill'] = 'N';
         	$this->fieldspec['h_role_access']['c_auto_increment'] = 'N';
         	$this->fieldspec['h_role_access']['foreign_table'] = '';
         	$this->fieldspec['h_role_access']['foreign_key'] = '';
         	$this->fieldspec['h_role_access']['application'] = 'acl';
         	$this->fieldspec['h_role_access']['issearchable'] = '0';
         	$this->fieldspec['h_role_access']['preinserttrigger'] = '';
         	$this->fieldspec['h_role_access']['postinserttrigger'] = '';
         	$this->fieldspec['h_role_access']['preupdatetrigger'] = '';
         	$this->fieldspec['h_role_access']['postupdatetrigger'] = '';
         	$this->fieldspec['h_role_access']['predeletetrigger'] = '';
         	$this->fieldspec['h_role_access']['postdeletetrigger'] = '';
         	$this->fieldspec['h_role_access']['postinsert'] = 'Posth_role_accessInsert';
         	$this->fieldspec['h_role_access']['postupdate'] = 'Posth_role_accessUpdate';
         	$this->fieldspec['h_role_access']['postdelete'] = 'Posth_role_accessDelete';
         	$this->fieldspec['h_role_access']['preinsert'] = 'Preh_role_accessInsert';
         	$this->fieldspec['h_role_access']['preupdate'] = 'Preh_role_accessUpdate';
         	$this->fieldspec['h_role_access']['predelete'] = 'Preh_role_accessDelete';
         	$this->fieldspec['h_compesate_access']['metadata_id'] = '3083';
         	$this->fieldspec['h_compesate_access']['table_name'] = 'roles';
         	$this->fieldspec['h_compesate_access']['column_name'] = 'h_compesate_access';
         	$this->fieldspec['h_compesate_access']['pretty_name'] = 'A composate Role Access Number';
         	$this->fieldspec['h_compesate_access']['abstract_data_type'] = 'double';
         	$this->fieldspec['h_compesate_access']['db_data_type'] = 'double';
         	$this->fieldspec['h_compesate_access']['field_null'] = 'NO';
         	$this->fieldspec['h_compesate_access']['field_key'] = '0';
         	$this->fieldspec['h_compesate_access']['extra_sql'] = ' ';
         	$this->fieldspec['h_compesate_access']['html_form_type'] = 'hidden';
         	$this->fieldspec['h_compesate_access']['html_form_options'] = '<fk><field>roledescription</field><key>h_role_access</key></fk>';
         	$this->fieldspec['h_compesate_access']['html_form_explanation'] = ' ';
         	$this->fieldspec['h_compesate_access']['help_text'] = ' ';
         	$this->fieldspec['h_compesate_access']['mandatory_p'] = 'N';
         	$this->fieldspec['h_compesate_access']['sort_key'] = '0';
         	$this->fieldspec['h_compesate_access']['form_sort_key'] = '0';
         	$this->fieldspec['h_compesate_access']['form_number'] = '1';
         	$this->fieldspec['h_compesate_access']['default_value'] = '0';
         	$this->fieldspec['h_compesate_access']['field_toupper'] = 'YES';
         	$this->fieldspec['h_compesate_access']['validationprocname'] = ' ';
         	$this->fieldspec['h_compesate_access']['c_size'] = '16';
         	$this->fieldspec['h_compesate_access']['prikey'] = 'N';
         	$this->fieldspec['h_compesate_access']['noedit'] = 'N';
         	$this->fieldspec['h_compesate_access']['nodisplay'] = 'N';
         	$this->fieldspec['h_compesate_access']['c_unsigned'] = 'N';
         	$this->fieldspec['h_compesate_access']['c_zerofill'] = 'N';
         	$this->fieldspec['h_compesate_access']['c_auto_increment'] = 'N';
         	$this->fieldspec['h_compesate_access']['foreign_table'] = '';
         	$this->fieldspec['h_compesate_access']['foreign_key'] = '';
         	$this->fieldspec['h_compesate_access']['application'] = 'acl';
         	$this->fieldspec['h_compesate_access']['issearchable'] = '0';
         	$this->fieldspec['h_compesate_access']['preinserttrigger'] = '';
         	$this->fieldspec['h_compesate_access']['postinserttrigger'] = '';
         	$this->fieldspec['h_compesate_access']['preupdatetrigger'] = '';
         	$this->fieldspec['h_compesate_access']['postupdatetrigger'] = '';
         	$this->fieldspec['h_compesate_access']['predeletetrigger'] = '';
         	$this->fieldspec['h_compesate_access']['postdeletetrigger'] = '';
         	$this->fieldspec['h_compesate_access']['postinsert'] = 'Posth_compesate_accessInsert';
         	$this->fieldspec['h_compesate_access']['postupdate'] = 'Posth_compesate_accessUpdate';
         	$this->fieldspec['h_compesate_access']['postdelete'] = 'Posth_compesate_accessDelete';
         	$this->fieldspec['h_compesate_access']['preinsert'] = 'Preh_compesate_accessInsert';
         	$this->fieldspec['h_compesate_access']['preupdate'] = 'Preh_compesate_accessUpdate';
         	$this->fieldspec['h_compesate_access']['predelete'] = 'Preh_compesate_accessDelete';
         	$this->fieldspec['roledescription']['metadata_id'] = '2880';
         	$this->fieldspec['roledescription']['table_name'] = 'roles';
         	$this->fieldspec['roledescription']['column_name'] = 'roledescription';
         	$this->fieldspec['roledescription']['pretty_name'] = 'Role Description';
         	$this->fieldspec['roledescription']['abstract_data_type'] = 'string';
         	$this->fieldspec['roledescription']['db_data_type'] = 'varchar';
         	$this->fieldspec['roledescription']['field_null'] = 'NO';
         	$this->fieldspec['roledescription']['field_key'] = '0';
         	$this->fieldspec['roledescription']['extra_sql'] = ' ';
         	$this->fieldspec['roledescription']['html_form_type'] = 'text';
         	$this->fieldspec['roledescription']['html_form_options'] = ' ';
         	$this->fieldspec['roledescription']['html_form_explanation'] = ' ';
         	$this->fieldspec['roledescription']['help_text'] = ' ';
         	$this->fieldspec['roledescription']['mandatory_p'] = 'Y';
         	$this->fieldspec['roledescription']['sort_key'] = '0';
         	$this->fieldspec['roledescription']['form_sort_key'] = '0';
         	$this->fieldspec['roledescription']['form_number'] = '1';
         	$this->fieldspec['roledescription']['default_value'] = '';
         	$this->fieldspec['roledescription']['field_toupper'] = 'YES';
         	$this->fieldspec['roledescription']['validationprocname'] = ' ';
         	$this->fieldspec['roledescription']['c_size'] = '45';
         	$this->fieldspec['roledescription']['prikey'] = 'N';
         	$this->fieldspec['roledescription']['noedit'] = 'N';
         	$this->fieldspec['roledescription']['nodisplay'] = 'N';
         	$this->fieldspec['roledescription']['c_unsigned'] = 'N';
         	$this->fieldspec['roledescription']['c_zerofill'] = 'N';
         	$this->fieldspec['roledescription']['c_auto_increment'] = 'N';
         	$this->fieldspec['roledescription']['foreign_table'] = '';
         	$this->fieldspec['roledescription']['foreign_key'] = '';
         	$this->fieldspec['roledescription']['application'] = 'acl';
         	$this->fieldspec['roledescription']['issearchable'] = '1';
         	$this->fieldspec['roledescription']['preinserttrigger'] = '';
         	$this->fieldspec['roledescription']['postinserttrigger'] = '';
         	$this->fieldspec['roledescription']['preupdatetrigger'] = '';
         	$this->fieldspec['roledescription']['postupdatetrigger'] = '';
         	$this->fieldspec['roledescription']['predeletetrigger'] = '';
         	$this->fieldspec['roledescription']['postdeletetrigger'] = '';
         	$this->fieldspec['roledescription']['postinsert'] = 'PostroledescriptionInsert';
         	$this->fieldspec['roledescription']['postupdate'] = 'PostroledescriptionUpdate';
         	$this->fieldspec['roledescription']['postdelete'] = 'PostroledescriptionDelete';
         	$this->fieldspec['roledescription']['preinsert'] = 'PreroledescriptionInsert';
         	$this->fieldspec['roledescription']['preupdate'] = 'PreroledescriptionUpdate';
         	$this->fieldspec['roledescription']['predelete'] = 'PreroledescriptionDelete';
         	$this->fieldspec['roles_id']['metadata_id'] = '2881';
         	$this->fieldspec['roles_id']['table_name'] = 'roles';
         	$this->fieldspec['roles_id']['column_name'] = 'roles_id';
         	$this->fieldspec['roles_id']['pretty_name'] = 'Role Index';
         	$this->fieldspec['roles_id']['abstract_data_type'] = 'flags';
         	$this->fieldspec['roles_id']['db_data_type'] = 'integer';
         	$this->fieldspec['roles_id']['field_null'] = 'NO';
         	$this->fieldspec['roles_id']['field_key'] = '0';
         	$this->fieldspec['roles_id']['extra_sql'] = ' ';
         	$this->fieldspec['roles_id']['html_form_type'] = 'hidden';
         	$this->fieldspec['roles_id']['html_form_options'] = ' ';
         	$this->fieldspec['roles_id']['html_form_explanation'] = ' ';
         	$this->fieldspec['roles_id']['help_text'] = ' ';
         	$this->fieldspec['roles_id']['mandatory_p'] = 'Y';
         	$this->fieldspec['roles_id']['sort_key'] = '0';
         	$this->fieldspec['roles_id']['form_sort_key'] = '0';
         	$this->fieldspec['roles_id']['form_number'] = '1';
         	$this->fieldspec['roles_id']['default_value'] = '0';
         	$this->fieldspec['roles_id']['field_toupper'] = 'NO';
         	$this->fieldspec['roles_id']['validationprocname'] = ' ';
         	$this->fieldspec['roles_id']['c_size'] = '8';
         	$this->fieldspec['roles_id']['prikey'] = 'Y';
         	$this->fieldspec['roles_id']['noedit'] = 'N';
         	$this->fieldspec['roles_id']['nodisplay'] = 'N';
         	$this->fieldspec['roles_id']['c_unsigned'] = 'N';
         	$this->fieldspec['roles_id']['c_zerofill'] = 'N';
         	$this->fieldspec['roles_id']['c_auto_increment'] = 'N';
         	$this->fieldspec['roles_id']['foreign_table'] = '';
         	$this->fieldspec['roles_id']['foreign_key'] = '';
         	$this->fieldspec['roles_id']['application'] = 'acl';
         	$this->fieldspec['roles_id']['issearchable'] = '1';
         	$this->fieldspec['roles_id']['preinserttrigger'] = '';
         	$this->fieldspec['roles_id']['postinserttrigger'] = 'accessfix';
         	$this->fieldspec['roles_id']['preupdatetrigger'] = '';
         	$this->fieldspec['roles_id']['postupdatetrigger'] = 'accessfix';
         	$this->fieldspec['roles_id']['predeletetrigger'] = '';
         	$this->fieldspec['roles_id']['postdeletetrigger'] = '';
         	$this->fieldspec['roles_id']['postinsert'] = 'Postroles_idInsert';
         	$this->fieldspec['roles_id']['postupdate'] = 'Postroles_idUpdate';
         	$this->fieldspec['roles_id']['postdelete'] = 'Postroles_idDelete';
         	$this->fieldspec['roles_id']['preinsert'] = 'Preroles_idInsert';
         	$this->fieldspec['roles_id']['preupdate'] = 'Preroles_idUpdate';
         	$this->fieldspec['roles_id']['predelete'] = 'Preroles_idDelete';
         	$this->fieldlist = array('h_role_access', 'h_compesate_access', 'roledescription', 'roles_id');
         	$this->searchlist = array('roledescription', 'roles_id', );
	         return SUCCESS;
         }
         function roles()
         { //For older php which doesn't have constructor
              return $this->__construct();
         }
         function Push()
         {
	         $_SESSION['roles'] = serialize($this);
	         return SUCCESS;
         }
         function Pop()
         {
                 //Can't do this in self - this is how to do it outside
	       //  $this = unserialize($_SESSION['roles']);
	         return SUCCESS;
         }
         function ObserverRegister( $observer, $event )
         {
                 $this->observers[$event][] = $observer;
	         return SUCCESS;
         }
         function ObserverDeRegister( $observer )
         {
                 $this->observers[] = array_diff( $this->observers, array( $observer) );
	         return SUCCESS;
         }
         function ObserverNotify( $event, $msg )
         {
                 if ( isset( $this->observers[$event] ) )
                 	foreach ( $this->observers[$event] as $obs ) 
                 	{
                      		$obs->notify( $event, $msg );
                 	}
                 /* '**' being used as 'ALL' */
                 if ( isset( $this->observers['**'] ) )
                 	foreach ( $this->observers['**'] as $obs ) 
                 	{
                      		$obs->notify( $event, $msg );
                 	}
	         return SUCCESS;
         }
         function notify( $object )
         {
                 //Called when another object we are observing sends us a notification
	         return SUCCESS;
         }
         function Preh_role_accessInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preh_role_accessInsert ) )
	            return Preh_role_accessInsert( $this );
                 else return;
         }
         function Posth_role_accessInsert( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( Posth_role_accessInsert ) )
	            return Posth_role_accessInsert( $this );
                 else return;
         }
         function Preh_role_accessUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preh_role_accessUpdate ) )
	            return Preh_role_accessUpdate( $this );
                 else return;
         }
         function Posth_role_accessUpdate( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( Posth_role_accessUpdate ) )
	            return Posth_role_accessUpdate( $this );
                 else return;
         }
         function Preh_role_accessDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preh_role_accessDelete ) )
	            return Preh_role_accessDelete( $this );
                 else return;
         }
         function Posth_role_accessDelete( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( Posth_role_accessDelete ) )
	            return Posth_role_accessDelete( $this );
                 else return;
         }
         function Seth_role_access($value)
         {
                 $this->h_role_access = $value;
	          return SUCCESS;
         }
         function Geth_role_access()
         {
                    return $this->h_role_access;
         }
         function Preh_compesate_accessInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preh_compesate_accessInsert ) )
	            return Preh_compesate_accessInsert( $this );
                 else return;
         }
         function Posth_compesate_accessInsert( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( Posth_compesate_accessInsert ) )
	            return Posth_compesate_accessInsert( $this );
                 else return;
         }
         function Preh_compesate_accessUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preh_compesate_accessUpdate ) )
	            return Preh_compesate_accessUpdate( $this );
                 else return;
         }
         function Posth_compesate_accessUpdate( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( Posth_compesate_accessUpdate ) )
	            return Posth_compesate_accessUpdate( $this );
                 else return;
         }
         function Preh_compesate_accessDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preh_compesate_accessDelete ) )
	            return Preh_compesate_accessDelete( $this );
                 else return;
         }
         function Posth_compesate_accessDelete( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( Posth_compesate_accessDelete ) )
	            return Posth_compesate_accessDelete( $this );
                 else return;
         }
         function Seth_compesate_access($value)
         {
                 $this->h_compesate_access = $value;
	          return SUCCESS;
         }
         function Geth_compesate_access()
         {
                    return $this->h_compesate_access;
         }
         function PreroledescriptionInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PreroledescriptionInsert ) )
	            return PreroledescriptionInsert( $this );
                 else return;
         }
         function PostroledescriptionInsert( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostroledescriptionInsert ) )
	            return PostroledescriptionInsert( $this );
                 else return;
         }
         function PreroledescriptionUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PreroledescriptionUpdate ) )
	            return PreroledescriptionUpdate( $this );
                 else return;
         }
         function PostroledescriptionUpdate( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostroledescriptionUpdate ) )
	            return PostroledescriptionUpdate( $this );
                 else return;
         }
         function PreroledescriptionDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PreroledescriptionDelete ) )
	            return PreroledescriptionDelete( $this );
                 else return;
         }
         function PostroledescriptionDelete( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( PostroledescriptionDelete ) )
	            return PostroledescriptionDelete( $this );
                 else return;
         }
         function Setroledescription($value)
         {
                 $this->roledescription = $value;
	          return SUCCESS;
         }
         function Getroledescription()
         {
                    return $this->roledescription;
         }
         function Preroles_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idInsert ) )
	            return Preroles_idInsert( $this );
                 else return;
         }
         function Postroles_idInsert( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( Postroles_idInsert ) )
	            return Postroles_idInsert( $this );
                 else return;
         }
         function Preroles_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idUpdate ) )
	            return Preroles_idUpdate( $this );
                 else return;
         }
         function Postroles_idUpdate( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( Postroles_idUpdate ) )
	            return Postroles_idUpdate( $this );
                 else return;
         }
         function Preroles_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idDelete ) )
	            return Preroles_idDelete( $this );
                 else return;
         }
         function Postroles_idDelete( $data, $lastinsert = 0 )
         {
         $this->data = $data;
                 if ( is_callable( Postroles_idDelete ) )
	            return Postroles_idDelete( $this );
                 else return;
         }
         function Setroles_id($value)
         {
                 $this->roles_id = $value;
	          return SUCCESS;
         }
         function Getroles_id()
         {
                    return $this->roles_id;
         }
} /* class roles */
