<?php 
//This file was generated by calling php /var/www/html/codemeta/generator.php workflow 

//this script may only be included - so its better to die if called directly.
if ( strpos( $_SERVER["SCRIPT_NAME"], basename(__FILE__) ) !== false ) {
  header( "location: ../index.php" );
  exit;
}

class stateworkflow extends generictable 
{
          private $observers;
         var $data; //data passed in by other calls         var $workflow_id;
		 /* */
         var $workflow_name;
		 /* */
         var $workflow_desc;
		 /* */
         var $start_task_id;
		 /* */
         var $is_valid;
		 /* */
         var $workflow_errors;
		 /* */
         var $start_date;
		 /* */
         var $end_date;
		 /* */
         var $created_date;
		 /* */
         var $created_user;
		 /* */
         var $revised_date;
		 /* */
         var $revised_user;
		 /* */
         var $workflow_id;
		 /* */
         var $workflow_name;
		 /* */
         var $workflow_desc;
		 /* */
         var $start_task_id;
		 /* */
         var $is_valid;
		 /* */
         var $workflow_errors;
		 /* */
         var $start_date;
		 /* */
         var $end_date;
		 /* */
         var $created_date;
		 /* */
         var $created_user;
		 /* */
         var $revised_date;
		 /* */
         var $revised_user;
		 /* */
         function __constructor()
         {
         $this->querytablename = 'stateworkflow';
         $this->fieldspec['workflow_id']['metadata_id'] = '2620';
         $this->fieldspec['workflow_id']['table_name'] = 'stateworkflow';
         $this->fieldspec['workflow_id']['column_name'] = 'workflow_id';
         $this->fieldspec['workflow_id']['pretty_name'] = '';
         $this->fieldspec['workflow_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['db_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['field_null'] = 'YES';
         $this->fieldspec['workflow_id']['field_key'] = '';
         $this->fieldspec['workflow_id']['extra_sql'] = ' ';
         $this->fieldspec['workflow_id']['html_form_type'] = 'integer';
         $this->fieldspec['workflow_id']['html_form_options'] = '';
         $this->fieldspec['workflow_id']['html_form_explanation'] = '';
         $this->fieldspec['workflow_id']['help_text'] = '';
         $this->fieldspec['workflow_id']['mandatory_p'] = 'N';
         $this->fieldspec['workflow_id']['sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_number'] = '1';
         $this->fieldspec['workflow_id']['default_value'] = '';
         $this->fieldspec['workflow_id']['field_toupper'] = 'NO';
         $this->fieldspec['workflow_id']['validationprocname'] = '';
         $this->fieldspec['workflow_id']['c_size'] = '5';
         $this->fieldspec['workflow_id']['prikey'] = 'Y';
         $this->fieldspec['workflow_id']['noedit'] = 'N';
         $this->fieldspec['workflow_id']['nodisplay'] = 'N';
         $this->fieldspec['workflow_id']['c_unsigned'] = 'Y';
         $this->fieldspec['workflow_id']['c_zerofill'] = 'N';
         $this->fieldspec['workflow_id']['c_auto_increment'] = 'N';
         $this->fieldspec['workflow_id']['foreign_table'] = '';
         $this->fieldspec['workflow_id']['foreign_key'] = '';
         $this->fieldspec['workflow_id']['application'] = 'workflow';
         $this->fieldspec['workflow_id']['issearchable'] = '1';
         $this->fieldspec['workflow_id']['preinserttrigger'] = '';
         $this->fieldspec['workflow_id']['postinserttrigger'] = '';
         $this->fieldspec['workflow_id']['preupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['postupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['predeletetrigger'] = '';
         $this->fieldspec['workflow_id']['postdeletetrigger'] = '';
         $this->fieldspec['workflow_name']['metadata_id'] = '2621';
         $this->fieldspec['workflow_name']['table_name'] = 'stateworkflow';
         $this->fieldspec['workflow_name']['column_name'] = 'workflow_name';
         $this->fieldspec['workflow_name']['pretty_name'] = '';
         $this->fieldspec['workflow_name']['abstract_data_type'] = 'varchar';
         $this->fieldspec['workflow_name']['db_data_type'] = 'varchar';
         $this->fieldspec['workflow_name']['field_null'] = 'YES';
         $this->fieldspec['workflow_name']['field_key'] = '';
         $this->fieldspec['workflow_name']['extra_sql'] = ' ';
         $this->fieldspec['workflow_name']['html_form_type'] = 'text';
         $this->fieldspec['workflow_name']['html_form_options'] = '';
         $this->fieldspec['workflow_name']['html_form_explanation'] = '';
         $this->fieldspec['workflow_name']['help_text'] = '';
         $this->fieldspec['workflow_name']['mandatory_p'] = 'N';
         $this->fieldspec['workflow_name']['sort_key'] = '0';
         $this->fieldspec['workflow_name']['form_sort_key'] = '0';
         $this->fieldspec['workflow_name']['form_number'] = '1';
         $this->fieldspec['workflow_name']['default_value'] = '';
         $this->fieldspec['workflow_name']['field_toupper'] = 'NO';
         $this->fieldspec['workflow_name']['validationprocname'] = '';
         $this->fieldspec['workflow_name']['c_size'] = '80';
         $this->fieldspec['workflow_name']['prikey'] = 'N';
         $this->fieldspec['workflow_name']['noedit'] = 'N';
         $this->fieldspec['workflow_name']['nodisplay'] = 'N';
         $this->fieldspec['workflow_name']['c_unsigned'] = 'N';
         $this->fieldspec['workflow_name']['c_zerofill'] = 'N';
         $this->fieldspec['workflow_name']['c_auto_increment'] = 'N';
         $this->fieldspec['workflow_name']['foreign_table'] = '';
         $this->fieldspec['workflow_name']['foreign_key'] = '';
         $this->fieldspec['workflow_name']['application'] = 'workflow';
         $this->fieldspec['workflow_name']['issearchable'] = '1';
         $this->fieldspec['workflow_name']['preinserttrigger'] = '';
         $this->fieldspec['workflow_name']['postinserttrigger'] = '';
         $this->fieldspec['workflow_name']['preupdatetrigger'] = '';
         $this->fieldspec['workflow_name']['postupdatetrigger'] = '';
         $this->fieldspec['workflow_name']['predeletetrigger'] = '';
         $this->fieldspec['workflow_name']['postdeletetrigger'] = '';
         $this->fieldspec['workflow_desc']['metadata_id'] = '2622';
         $this->fieldspec['workflow_desc']['table_name'] = 'stateworkflow';
         $this->fieldspec['workflow_desc']['column_name'] = 'workflow_desc';
         $this->fieldspec['workflow_desc']['pretty_name'] = '';
         $this->fieldspec['workflow_desc']['abstract_data_type'] = 'text,
';
         $this->fieldspec['workflow_desc']['db_data_type'] = 'text,
';
         $this->fieldspec['workflow_desc']['field_null'] = 'NO';
         $this->fieldspec['workflow_desc']['field_key'] = '';
         $this->fieldspec['workflow_desc']['extra_sql'] = ' ';
         $this->fieldspec['workflow_desc']['html_form_type'] = 'text';
         $this->fieldspec['workflow_desc']['html_form_options'] = '';
         $this->fieldspec['workflow_desc']['html_form_explanation'] = '';
         $this->fieldspec['workflow_desc']['help_text'] = '';
         $this->fieldspec['workflow_desc']['mandatory_p'] = 'N';
         $this->fieldspec['workflow_desc']['sort_key'] = '0';
         $this->fieldspec['workflow_desc']['form_sort_key'] = '0';
         $this->fieldspec['workflow_desc']['form_number'] = '1';
         $this->fieldspec['workflow_desc']['default_value'] = '';
         $this->fieldspec['workflow_desc']['field_toupper'] = 'NO';
         $this->fieldspec['workflow_desc']['validationprocname'] = '';
         $this->fieldspec['workflow_desc']['c_size'] = '';
         $this->fieldspec['workflow_desc']['prikey'] = 'N';
         $this->fieldspec['workflow_desc']['noedit'] = 'N';
         $this->fieldspec['workflow_desc']['nodisplay'] = 'N';
         $this->fieldspec['workflow_desc']['c_unsigned'] = 'N';
         $this->fieldspec['workflow_desc']['c_zerofill'] = 'N';
         $this->fieldspec['workflow_desc']['c_auto_increment'] = 'N';
         $this->fieldspec['workflow_desc']['foreign_table'] = '';
         $this->fieldspec['workflow_desc']['foreign_key'] = '';
         $this->fieldspec['workflow_desc']['application'] = 'workflow';
         $this->fieldspec['workflow_desc']['issearchable'] = '1';
         $this->fieldspec['workflow_desc']['preinserttrigger'] = '';
         $this->fieldspec['workflow_desc']['postinserttrigger'] = '';
         $this->fieldspec['workflow_desc']['preupdatetrigger'] = '';
         $this->fieldspec['workflow_desc']['postupdatetrigger'] = '';
         $this->fieldspec['workflow_desc']['predeletetrigger'] = '';
         $this->fieldspec['workflow_desc']['postdeletetrigger'] = '';
         $this->fieldspec['start_task_id']['metadata_id'] = '2623';
         $this->fieldspec['start_task_id']['table_name'] = 'stateworkflow';
         $this->fieldspec['start_task_id']['column_name'] = 'start_task_id';
         $this->fieldspec['start_task_id']['pretty_name'] = '';
         $this->fieldspec['start_task_id']['abstract_data_type'] = 'varchar';
         $this->fieldspec['start_task_id']['db_data_type'] = 'varchar';
         $this->fieldspec['start_task_id']['field_null'] = 'YES';
         $this->fieldspec['start_task_id']['field_key'] = '';
         $this->fieldspec['start_task_id']['extra_sql'] = ' ';
         $this->fieldspec['start_task_id']['html_form_type'] = 'text';
         $this->fieldspec['start_task_id']['html_form_options'] = '';
         $this->fieldspec['start_task_id']['html_form_explanation'] = '';
         $this->fieldspec['start_task_id']['help_text'] = '';
         $this->fieldspec['start_task_id']['mandatory_p'] = 'N';
         $this->fieldspec['start_task_id']['sort_key'] = '0';
         $this->fieldspec['start_task_id']['form_sort_key'] = '0';
         $this->fieldspec['start_task_id']['form_number'] = '1';
         $this->fieldspec['start_task_id']['default_value'] = '';
         $this->fieldspec['start_task_id']['field_toupper'] = 'NO';
         $this->fieldspec['start_task_id']['validationprocname'] = '';
         $this->fieldspec['start_task_id']['c_size'] = '40';
         $this->fieldspec['start_task_id']['prikey'] = 'N';
         $this->fieldspec['start_task_id']['noedit'] = 'N';
         $this->fieldspec['start_task_id']['nodisplay'] = 'N';
         $this->fieldspec['start_task_id']['c_unsigned'] = 'N';
         $this->fieldspec['start_task_id']['c_zerofill'] = 'N';
         $this->fieldspec['start_task_id']['c_auto_increment'] = 'N';
         $this->fieldspec['start_task_id']['foreign_table'] = '';
         $this->fieldspec['start_task_id']['foreign_key'] = '';
         $this->fieldspec['start_task_id']['application'] = 'workflow';
         $this->fieldspec['start_task_id']['issearchable'] = '1';
         $this->fieldspec['start_task_id']['preinserttrigger'] = '';
         $this->fieldspec['start_task_id']['postinserttrigger'] = '';
         $this->fieldspec['start_task_id']['preupdatetrigger'] = '';
         $this->fieldspec['start_task_id']['postupdatetrigger'] = '';
         $this->fieldspec['start_task_id']['predeletetrigger'] = '';
         $this->fieldspec['start_task_id']['postdeletetrigger'] = '';
         $this->fieldspec['is_valid']['metadata_id'] = '2624';
         $this->fieldspec['is_valid']['table_name'] = 'stateworkflow';
         $this->fieldspec['is_valid']['column_name'] = 'is_valid';
         $this->fieldspec['is_valid']['pretty_name'] = '';
         $this->fieldspec['is_valid']['abstract_data_type'] = 'char';
         $this->fieldspec['is_valid']['db_data_type'] = 'char';
         $this->fieldspec['is_valid']['field_null'] = 'YES';
         $this->fieldspec['is_valid']['field_key'] = '';
         $this->fieldspec['is_valid']['extra_sql'] = ' ';
         $this->fieldspec['is_valid']['html_form_type'] = 'text';
         $this->fieldspec['is_valid']['html_form_options'] = '';
         $this->fieldspec['is_valid']['html_form_explanation'] = '';
         $this->fieldspec['is_valid']['help_text'] = '';
         $this->fieldspec['is_valid']['mandatory_p'] = 'N';
         $this->fieldspec['is_valid']['sort_key'] = '0';
         $this->fieldspec['is_valid']['form_sort_key'] = '0';
         $this->fieldspec['is_valid']['form_number'] = '1';
         $this->fieldspec['is_valid']['default_value'] = '';
         $this->fieldspec['is_valid']['field_toupper'] = 'NO';
         $this->fieldspec['is_valid']['validationprocname'] = '';
         $this->fieldspec['is_valid']['c_size'] = '1';
         $this->fieldspec['is_valid']['prikey'] = 'N';
         $this->fieldspec['is_valid']['noedit'] = 'N';
         $this->fieldspec['is_valid']['nodisplay'] = 'N';
         $this->fieldspec['is_valid']['c_unsigned'] = 'N';
         $this->fieldspec['is_valid']['c_zerofill'] = 'N';
         $this->fieldspec['is_valid']['c_auto_increment'] = 'N';
         $this->fieldspec['is_valid']['foreign_table'] = '';
         $this->fieldspec['is_valid']['foreign_key'] = '';
         $this->fieldspec['is_valid']['application'] = 'workflow';
         $this->fieldspec['is_valid']['issearchable'] = '1';
         $this->fieldspec['is_valid']['preinserttrigger'] = '';
         $this->fieldspec['is_valid']['postinserttrigger'] = '';
         $this->fieldspec['is_valid']['preupdatetrigger'] = '';
         $this->fieldspec['is_valid']['postupdatetrigger'] = '';
         $this->fieldspec['is_valid']['predeletetrigger'] = '';
         $this->fieldspec['is_valid']['postdeletetrigger'] = '';
         $this->fieldspec['workflow_errors']['metadata_id'] = '2625';
         $this->fieldspec['workflow_errors']['table_name'] = 'stateworkflow';
         $this->fieldspec['workflow_errors']['column_name'] = 'workflow_errors';
         $this->fieldspec['workflow_errors']['pretty_name'] = '';
         $this->fieldspec['workflow_errors']['abstract_data_type'] = 'text,
';
         $this->fieldspec['workflow_errors']['db_data_type'] = 'text,
';
         $this->fieldspec['workflow_errors']['field_null'] = 'NO';
         $this->fieldspec['workflow_errors']['field_key'] = '';
         $this->fieldspec['workflow_errors']['extra_sql'] = ' ';
         $this->fieldspec['workflow_errors']['html_form_type'] = 'text';
         $this->fieldspec['workflow_errors']['html_form_options'] = '';
         $this->fieldspec['workflow_errors']['html_form_explanation'] = '';
         $this->fieldspec['workflow_errors']['help_text'] = '';
         $this->fieldspec['workflow_errors']['mandatory_p'] = 'N';
         $this->fieldspec['workflow_errors']['sort_key'] = '0';
         $this->fieldspec['workflow_errors']['form_sort_key'] = '0';
         $this->fieldspec['workflow_errors']['form_number'] = '1';
         $this->fieldspec['workflow_errors']['default_value'] = '';
         $this->fieldspec['workflow_errors']['field_toupper'] = 'NO';
         $this->fieldspec['workflow_errors']['validationprocname'] = '';
         $this->fieldspec['workflow_errors']['c_size'] = '';
         $this->fieldspec['workflow_errors']['prikey'] = 'N';
         $this->fieldspec['workflow_errors']['noedit'] = 'N';
         $this->fieldspec['workflow_errors']['nodisplay'] = 'N';
         $this->fieldspec['workflow_errors']['c_unsigned'] = 'N';
         $this->fieldspec['workflow_errors']['c_zerofill'] = 'N';
         $this->fieldspec['workflow_errors']['c_auto_increment'] = 'N';
         $this->fieldspec['workflow_errors']['foreign_table'] = '';
         $this->fieldspec['workflow_errors']['foreign_key'] = '';
         $this->fieldspec['workflow_errors']['application'] = 'workflow';
         $this->fieldspec['workflow_errors']['issearchable'] = '1';
         $this->fieldspec['workflow_errors']['preinserttrigger'] = '';
         $this->fieldspec['workflow_errors']['postinserttrigger'] = '';
         $this->fieldspec['workflow_errors']['preupdatetrigger'] = '';
         $this->fieldspec['workflow_errors']['postupdatetrigger'] = '';
         $this->fieldspec['workflow_errors']['predeletetrigger'] = '';
         $this->fieldspec['workflow_errors']['postdeletetrigger'] = '';
         $this->fieldspec['start_date']['metadata_id'] = '2626';
         $this->fieldspec['start_date']['table_name'] = 'stateworkflow';
         $this->fieldspec['start_date']['column_name'] = 'start_date';
         $this->fieldspec['start_date']['pretty_name'] = '';
         $this->fieldspec['start_date']['abstract_data_type'] = 'date';
         $this->fieldspec['start_date']['db_data_type'] = 'date';
         $this->fieldspec['start_date']['field_null'] = 'NO';
         $this->fieldspec['start_date']['field_key'] = '';
         $this->fieldspec['start_date']['extra_sql'] = ' ';
         $this->fieldspec['start_date']['html_form_type'] = 'datetime';
         $this->fieldspec['start_date']['html_form_options'] = '';
         $this->fieldspec['start_date']['html_form_explanation'] = '';
         $this->fieldspec['start_date']['help_text'] = '';
         $this->fieldspec['start_date']['mandatory_p'] = 'N';
         $this->fieldspec['start_date']['sort_key'] = '0';
         $this->fieldspec['start_date']['form_sort_key'] = '0';
         $this->fieldspec['start_date']['form_number'] = '1';
         $this->fieldspec['start_date']['default_value'] = '';
         $this->fieldspec['start_date']['field_toupper'] = 'NO';
         $this->fieldspec['start_date']['validationprocname'] = '';
         $this->fieldspec['start_date']['c_size'] = '';
         $this->fieldspec['start_date']['prikey'] = 'N';
         $this->fieldspec['start_date']['noedit'] = 'N';
         $this->fieldspec['start_date']['nodisplay'] = 'N';
         $this->fieldspec['start_date']['c_unsigned'] = 'N';
         $this->fieldspec['start_date']['c_zerofill'] = 'N';
         $this->fieldspec['start_date']['c_auto_increment'] = 'N';
         $this->fieldspec['start_date']['foreign_table'] = '';
         $this->fieldspec['start_date']['foreign_key'] = '';
         $this->fieldspec['start_date']['application'] = 'workflow';
         $this->fieldspec['start_date']['issearchable'] = '1';
         $this->fieldspec['start_date']['preinserttrigger'] = '';
         $this->fieldspec['start_date']['postinserttrigger'] = '';
         $this->fieldspec['start_date']['preupdatetrigger'] = '';
         $this->fieldspec['start_date']['postupdatetrigger'] = '';
         $this->fieldspec['start_date']['predeletetrigger'] = '';
         $this->fieldspec['start_date']['postdeletetrigger'] = '';
         $this->fieldspec['end_date']['metadata_id'] = '2627';
         $this->fieldspec['end_date']['table_name'] = 'stateworkflow';
         $this->fieldspec['end_date']['column_name'] = 'end_date';
         $this->fieldspec['end_date']['pretty_name'] = '';
         $this->fieldspec['end_date']['abstract_data_type'] = 'date';
         $this->fieldspec['end_date']['db_data_type'] = 'date';
         $this->fieldspec['end_date']['field_null'] = 'NO';
         $this->fieldspec['end_date']['field_key'] = '';
         $this->fieldspec['end_date']['extra_sql'] = ' ';
         $this->fieldspec['end_date']['html_form_type'] = 'datetime';
         $this->fieldspec['end_date']['html_form_options'] = '';
         $this->fieldspec['end_date']['html_form_explanation'] = '';
         $this->fieldspec['end_date']['help_text'] = '';
         $this->fieldspec['end_date']['mandatory_p'] = 'N';
         $this->fieldspec['end_date']['sort_key'] = '0';
         $this->fieldspec['end_date']['form_sort_key'] = '0';
         $this->fieldspec['end_date']['form_number'] = '1';
         $this->fieldspec['end_date']['default_value'] = '';
         $this->fieldspec['end_date']['field_toupper'] = 'NO';
         $this->fieldspec['end_date']['validationprocname'] = '';
         $this->fieldspec['end_date']['c_size'] = '';
         $this->fieldspec['end_date']['prikey'] = 'N';
         $this->fieldspec['end_date']['noedit'] = 'N';
         $this->fieldspec['end_date']['nodisplay'] = 'N';
         $this->fieldspec['end_date']['c_unsigned'] = 'N';
         $this->fieldspec['end_date']['c_zerofill'] = 'N';
         $this->fieldspec['end_date']['c_auto_increment'] = 'N';
         $this->fieldspec['end_date']['foreign_table'] = '';
         $this->fieldspec['end_date']['foreign_key'] = '';
         $this->fieldspec['end_date']['application'] = 'workflow';
         $this->fieldspec['end_date']['issearchable'] = '1';
         $this->fieldspec['end_date']['preinserttrigger'] = '';
         $this->fieldspec['end_date']['postinserttrigger'] = '';
         $this->fieldspec['end_date']['preupdatetrigger'] = '';
         $this->fieldspec['end_date']['postupdatetrigger'] = '';
         $this->fieldspec['end_date']['predeletetrigger'] = '';
         $this->fieldspec['end_date']['postdeletetrigger'] = '';
         $this->fieldspec['created_date']['metadata_id'] = '2628';
         $this->fieldspec['created_date']['table_name'] = 'stateworkflow';
         $this->fieldspec['created_date']['column_name'] = 'created_date';
         $this->fieldspec['created_date']['pretty_name'] = '';
         $this->fieldspec['created_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['created_date']['db_data_type'] = 'datetime';
         $this->fieldspec['created_date']['field_null'] = 'YES';
         $this->fieldspec['created_date']['field_key'] = '';
         $this->fieldspec['created_date']['extra_sql'] = ' ';
         $this->fieldspec['created_date']['html_form_type'] = 'datetime';
         $this->fieldspec['created_date']['html_form_options'] = '';
         $this->fieldspec['created_date']['html_form_explanation'] = '';
         $this->fieldspec['created_date']['help_text'] = '';
         $this->fieldspec['created_date']['mandatory_p'] = 'N';
         $this->fieldspec['created_date']['sort_key'] = '0';
         $this->fieldspec['created_date']['form_sort_key'] = '0';
         $this->fieldspec['created_date']['form_number'] = '1';
         $this->fieldspec['created_date']['default_value'] = '';
         $this->fieldspec['created_date']['field_toupper'] = 'NO';
         $this->fieldspec['created_date']['validationprocname'] = '';
         $this->fieldspec['created_date']['c_size'] = '';
         $this->fieldspec['created_date']['prikey'] = 'N';
         $this->fieldspec['created_date']['noedit'] = 'N';
         $this->fieldspec['created_date']['nodisplay'] = 'N';
         $this->fieldspec['created_date']['c_unsigned'] = 'N';
         $this->fieldspec['created_date']['c_zerofill'] = 'N';
         $this->fieldspec['created_date']['c_auto_increment'] = 'N';
         $this->fieldspec['created_date']['foreign_table'] = '';
         $this->fieldspec['created_date']['foreign_key'] = '';
         $this->fieldspec['created_date']['application'] = 'workflow';
         $this->fieldspec['created_date']['issearchable'] = '1';
         $this->fieldspec['created_date']['preinserttrigger'] = '';
         $this->fieldspec['created_date']['postinserttrigger'] = '';
         $this->fieldspec['created_date']['preupdatetrigger'] = '';
         $this->fieldspec['created_date']['postupdatetrigger'] = '';
         $this->fieldspec['created_date']['predeletetrigger'] = '';
         $this->fieldspec['created_date']['postdeletetrigger'] = '';
         $this->fieldspec['created_user']['metadata_id'] = '2629';
         $this->fieldspec['created_user']['table_name'] = 'stateworkflow';
         $this->fieldspec['created_user']['column_name'] = 'created_user';
         $this->fieldspec['created_user']['pretty_name'] = '';
         $this->fieldspec['created_user']['abstract_data_type'] = 'varchar';
         $this->fieldspec['created_user']['db_data_type'] = 'varchar';
         $this->fieldspec['created_user']['field_null'] = 'NO';
         $this->fieldspec['created_user']['field_key'] = '';
         $this->fieldspec['created_user']['extra_sql'] = ' ';
         $this->fieldspec['created_user']['html_form_type'] = 'text';
         $this->fieldspec['created_user']['html_form_options'] = '';
         $this->fieldspec['created_user']['html_form_explanation'] = '';
         $this->fieldspec['created_user']['help_text'] = '';
         $this->fieldspec['created_user']['mandatory_p'] = 'N';
         $this->fieldspec['created_user']['sort_key'] = '0';
         $this->fieldspec['created_user']['form_sort_key'] = '0';
         $this->fieldspec['created_user']['form_number'] = '1';
         $this->fieldspec['created_user']['default_value'] = '';
         $this->fieldspec['created_user']['field_toupper'] = 'NO';
         $this->fieldspec['created_user']['validationprocname'] = '';
         $this->fieldspec['created_user']['c_size'] = '16';
         $this->fieldspec['created_user']['prikey'] = 'N';
         $this->fieldspec['created_user']['noedit'] = 'N';
         $this->fieldspec['created_user']['nodisplay'] = 'N';
         $this->fieldspec['created_user']['c_unsigned'] = 'N';
         $this->fieldspec['created_user']['c_zerofill'] = 'N';
         $this->fieldspec['created_user']['c_auto_increment'] = 'N';
         $this->fieldspec['created_user']['foreign_table'] = '';
         $this->fieldspec['created_user']['foreign_key'] = '';
         $this->fieldspec['created_user']['application'] = 'workflow';
         $this->fieldspec['created_user']['issearchable'] = '1';
         $this->fieldspec['created_user']['preinserttrigger'] = '';
         $this->fieldspec['created_user']['postinserttrigger'] = '';
         $this->fieldspec['created_user']['preupdatetrigger'] = '';
         $this->fieldspec['created_user']['postupdatetrigger'] = '';
         $this->fieldspec['created_user']['predeletetrigger'] = '';
         $this->fieldspec['created_user']['postdeletetrigger'] = '';
         $this->fieldspec['revised_date']['metadata_id'] = '2630';
         $this->fieldspec['revised_date']['table_name'] = 'stateworkflow';
         $this->fieldspec['revised_date']['column_name'] = 'revised_date';
         $this->fieldspec['revised_date']['pretty_name'] = '';
         $this->fieldspec['revised_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['revised_date']['db_data_type'] = 'datetime';
         $this->fieldspec['revised_date']['field_null'] = 'NO';
         $this->fieldspec['revised_date']['field_key'] = '';
         $this->fieldspec['revised_date']['extra_sql'] = ' ';
         $this->fieldspec['revised_date']['html_form_type'] = 'datetime';
         $this->fieldspec['revised_date']['html_form_options'] = '';
         $this->fieldspec['revised_date']['html_form_explanation'] = '';
         $this->fieldspec['revised_date']['help_text'] = '';
         $this->fieldspec['revised_date']['mandatory_p'] = 'N';
         $this->fieldspec['revised_date']['sort_key'] = '0';
         $this->fieldspec['revised_date']['form_sort_key'] = '0';
         $this->fieldspec['revised_date']['form_number'] = '1';
         $this->fieldspec['revised_date']['default_value'] = '';
         $this->fieldspec['revised_date']['field_toupper'] = 'NO';
         $this->fieldspec['revised_date']['validationprocname'] = '';
         $this->fieldspec['revised_date']['c_size'] = '';
         $this->fieldspec['revised_date']['prikey'] = 'N';
         $this->fieldspec['revised_date']['noedit'] = 'N';
         $this->fieldspec['revised_date']['nodisplay'] = 'N';
         $this->fieldspec['revised_date']['c_unsigned'] = 'N';
         $this->fieldspec['revised_date']['c_zerofill'] = 'N';
         $this->fieldspec['revised_date']['c_auto_increment'] = 'N';
         $this->fieldspec['revised_date']['foreign_table'] = '';
         $this->fieldspec['revised_date']['foreign_key'] = '';
         $this->fieldspec['revised_date']['application'] = 'workflow';
         $this->fieldspec['revised_date']['issearchable'] = '1';
         $this->fieldspec['revised_date']['preinserttrigger'] = '';
         $this->fieldspec['revised_date']['postinserttrigger'] = '';
         $this->fieldspec['revised_date']['preupdatetrigger'] = '';
         $this->fieldspec['revised_date']['postupdatetrigger'] = '';
         $this->fieldspec['revised_date']['predeletetrigger'] = '';
         $this->fieldspec['revised_date']['postdeletetrigger'] = '';
         $this->fieldspec['revised_user']['metadata_id'] = '2631';
         $this->fieldspec['revised_user']['table_name'] = 'stateworkflow';
         $this->fieldspec['revised_user']['column_name'] = 'revised_user';
         $this->fieldspec['revised_user']['pretty_name'] = '';
         $this->fieldspec['revised_user']['abstract_data_type'] = 'varchar';
         $this->fieldspec['revised_user']['db_data_type'] = 'varchar';
         $this->fieldspec['revised_user']['field_null'] = 'NO';
         $this->fieldspec['revised_user']['field_key'] = '';
         $this->fieldspec['revised_user']['extra_sql'] = ' ';
         $this->fieldspec['revised_user']['html_form_type'] = 'text';
         $this->fieldspec['revised_user']['html_form_options'] = '';
         $this->fieldspec['revised_user']['html_form_explanation'] = '';
         $this->fieldspec['revised_user']['help_text'] = '';
         $this->fieldspec['revised_user']['mandatory_p'] = 'N';
         $this->fieldspec['revised_user']['sort_key'] = '0';
         $this->fieldspec['revised_user']['form_sort_key'] = '0';
         $this->fieldspec['revised_user']['form_number'] = '1';
         $this->fieldspec['revised_user']['default_value'] = '';
         $this->fieldspec['revised_user']['field_toupper'] = 'NO';
         $this->fieldspec['revised_user']['validationprocname'] = '';
         $this->fieldspec['revised_user']['c_size'] = '16';
         $this->fieldspec['revised_user']['prikey'] = 'N';
         $this->fieldspec['revised_user']['noedit'] = 'N';
         $this->fieldspec['revised_user']['nodisplay'] = 'N';
         $this->fieldspec['revised_user']['c_unsigned'] = 'N';
         $this->fieldspec['revised_user']['c_zerofill'] = 'N';
         $this->fieldspec['revised_user']['c_auto_increment'] = 'N';
         $this->fieldspec['revised_user']['foreign_table'] = '';
         $this->fieldspec['revised_user']['foreign_key'] = '';
         $this->fieldspec['revised_user']['application'] = 'workflow';
         $this->fieldspec['revised_user']['issearchable'] = '1';
         $this->fieldspec['revised_user']['preinserttrigger'] = '';
         $this->fieldspec['revised_user']['postinserttrigger'] = '';
         $this->fieldspec['revised_user']['preupdatetrigger'] = '';
         $this->fieldspec['revised_user']['postupdatetrigger'] = '';
         $this->fieldspec['revised_user']['predeletetrigger'] = '';
         $this->fieldspec['revised_user']['postdeletetrigger'] = '';
         $this->fieldspec['workflow_id']['metadata_id'] = '2695';
         $this->fieldspec['workflow_id']['table_name'] = 'stateworkflow';
         $this->fieldspec['workflow_id']['column_name'] = 'workflow_id';
         $this->fieldspec['workflow_id']['pretty_name'] = '';
         $this->fieldspec['workflow_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['db_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['field_null'] = 'YES';
         $this->fieldspec['workflow_id']['field_key'] = '';
         $this->fieldspec['workflow_id']['extra_sql'] = ' ';
         $this->fieldspec['workflow_id']['html_form_type'] = 'integer';
         $this->fieldspec['workflow_id']['html_form_options'] = '';
         $this->fieldspec['workflow_id']['html_form_explanation'] = '';
         $this->fieldspec['workflow_id']['help_text'] = '';
         $this->fieldspec['workflow_id']['mandatory_p'] = 'N';
         $this->fieldspec['workflow_id']['sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_number'] = '1';
         $this->fieldspec['workflow_id']['default_value'] = '';
         $this->fieldspec['workflow_id']['field_toupper'] = 'NO';
         $this->fieldspec['workflow_id']['validationprocname'] = '';
         $this->fieldspec['workflow_id']['c_size'] = '5';
         $this->fieldspec['workflow_id']['prikey'] = 'Y';
         $this->fieldspec['workflow_id']['noedit'] = 'N';
         $this->fieldspec['workflow_id']['nodisplay'] = 'N';
         $this->fieldspec['workflow_id']['c_unsigned'] = 'Y';
         $this->fieldspec['workflow_id']['c_zerofill'] = 'N';
         $this->fieldspec['workflow_id']['c_auto_increment'] = 'N';
         $this->fieldspec['workflow_id']['foreign_table'] = '';
         $this->fieldspec['workflow_id']['foreign_key'] = '';
         $this->fieldspec['workflow_id']['application'] = 'workflow';
         $this->fieldspec['workflow_id']['issearchable'] = '1';
         $this->fieldspec['workflow_id']['preinserttrigger'] = '';
         $this->fieldspec['workflow_id']['postinserttrigger'] = '';
         $this->fieldspec['workflow_id']['preupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['postupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['predeletetrigger'] = '';
         $this->fieldspec['workflow_id']['postdeletetrigger'] = '';
         $this->fieldspec['workflow_name']['metadata_id'] = '2696';
         $this->fieldspec['workflow_name']['table_name'] = 'stateworkflow';
         $this->fieldspec['workflow_name']['column_name'] = 'workflow_name';
         $this->fieldspec['workflow_name']['pretty_name'] = '';
         $this->fieldspec['workflow_name']['abstract_data_type'] = 'varchar';
         $this->fieldspec['workflow_name']['db_data_type'] = 'varchar';
         $this->fieldspec['workflow_name']['field_null'] = 'YES';
         $this->fieldspec['workflow_name']['field_key'] = '';
         $this->fieldspec['workflow_name']['extra_sql'] = ' ';
         $this->fieldspec['workflow_name']['html_form_type'] = 'text';
         $this->fieldspec['workflow_name']['html_form_options'] = '';
         $this->fieldspec['workflow_name']['html_form_explanation'] = '';
         $this->fieldspec['workflow_name']['help_text'] = '';
         $this->fieldspec['workflow_name']['mandatory_p'] = 'N';
         $this->fieldspec['workflow_name']['sort_key'] = '0';
         $this->fieldspec['workflow_name']['form_sort_key'] = '0';
         $this->fieldspec['workflow_name']['form_number'] = '1';
         $this->fieldspec['workflow_name']['default_value'] = '';
         $this->fieldspec['workflow_name']['field_toupper'] = 'NO';
         $this->fieldspec['workflow_name']['validationprocname'] = '';
         $this->fieldspec['workflow_name']['c_size'] = '80';
         $this->fieldspec['workflow_name']['prikey'] = 'N';
         $this->fieldspec['workflow_name']['noedit'] = 'N';
         $this->fieldspec['workflow_name']['nodisplay'] = 'N';
         $this->fieldspec['workflow_name']['c_unsigned'] = 'N';
         $this->fieldspec['workflow_name']['c_zerofill'] = 'N';
         $this->fieldspec['workflow_name']['c_auto_increment'] = 'N';
         $this->fieldspec['workflow_name']['foreign_table'] = '';
         $this->fieldspec['workflow_name']['foreign_key'] = '';
         $this->fieldspec['workflow_name']['application'] = 'workflow';
         $this->fieldspec['workflow_name']['issearchable'] = '1';
         $this->fieldspec['workflow_name']['preinserttrigger'] = '';
         $this->fieldspec['workflow_name']['postinserttrigger'] = '';
         $this->fieldspec['workflow_name']['preupdatetrigger'] = '';
         $this->fieldspec['workflow_name']['postupdatetrigger'] = '';
         $this->fieldspec['workflow_name']['predeletetrigger'] = '';
         $this->fieldspec['workflow_name']['postdeletetrigger'] = '';
         $this->fieldspec['workflow_desc']['metadata_id'] = '2697';
         $this->fieldspec['workflow_desc']['table_name'] = 'stateworkflow';
         $this->fieldspec['workflow_desc']['column_name'] = 'workflow_desc';
         $this->fieldspec['workflow_desc']['pretty_name'] = '';
         $this->fieldspec['workflow_desc']['abstract_data_type'] = 'text,
';
         $this->fieldspec['workflow_desc']['db_data_type'] = 'text,
';
         $this->fieldspec['workflow_desc']['field_null'] = 'NO';
         $this->fieldspec['workflow_desc']['field_key'] = '';
         $this->fieldspec['workflow_desc']['extra_sql'] = ' ';
         $this->fieldspec['workflow_desc']['html_form_type'] = 'text';
         $this->fieldspec['workflow_desc']['html_form_options'] = '';
         $this->fieldspec['workflow_desc']['html_form_explanation'] = '';
         $this->fieldspec['workflow_desc']['help_text'] = '';
         $this->fieldspec['workflow_desc']['mandatory_p'] = 'N';
         $this->fieldspec['workflow_desc']['sort_key'] = '0';
         $this->fieldspec['workflow_desc']['form_sort_key'] = '0';
         $this->fieldspec['workflow_desc']['form_number'] = '1';
         $this->fieldspec['workflow_desc']['default_value'] = '';
         $this->fieldspec['workflow_desc']['field_toupper'] = 'NO';
         $this->fieldspec['workflow_desc']['validationprocname'] = '';
         $this->fieldspec['workflow_desc']['c_size'] = '';
         $this->fieldspec['workflow_desc']['prikey'] = 'N';
         $this->fieldspec['workflow_desc']['noedit'] = 'N';
         $this->fieldspec['workflow_desc']['nodisplay'] = 'N';
         $this->fieldspec['workflow_desc']['c_unsigned'] = 'N';
         $this->fieldspec['workflow_desc']['c_zerofill'] = 'N';
         $this->fieldspec['workflow_desc']['c_auto_increment'] = 'N';
         $this->fieldspec['workflow_desc']['foreign_table'] = '';
         $this->fieldspec['workflow_desc']['foreign_key'] = '';
         $this->fieldspec['workflow_desc']['application'] = 'workflow';
         $this->fieldspec['workflow_desc']['issearchable'] = '1';
         $this->fieldspec['workflow_desc']['preinserttrigger'] = '';
         $this->fieldspec['workflow_desc']['postinserttrigger'] = '';
         $this->fieldspec['workflow_desc']['preupdatetrigger'] = '';
         $this->fieldspec['workflow_desc']['postupdatetrigger'] = '';
         $this->fieldspec['workflow_desc']['predeletetrigger'] = '';
         $this->fieldspec['workflow_desc']['postdeletetrigger'] = '';
         $this->fieldspec['start_task_id']['metadata_id'] = '2698';
         $this->fieldspec['start_task_id']['table_name'] = 'stateworkflow';
         $this->fieldspec['start_task_id']['column_name'] = 'start_task_id';
         $this->fieldspec['start_task_id']['pretty_name'] = '';
         $this->fieldspec['start_task_id']['abstract_data_type'] = 'varchar';
         $this->fieldspec['start_task_id']['db_data_type'] = 'varchar';
         $this->fieldspec['start_task_id']['field_null'] = 'YES';
         $this->fieldspec['start_task_id']['field_key'] = '';
         $this->fieldspec['start_task_id']['extra_sql'] = ' ';
         $this->fieldspec['start_task_id']['html_form_type'] = 'text';
         $this->fieldspec['start_task_id']['html_form_options'] = '';
         $this->fieldspec['start_task_id']['html_form_explanation'] = '';
         $this->fieldspec['start_task_id']['help_text'] = '';
         $this->fieldspec['start_task_id']['mandatory_p'] = 'N';
         $this->fieldspec['start_task_id']['sort_key'] = '0';
         $this->fieldspec['start_task_id']['form_sort_key'] = '0';
         $this->fieldspec['start_task_id']['form_number'] = '1';
         $this->fieldspec['start_task_id']['default_value'] = '';
         $this->fieldspec['start_task_id']['field_toupper'] = 'NO';
         $this->fieldspec['start_task_id']['validationprocname'] = '';
         $this->fieldspec['start_task_id']['c_size'] = '40';
         $this->fieldspec['start_task_id']['prikey'] = 'N';
         $this->fieldspec['start_task_id']['noedit'] = 'N';
         $this->fieldspec['start_task_id']['nodisplay'] = 'N';
         $this->fieldspec['start_task_id']['c_unsigned'] = 'N';
         $this->fieldspec['start_task_id']['c_zerofill'] = 'N';
         $this->fieldspec['start_task_id']['c_auto_increment'] = 'N';
         $this->fieldspec['start_task_id']['foreign_table'] = '';
         $this->fieldspec['start_task_id']['foreign_key'] = '';
         $this->fieldspec['start_task_id']['application'] = 'workflow';
         $this->fieldspec['start_task_id']['issearchable'] = '1';
         $this->fieldspec['start_task_id']['preinserttrigger'] = '';
         $this->fieldspec['start_task_id']['postinserttrigger'] = '';
         $this->fieldspec['start_task_id']['preupdatetrigger'] = '';
         $this->fieldspec['start_task_id']['postupdatetrigger'] = '';
         $this->fieldspec['start_task_id']['predeletetrigger'] = '';
         $this->fieldspec['start_task_id']['postdeletetrigger'] = '';
         $this->fieldspec['is_valid']['metadata_id'] = '2699';
         $this->fieldspec['is_valid']['table_name'] = 'stateworkflow';
         $this->fieldspec['is_valid']['column_name'] = 'is_valid';
         $this->fieldspec['is_valid']['pretty_name'] = '';
         $this->fieldspec['is_valid']['abstract_data_type'] = 'char';
         $this->fieldspec['is_valid']['db_data_type'] = 'char';
         $this->fieldspec['is_valid']['field_null'] = 'YES';
         $this->fieldspec['is_valid']['field_key'] = '';
         $this->fieldspec['is_valid']['extra_sql'] = ' ';
         $this->fieldspec['is_valid']['html_form_type'] = 'text';
         $this->fieldspec['is_valid']['html_form_options'] = '';
         $this->fieldspec['is_valid']['html_form_explanation'] = '';
         $this->fieldspec['is_valid']['help_text'] = '';
         $this->fieldspec['is_valid']['mandatory_p'] = 'N';
         $this->fieldspec['is_valid']['sort_key'] = '0';
         $this->fieldspec['is_valid']['form_sort_key'] = '0';
         $this->fieldspec['is_valid']['form_number'] = '1';
         $this->fieldspec['is_valid']['default_value'] = '';
         $this->fieldspec['is_valid']['field_toupper'] = 'NO';
         $this->fieldspec['is_valid']['validationprocname'] = '';
         $this->fieldspec['is_valid']['c_size'] = '1';
         $this->fieldspec['is_valid']['prikey'] = 'N';
         $this->fieldspec['is_valid']['noedit'] = 'N';
         $this->fieldspec['is_valid']['nodisplay'] = 'N';
         $this->fieldspec['is_valid']['c_unsigned'] = 'N';
         $this->fieldspec['is_valid']['c_zerofill'] = 'N';
         $this->fieldspec['is_valid']['c_auto_increment'] = 'N';
         $this->fieldspec['is_valid']['foreign_table'] = '';
         $this->fieldspec['is_valid']['foreign_key'] = '';
         $this->fieldspec['is_valid']['application'] = 'workflow';
         $this->fieldspec['is_valid']['issearchable'] = '1';
         $this->fieldspec['is_valid']['preinserttrigger'] = '';
         $this->fieldspec['is_valid']['postinserttrigger'] = '';
         $this->fieldspec['is_valid']['preupdatetrigger'] = '';
         $this->fieldspec['is_valid']['postupdatetrigger'] = '';
         $this->fieldspec['is_valid']['predeletetrigger'] = '';
         $this->fieldspec['is_valid']['postdeletetrigger'] = '';
         $this->fieldspec['workflow_errors']['metadata_id'] = '2700';
         $this->fieldspec['workflow_errors']['table_name'] = 'stateworkflow';
         $this->fieldspec['workflow_errors']['column_name'] = 'workflow_errors';
         $this->fieldspec['workflow_errors']['pretty_name'] = '';
         $this->fieldspec['workflow_errors']['abstract_data_type'] = 'text,
';
         $this->fieldspec['workflow_errors']['db_data_type'] = 'text,
';
         $this->fieldspec['workflow_errors']['field_null'] = 'NO';
         $this->fieldspec['workflow_errors']['field_key'] = '';
         $this->fieldspec['workflow_errors']['extra_sql'] = ' ';
         $this->fieldspec['workflow_errors']['html_form_type'] = 'text';
         $this->fieldspec['workflow_errors']['html_form_options'] = '';
         $this->fieldspec['workflow_errors']['html_form_explanation'] = '';
         $this->fieldspec['workflow_errors']['help_text'] = '';
         $this->fieldspec['workflow_errors']['mandatory_p'] = 'N';
         $this->fieldspec['workflow_errors']['sort_key'] = '0';
         $this->fieldspec['workflow_errors']['form_sort_key'] = '0';
         $this->fieldspec['workflow_errors']['form_number'] = '1';
         $this->fieldspec['workflow_errors']['default_value'] = '';
         $this->fieldspec['workflow_errors']['field_toupper'] = 'NO';
         $this->fieldspec['workflow_errors']['validationprocname'] = '';
         $this->fieldspec['workflow_errors']['c_size'] = '';
         $this->fieldspec['workflow_errors']['prikey'] = 'N';
         $this->fieldspec['workflow_errors']['noedit'] = 'N';
         $this->fieldspec['workflow_errors']['nodisplay'] = 'N';
         $this->fieldspec['workflow_errors']['c_unsigned'] = 'N';
         $this->fieldspec['workflow_errors']['c_zerofill'] = 'N';
         $this->fieldspec['workflow_errors']['c_auto_increment'] = 'N';
         $this->fieldspec['workflow_errors']['foreign_table'] = '';
         $this->fieldspec['workflow_errors']['foreign_key'] = '';
         $this->fieldspec['workflow_errors']['application'] = 'workflow';
         $this->fieldspec['workflow_errors']['issearchable'] = '1';
         $this->fieldspec['workflow_errors']['preinserttrigger'] = '';
         $this->fieldspec['workflow_errors']['postinserttrigger'] = '';
         $this->fieldspec['workflow_errors']['preupdatetrigger'] = '';
         $this->fieldspec['workflow_errors']['postupdatetrigger'] = '';
         $this->fieldspec['workflow_errors']['predeletetrigger'] = '';
         $this->fieldspec['workflow_errors']['postdeletetrigger'] = '';
         $this->fieldspec['start_date']['metadata_id'] = '2701';
         $this->fieldspec['start_date']['table_name'] = 'stateworkflow';
         $this->fieldspec['start_date']['column_name'] = 'start_date';
         $this->fieldspec['start_date']['pretty_name'] = '';
         $this->fieldspec['start_date']['abstract_data_type'] = 'date';
         $this->fieldspec['start_date']['db_data_type'] = 'date';
         $this->fieldspec['start_date']['field_null'] = 'NO';
         $this->fieldspec['start_date']['field_key'] = '';
         $this->fieldspec['start_date']['extra_sql'] = ' ';
         $this->fieldspec['start_date']['html_form_type'] = 'datetime';
         $this->fieldspec['start_date']['html_form_options'] = '';
         $this->fieldspec['start_date']['html_form_explanation'] = '';
         $this->fieldspec['start_date']['help_text'] = '';
         $this->fieldspec['start_date']['mandatory_p'] = 'N';
         $this->fieldspec['start_date']['sort_key'] = '0';
         $this->fieldspec['start_date']['form_sort_key'] = '0';
         $this->fieldspec['start_date']['form_number'] = '1';
         $this->fieldspec['start_date']['default_value'] = '';
         $this->fieldspec['start_date']['field_toupper'] = 'NO';
         $this->fieldspec['start_date']['validationprocname'] = '';
         $this->fieldspec['start_date']['c_size'] = '';
         $this->fieldspec['start_date']['prikey'] = 'N';
         $this->fieldspec['start_date']['noedit'] = 'N';
         $this->fieldspec['start_date']['nodisplay'] = 'N';
         $this->fieldspec['start_date']['c_unsigned'] = 'N';
         $this->fieldspec['start_date']['c_zerofill'] = 'N';
         $this->fieldspec['start_date']['c_auto_increment'] = 'N';
         $this->fieldspec['start_date']['foreign_table'] = '';
         $this->fieldspec['start_date']['foreign_key'] = '';
         $this->fieldspec['start_date']['application'] = 'workflow';
         $this->fieldspec['start_date']['issearchable'] = '1';
         $this->fieldspec['start_date']['preinserttrigger'] = '';
         $this->fieldspec['start_date']['postinserttrigger'] = '';
         $this->fieldspec['start_date']['preupdatetrigger'] = '';
         $this->fieldspec['start_date']['postupdatetrigger'] = '';
         $this->fieldspec['start_date']['predeletetrigger'] = '';
         $this->fieldspec['start_date']['postdeletetrigger'] = '';
         $this->fieldspec['end_date']['metadata_id'] = '2702';
         $this->fieldspec['end_date']['table_name'] = 'stateworkflow';
         $this->fieldspec['end_date']['column_name'] = 'end_date';
         $this->fieldspec['end_date']['pretty_name'] = '';
         $this->fieldspec['end_date']['abstract_data_type'] = 'date';
         $this->fieldspec['end_date']['db_data_type'] = 'date';
         $this->fieldspec['end_date']['field_null'] = 'NO';
         $this->fieldspec['end_date']['field_key'] = '';
         $this->fieldspec['end_date']['extra_sql'] = ' ';
         $this->fieldspec['end_date']['html_form_type'] = 'datetime';
         $this->fieldspec['end_date']['html_form_options'] = '';
         $this->fieldspec['end_date']['html_form_explanation'] = '';
         $this->fieldspec['end_date']['help_text'] = '';
         $this->fieldspec['end_date']['mandatory_p'] = 'N';
         $this->fieldspec['end_date']['sort_key'] = '0';
         $this->fieldspec['end_date']['form_sort_key'] = '0';
         $this->fieldspec['end_date']['form_number'] = '1';
         $this->fieldspec['end_date']['default_value'] = '';
         $this->fieldspec['end_date']['field_toupper'] = 'NO';
         $this->fieldspec['end_date']['validationprocname'] = '';
         $this->fieldspec['end_date']['c_size'] = '';
         $this->fieldspec['end_date']['prikey'] = 'N';
         $this->fieldspec['end_date']['noedit'] = 'N';
         $this->fieldspec['end_date']['nodisplay'] = 'N';
         $this->fieldspec['end_date']['c_unsigned'] = 'N';
         $this->fieldspec['end_date']['c_zerofill'] = 'N';
         $this->fieldspec['end_date']['c_auto_increment'] = 'N';
         $this->fieldspec['end_date']['foreign_table'] = '';
         $this->fieldspec['end_date']['foreign_key'] = '';
         $this->fieldspec['end_date']['application'] = 'workflow';
         $this->fieldspec['end_date']['issearchable'] = '1';
         $this->fieldspec['end_date']['preinserttrigger'] = '';
         $this->fieldspec['end_date']['postinserttrigger'] = '';
         $this->fieldspec['end_date']['preupdatetrigger'] = '';
         $this->fieldspec['end_date']['postupdatetrigger'] = '';
         $this->fieldspec['end_date']['predeletetrigger'] = '';
         $this->fieldspec['end_date']['postdeletetrigger'] = '';
         $this->fieldspec['created_date']['metadata_id'] = '2703';
         $this->fieldspec['created_date']['table_name'] = 'stateworkflow';
         $this->fieldspec['created_date']['column_name'] = 'created_date';
         $this->fieldspec['created_date']['pretty_name'] = '';
         $this->fieldspec['created_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['created_date']['db_data_type'] = 'datetime';
         $this->fieldspec['created_date']['field_null'] = 'YES';
         $this->fieldspec['created_date']['field_key'] = '';
         $this->fieldspec['created_date']['extra_sql'] = ' ';
         $this->fieldspec['created_date']['html_form_type'] = 'datetime';
         $this->fieldspec['created_date']['html_form_options'] = '';
         $this->fieldspec['created_date']['html_form_explanation'] = '';
         $this->fieldspec['created_date']['help_text'] = '';
         $this->fieldspec['created_date']['mandatory_p'] = 'N';
         $this->fieldspec['created_date']['sort_key'] = '0';
         $this->fieldspec['created_date']['form_sort_key'] = '0';
         $this->fieldspec['created_date']['form_number'] = '1';
         $this->fieldspec['created_date']['default_value'] = '';
         $this->fieldspec['created_date']['field_toupper'] = 'NO';
         $this->fieldspec['created_date']['validationprocname'] = '';
         $this->fieldspec['created_date']['c_size'] = '';
         $this->fieldspec['created_date']['prikey'] = 'N';
         $this->fieldspec['created_date']['noedit'] = 'N';
         $this->fieldspec['created_date']['nodisplay'] = 'N';
         $this->fieldspec['created_date']['c_unsigned'] = 'N';
         $this->fieldspec['created_date']['c_zerofill'] = 'N';
         $this->fieldspec['created_date']['c_auto_increment'] = 'N';
         $this->fieldspec['created_date']['foreign_table'] = '';
         $this->fieldspec['created_date']['foreign_key'] = '';
         $this->fieldspec['created_date']['application'] = 'workflow';
         $this->fieldspec['created_date']['issearchable'] = '1';
         $this->fieldspec['created_date']['preinserttrigger'] = '';
         $this->fieldspec['created_date']['postinserttrigger'] = '';
         $this->fieldspec['created_date']['preupdatetrigger'] = '';
         $this->fieldspec['created_date']['postupdatetrigger'] = '';
         $this->fieldspec['created_date']['predeletetrigger'] = '';
         $this->fieldspec['created_date']['postdeletetrigger'] = '';
         $this->fieldspec['created_user']['metadata_id'] = '2704';
         $this->fieldspec['created_user']['table_name'] = 'stateworkflow';
         $this->fieldspec['created_user']['column_name'] = 'created_user';
         $this->fieldspec['created_user']['pretty_name'] = '';
         $this->fieldspec['created_user']['abstract_data_type'] = 'varchar';
         $this->fieldspec['created_user']['db_data_type'] = 'varchar';
         $this->fieldspec['created_user']['field_null'] = 'NO';
         $this->fieldspec['created_user']['field_key'] = '';
         $this->fieldspec['created_user']['extra_sql'] = ' ';
         $this->fieldspec['created_user']['html_form_type'] = 'text';
         $this->fieldspec['created_user']['html_form_options'] = '';
         $this->fieldspec['created_user']['html_form_explanation'] = '';
         $this->fieldspec['created_user']['help_text'] = '';
         $this->fieldspec['created_user']['mandatory_p'] = 'N';
         $this->fieldspec['created_user']['sort_key'] = '0';
         $this->fieldspec['created_user']['form_sort_key'] = '0';
         $this->fieldspec['created_user']['form_number'] = '1';
         $this->fieldspec['created_user']['default_value'] = '';
         $this->fieldspec['created_user']['field_toupper'] = 'NO';
         $this->fieldspec['created_user']['validationprocname'] = '';
         $this->fieldspec['created_user']['c_size'] = '16';
         $this->fieldspec['created_user']['prikey'] = 'N';
         $this->fieldspec['created_user']['noedit'] = 'N';
         $this->fieldspec['created_user']['nodisplay'] = 'N';
         $this->fieldspec['created_user']['c_unsigned'] = 'N';
         $this->fieldspec['created_user']['c_zerofill'] = 'N';
         $this->fieldspec['created_user']['c_auto_increment'] = 'N';
         $this->fieldspec['created_user']['foreign_table'] = '';
         $this->fieldspec['created_user']['foreign_key'] = '';
         $this->fieldspec['created_user']['application'] = 'workflow';
         $this->fieldspec['created_user']['issearchable'] = '1';
         $this->fieldspec['created_user']['preinserttrigger'] = '';
         $this->fieldspec['created_user']['postinserttrigger'] = '';
         $this->fieldspec['created_user']['preupdatetrigger'] = '';
         $this->fieldspec['created_user']['postupdatetrigger'] = '';
         $this->fieldspec['created_user']['predeletetrigger'] = '';
         $this->fieldspec['created_user']['postdeletetrigger'] = '';
         $this->fieldspec['revised_date']['metadata_id'] = '2705';
         $this->fieldspec['revised_date']['table_name'] = 'stateworkflow';
         $this->fieldspec['revised_date']['column_name'] = 'revised_date';
         $this->fieldspec['revised_date']['pretty_name'] = '';
         $this->fieldspec['revised_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['revised_date']['db_data_type'] = 'datetime';
         $this->fieldspec['revised_date']['field_null'] = 'NO';
         $this->fieldspec['revised_date']['field_key'] = '';
         $this->fieldspec['revised_date']['extra_sql'] = ' ';
         $this->fieldspec['revised_date']['html_form_type'] = 'datetime';
         $this->fieldspec['revised_date']['html_form_options'] = '';
         $this->fieldspec['revised_date']['html_form_explanation'] = '';
         $this->fieldspec['revised_date']['help_text'] = '';
         $this->fieldspec['revised_date']['mandatory_p'] = 'N';
         $this->fieldspec['revised_date']['sort_key'] = '0';
         $this->fieldspec['revised_date']['form_sort_key'] = '0';
         $this->fieldspec['revised_date']['form_number'] = '1';
         $this->fieldspec['revised_date']['default_value'] = '';
         $this->fieldspec['revised_date']['field_toupper'] = 'NO';
         $this->fieldspec['revised_date']['validationprocname'] = '';
         $this->fieldspec['revised_date']['c_size'] = '';
         $this->fieldspec['revised_date']['prikey'] = 'N';
         $this->fieldspec['revised_date']['noedit'] = 'N';
         $this->fieldspec['revised_date']['nodisplay'] = 'N';
         $this->fieldspec['revised_date']['c_unsigned'] = 'N';
         $this->fieldspec['revised_date']['c_zerofill'] = 'N';
         $this->fieldspec['revised_date']['c_auto_increment'] = 'N';
         $this->fieldspec['revised_date']['foreign_table'] = '';
         $this->fieldspec['revised_date']['foreign_key'] = '';
         $this->fieldspec['revised_date']['application'] = 'workflow';
         $this->fieldspec['revised_date']['issearchable'] = '1';
         $this->fieldspec['revised_date']['preinserttrigger'] = '';
         $this->fieldspec['revised_date']['postinserttrigger'] = '';
         $this->fieldspec['revised_date']['preupdatetrigger'] = '';
         $this->fieldspec['revised_date']['postupdatetrigger'] = '';
         $this->fieldspec['revised_date']['predeletetrigger'] = '';
         $this->fieldspec['revised_date']['postdeletetrigger'] = '';
         $this->fieldspec['revised_user']['metadata_id'] = '2706';
         $this->fieldspec['revised_user']['table_name'] = 'stateworkflow';
         $this->fieldspec['revised_user']['column_name'] = 'revised_user';
         $this->fieldspec['revised_user']['pretty_name'] = '';
         $this->fieldspec['revised_user']['abstract_data_type'] = 'varchar';
         $this->fieldspec['revised_user']['db_data_type'] = 'varchar';
         $this->fieldspec['revised_user']['field_null'] = 'NO';
         $this->fieldspec['revised_user']['field_key'] = '';
         $this->fieldspec['revised_user']['extra_sql'] = ' ';
         $this->fieldspec['revised_user']['html_form_type'] = 'text';
         $this->fieldspec['revised_user']['html_form_options'] = '';
         $this->fieldspec['revised_user']['html_form_explanation'] = '';
         $this->fieldspec['revised_user']['help_text'] = '';
         $this->fieldspec['revised_user']['mandatory_p'] = 'N';
         $this->fieldspec['revised_user']['sort_key'] = '0';
         $this->fieldspec['revised_user']['form_sort_key'] = '0';
         $this->fieldspec['revised_user']['form_number'] = '1';
         $this->fieldspec['revised_user']['default_value'] = '';
         $this->fieldspec['revised_user']['field_toupper'] = 'NO';
         $this->fieldspec['revised_user']['validationprocname'] = '';
         $this->fieldspec['revised_user']['c_size'] = '16';
         $this->fieldspec['revised_user']['prikey'] = 'N';
         $this->fieldspec['revised_user']['noedit'] = 'N';
         $this->fieldspec['revised_user']['nodisplay'] = 'N';
         $this->fieldspec['revised_user']['c_unsigned'] = 'N';
         $this->fieldspec['revised_user']['c_zerofill'] = 'N';
         $this->fieldspec['revised_user']['c_auto_increment'] = 'N';
         $this->fieldspec['revised_user']['foreign_table'] = '';
         $this->fieldspec['revised_user']['foreign_key'] = '';
         $this->fieldspec['revised_user']['application'] = 'workflow';
         $this->fieldspec['revised_user']['issearchable'] = '1';
         $this->fieldspec['revised_user']['preinserttrigger'] = '';
         $this->fieldspec['revised_user']['postinserttrigger'] = '';
         $this->fieldspec['revised_user']['preupdatetrigger'] = '';
         $this->fieldspec['revised_user']['postupdatetrigger'] = '';
         $this->fieldspec['revised_user']['predeletetrigger'] = '';
         $this->fieldspec['revised_user']['postdeletetrigger'] = '';
         $this->fieldlist = array('workflow_id', 'workflow_name', 'workflow_desc', 'start_task_id', 'is_valid', 'workflow_errors', 'start_date', 'end_date', 'created_date', 'created_user', 'revised_date', 'revised_user', 'workflow_id', 'workflow_name', 'workflow_desc', 'start_task_id', 'is_valid', 'workflow_errors', 'start_date', 'end_date', 'created_date', 'created_user', 'revised_date', 'revised_user');
         $this->searchlist = array('workflow_id', 'workflow_name', 'workflow_desc', 'start_task_id', 'is_valid', 'workflow_errors', 'start_date', 'end_date', 'created_date', 'created_user', 'revised_date', 'revised_user', 'workflow_id', 'workflow_name', 'workflow_desc', 'start_task_id', 'is_valid', 'workflow_errors', 'start_date', 'end_date', 'created_date', 'created_user', 'revised_date', 'revised_user', );
	         return SUCCESS;
         }
         function stateworkflow()
         { //For older php which doesn't have constructor
              return $this->__constructor();
         }
         function Push()
         {
	         $_SESSION['stateworkflow'] = serialize($this);
	         return SUCCESS;
         }
         function Pop()
         {
                 //Can't do this in self - this is how to do it outside
	       //  $this = unserialize($_SESSION['stateworkflow']);
	         return SUCCESS;
         }
         function ObserverRegister( $observer, $event )
         {
                 $this->observers[$event][] = $observer;
	         return SUCCESS;
         }
         function ObserverDeRegister( $observer )
         {
                 $this->observers[] = array_diff( $this->observers, array( $observer) );
	         return SUCCESS;
         }
         function ObserverNotify( $event, $msg )
         {
                 if ( isset( $this->observers[$event] ) )
                 	foreach ( $this->observers[$event] as $obs ) 
                 	{
                      		$obs->notify( $event, $msg );
                 	}
                 /* '**' being used as 'ALL' */
                 if ( isset( $this->observers['**'] ) )
                 	foreach ( $this->observers['**'] as $obs ) 
                 	{
                      		$obs->notify( $event, $msg );
                 	}
	         return SUCCESS;
         }
         function notify( $object )
         {
                 //Called when another object we are observing sends us a notification
	         return SUCCESS;
         }
         function Preworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Postworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Preworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Postworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Preworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Postworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Setworkflow_id($value)
         {
                 $this->workflow_id = $value;
	          return SUCCESS;
         }
         function Getworkflow_id()
         {
                    return $this->workflow_id;
         }
         function Preworkflow_nameInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_nameInsert ) )
	            return Preworkflow_nameInsert( $this );
                 else return;
         }
         function Postworkflow_nameInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_nameInsert ) )
	            return Preworkflow_nameInsert( $this );
                 else return;
         }
         function Preworkflow_nameUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_nameUpdate ) )
	            return Preworkflow_nameUpdate( $this );
                 else return;
         }
         function Postworkflow_nameUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_nameUpdate ) )
	            return Preworkflow_nameUpdate( $this );
                 else return;
         }
         function Preworkflow_nameDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_nameDelete ) )
	            return Preworkflow_nameDelete( $this );
                 else return;
         }
         function Postworkflow_nameDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_nameDelete ) )
	            return Preworkflow_nameDelete( $this );
                 else return;
         }
         function Setworkflow_name($value)
         {
                 $this->workflow_name = $value;
	          return SUCCESS;
         }
         function Getworkflow_name()
         {
                    return $this->workflow_name;
         }
         function Preworkflow_descInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_descInsert ) )
	            return Preworkflow_descInsert( $this );
                 else return;
         }
         function Postworkflow_descInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_descInsert ) )
	            return Preworkflow_descInsert( $this );
                 else return;
         }
         function Preworkflow_descUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_descUpdate ) )
	            return Preworkflow_descUpdate( $this );
                 else return;
         }
         function Postworkflow_descUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_descUpdate ) )
	            return Preworkflow_descUpdate( $this );
                 else return;
         }
         function Preworkflow_descDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_descDelete ) )
	            return Preworkflow_descDelete( $this );
                 else return;
         }
         function Postworkflow_descDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_descDelete ) )
	            return Preworkflow_descDelete( $this );
                 else return;
         }
         function Setworkflow_desc($value)
         {
                 $this->workflow_desc = $value;
	          return SUCCESS;
         }
         function Getworkflow_desc()
         {
                    return $this->workflow_desc;
         }
         function Prestart_task_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_task_idInsert ) )
	            return Prestart_task_idInsert( $this );
                 else return;
         }
         function Poststart_task_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_task_idInsert ) )
	            return Prestart_task_idInsert( $this );
                 else return;
         }
         function Prestart_task_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_task_idUpdate ) )
	            return Prestart_task_idUpdate( $this );
                 else return;
         }
         function Poststart_task_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_task_idUpdate ) )
	            return Prestart_task_idUpdate( $this );
                 else return;
         }
         function Prestart_task_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_task_idDelete ) )
	            return Prestart_task_idDelete( $this );
                 else return;
         }
         function Poststart_task_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_task_idDelete ) )
	            return Prestart_task_idDelete( $this );
                 else return;
         }
         function Setstart_task_id($value)
         {
                 $this->start_task_id = $value;
	          return SUCCESS;
         }
         function Getstart_task_id()
         {
                    return $this->start_task_id;
         }
         function Preis_validInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preis_validInsert ) )
	            return Preis_validInsert( $this );
                 else return;
         }
         function Postis_validInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preis_validInsert ) )
	            return Preis_validInsert( $this );
                 else return;
         }
         function Preis_validUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preis_validUpdate ) )
	            return Preis_validUpdate( $this );
                 else return;
         }
         function Postis_validUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preis_validUpdate ) )
	            return Preis_validUpdate( $this );
                 else return;
         }
         function Preis_validDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preis_validDelete ) )
	            return Preis_validDelete( $this );
                 else return;
         }
         function Postis_validDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preis_validDelete ) )
	            return Preis_validDelete( $this );
                 else return;
         }
         function Setis_valid($value)
         {
                 $this->is_valid = $value;
	          return SUCCESS;
         }
         function Getis_valid()
         {
                    return $this->is_valid;
         }
         function Preworkflow_errorsInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_errorsInsert ) )
	            return Preworkflow_errorsInsert( $this );
                 else return;
         }
         function Postworkflow_errorsInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_errorsInsert ) )
	            return Preworkflow_errorsInsert( $this );
                 else return;
         }
         function Preworkflow_errorsUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_errorsUpdate ) )
	            return Preworkflow_errorsUpdate( $this );
                 else return;
         }
         function Postworkflow_errorsUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_errorsUpdate ) )
	            return Preworkflow_errorsUpdate( $this );
                 else return;
         }
         function Preworkflow_errorsDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_errorsDelete ) )
	            return Preworkflow_errorsDelete( $this );
                 else return;
         }
         function Postworkflow_errorsDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_errorsDelete ) )
	            return Preworkflow_errorsDelete( $this );
                 else return;
         }
         function Setworkflow_errors($value)
         {
                 $this->workflow_errors = $value;
	          return SUCCESS;
         }
         function Getworkflow_errors()
         {
                    return $this->workflow_errors;
         }
         function Prestart_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateInsert ) )
	            return Prestart_dateInsert( $this );
                 else return;
         }
         function Poststart_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateInsert ) )
	            return Prestart_dateInsert( $this );
                 else return;
         }
         function Prestart_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateUpdate ) )
	            return Prestart_dateUpdate( $this );
                 else return;
         }
         function Poststart_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateUpdate ) )
	            return Prestart_dateUpdate( $this );
                 else return;
         }
         function Prestart_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateDelete ) )
	            return Prestart_dateDelete( $this );
                 else return;
         }
         function Poststart_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateDelete ) )
	            return Prestart_dateDelete( $this );
                 else return;
         }
         function Setstart_date($value)
         {
                 $this->start_date = $value;
	          return SUCCESS;
         }
         function Getstart_date()
         {
                    return $this->start_date;
         }
         function Preend_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateInsert ) )
	            return Preend_dateInsert( $this );
                 else return;
         }
         function Postend_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateInsert ) )
	            return Preend_dateInsert( $this );
                 else return;
         }
         function Preend_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateUpdate ) )
	            return Preend_dateUpdate( $this );
                 else return;
         }
         function Postend_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateUpdate ) )
	            return Preend_dateUpdate( $this );
                 else return;
         }
         function Preend_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateDelete ) )
	            return Preend_dateDelete( $this );
                 else return;
         }
         function Postend_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateDelete ) )
	            return Preend_dateDelete( $this );
                 else return;
         }
         function Setend_date($value)
         {
                 $this->end_date = $value;
	          return SUCCESS;
         }
         function Getend_date()
         {
                    return $this->end_date;
         }
         function Precreated_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateInsert ) )
	            return Precreated_dateInsert( $this );
                 else return;
         }
         function Postcreated_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateInsert ) )
	            return Precreated_dateInsert( $this );
                 else return;
         }
         function Precreated_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateUpdate ) )
	            return Precreated_dateUpdate( $this );
                 else return;
         }
         function Postcreated_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateUpdate ) )
	            return Precreated_dateUpdate( $this );
                 else return;
         }
         function Precreated_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateDelete ) )
	            return Precreated_dateDelete( $this );
                 else return;
         }
         function Postcreated_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateDelete ) )
	            return Precreated_dateDelete( $this );
                 else return;
         }
         function Setcreated_date($value)
         {
                 $this->created_date = $value;
	          return SUCCESS;
         }
         function Getcreated_date()
         {
                    return $this->created_date;
         }
         function Precreated_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userInsert ) )
	            return Precreated_userInsert( $this );
                 else return;
         }
         function Postcreated_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userInsert ) )
	            return Precreated_userInsert( $this );
                 else return;
         }
         function Precreated_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userUpdate ) )
	            return Precreated_userUpdate( $this );
                 else return;
         }
         function Postcreated_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userUpdate ) )
	            return Precreated_userUpdate( $this );
                 else return;
         }
         function Precreated_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userDelete ) )
	            return Precreated_userDelete( $this );
                 else return;
         }
         function Postcreated_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userDelete ) )
	            return Precreated_userDelete( $this );
                 else return;
         }
         function Setcreated_user($value)
         {
                 $this->created_user = $value;
	          return SUCCESS;
         }
         function Getcreated_user()
         {
                    return $this->created_user;
         }
         function Prerevised_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateInsert ) )
	            return Prerevised_dateInsert( $this );
                 else return;
         }
         function Postrevised_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateInsert ) )
	            return Prerevised_dateInsert( $this );
                 else return;
         }
         function Prerevised_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateUpdate ) )
	            return Prerevised_dateUpdate( $this );
                 else return;
         }
         function Postrevised_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateUpdate ) )
	            return Prerevised_dateUpdate( $this );
                 else return;
         }
         function Prerevised_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateDelete ) )
	            return Prerevised_dateDelete( $this );
                 else return;
         }
         function Postrevised_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateDelete ) )
	            return Prerevised_dateDelete( $this );
                 else return;
         }
         function Setrevised_date($value)
         {
                 $this->revised_date = $value;
	          return SUCCESS;
         }
         function Getrevised_date()
         {
                    return $this->revised_date;
         }
         function Prerevised_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userInsert ) )
	            return Prerevised_userInsert( $this );
                 else return;
         }
         function Postrevised_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userInsert ) )
	            return Prerevised_userInsert( $this );
                 else return;
         }
         function Prerevised_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userUpdate ) )
	            return Prerevised_userUpdate( $this );
                 else return;
         }
         function Postrevised_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userUpdate ) )
	            return Prerevised_userUpdate( $this );
                 else return;
         }
         function Prerevised_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userDelete ) )
	            return Prerevised_userDelete( $this );
                 else return;
         }
         function Postrevised_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userDelete ) )
	            return Prerevised_userDelete( $this );
                 else return;
         }
         function Setrevised_user($value)
         {
                 $this->revised_user = $value;
	          return SUCCESS;
         }
         function Getrevised_user()
         {
                    return $this->revised_user;
         }
         function Preworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Postworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Preworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Postworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Preworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Postworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Setworkflow_id($value)
         {
                 $this->workflow_id = $value;
	          return SUCCESS;
         }
         function Getworkflow_id()
         {
                    return $this->workflow_id;
         }
         function Preworkflow_nameInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_nameInsert ) )
	            return Preworkflow_nameInsert( $this );
                 else return;
         }
         function Postworkflow_nameInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_nameInsert ) )
	            return Preworkflow_nameInsert( $this );
                 else return;
         }
         function Preworkflow_nameUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_nameUpdate ) )
	            return Preworkflow_nameUpdate( $this );
                 else return;
         }
         function Postworkflow_nameUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_nameUpdate ) )
	            return Preworkflow_nameUpdate( $this );
                 else return;
         }
         function Preworkflow_nameDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_nameDelete ) )
	            return Preworkflow_nameDelete( $this );
                 else return;
         }
         function Postworkflow_nameDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_nameDelete ) )
	            return Preworkflow_nameDelete( $this );
                 else return;
         }
         function Setworkflow_name($value)
         {
                 $this->workflow_name = $value;
	          return SUCCESS;
         }
         function Getworkflow_name()
         {
                    return $this->workflow_name;
         }
         function Preworkflow_descInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_descInsert ) )
	            return Preworkflow_descInsert( $this );
                 else return;
         }
         function Postworkflow_descInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_descInsert ) )
	            return Preworkflow_descInsert( $this );
                 else return;
         }
         function Preworkflow_descUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_descUpdate ) )
	            return Preworkflow_descUpdate( $this );
                 else return;
         }
         function Postworkflow_descUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_descUpdate ) )
	            return Preworkflow_descUpdate( $this );
                 else return;
         }
         function Preworkflow_descDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_descDelete ) )
	            return Preworkflow_descDelete( $this );
                 else return;
         }
         function Postworkflow_descDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_descDelete ) )
	            return Preworkflow_descDelete( $this );
                 else return;
         }
         function Setworkflow_desc($value)
         {
                 $this->workflow_desc = $value;
	          return SUCCESS;
         }
         function Getworkflow_desc()
         {
                    return $this->workflow_desc;
         }
         function Prestart_task_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_task_idInsert ) )
	            return Prestart_task_idInsert( $this );
                 else return;
         }
         function Poststart_task_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_task_idInsert ) )
	            return Prestart_task_idInsert( $this );
                 else return;
         }
         function Prestart_task_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_task_idUpdate ) )
	            return Prestart_task_idUpdate( $this );
                 else return;
         }
         function Poststart_task_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_task_idUpdate ) )
	            return Prestart_task_idUpdate( $this );
                 else return;
         }
         function Prestart_task_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_task_idDelete ) )
	            return Prestart_task_idDelete( $this );
                 else return;
         }
         function Poststart_task_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_task_idDelete ) )
	            return Prestart_task_idDelete( $this );
                 else return;
         }
         function Setstart_task_id($value)
         {
                 $this->start_task_id = $value;
	          return SUCCESS;
         }
         function Getstart_task_id()
         {
                    return $this->start_task_id;
         }
         function Preis_validInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preis_validInsert ) )
	            return Preis_validInsert( $this );
                 else return;
         }
         function Postis_validInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preis_validInsert ) )
	            return Preis_validInsert( $this );
                 else return;
         }
         function Preis_validUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preis_validUpdate ) )
	            return Preis_validUpdate( $this );
                 else return;
         }
         function Postis_validUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preis_validUpdate ) )
	            return Preis_validUpdate( $this );
                 else return;
         }
         function Preis_validDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preis_validDelete ) )
	            return Preis_validDelete( $this );
                 else return;
         }
         function Postis_validDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preis_validDelete ) )
	            return Preis_validDelete( $this );
                 else return;
         }
         function Setis_valid($value)
         {
                 $this->is_valid = $value;
	          return SUCCESS;
         }
         function Getis_valid()
         {
                    return $this->is_valid;
         }
         function Preworkflow_errorsInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_errorsInsert ) )
	            return Preworkflow_errorsInsert( $this );
                 else return;
         }
         function Postworkflow_errorsInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_errorsInsert ) )
	            return Preworkflow_errorsInsert( $this );
                 else return;
         }
         function Preworkflow_errorsUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_errorsUpdate ) )
	            return Preworkflow_errorsUpdate( $this );
                 else return;
         }
         function Postworkflow_errorsUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_errorsUpdate ) )
	            return Preworkflow_errorsUpdate( $this );
                 else return;
         }
         function Preworkflow_errorsDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_errorsDelete ) )
	            return Preworkflow_errorsDelete( $this );
                 else return;
         }
         function Postworkflow_errorsDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_errorsDelete ) )
	            return Preworkflow_errorsDelete( $this );
                 else return;
         }
         function Setworkflow_errors($value)
         {
                 $this->workflow_errors = $value;
	          return SUCCESS;
         }
         function Getworkflow_errors()
         {
                    return $this->workflow_errors;
         }
         function Prestart_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateInsert ) )
	            return Prestart_dateInsert( $this );
                 else return;
         }
         function Poststart_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateInsert ) )
	            return Prestart_dateInsert( $this );
                 else return;
         }
         function Prestart_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateUpdate ) )
	            return Prestart_dateUpdate( $this );
                 else return;
         }
         function Poststart_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateUpdate ) )
	            return Prestart_dateUpdate( $this );
                 else return;
         }
         function Prestart_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateDelete ) )
	            return Prestart_dateDelete( $this );
                 else return;
         }
         function Poststart_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateDelete ) )
	            return Prestart_dateDelete( $this );
                 else return;
         }
         function Setstart_date($value)
         {
                 $this->start_date = $value;
	          return SUCCESS;
         }
         function Getstart_date()
         {
                    return $this->start_date;
         }
         function Preend_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateInsert ) )
	            return Preend_dateInsert( $this );
                 else return;
         }
         function Postend_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateInsert ) )
	            return Preend_dateInsert( $this );
                 else return;
         }
         function Preend_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateUpdate ) )
	            return Preend_dateUpdate( $this );
                 else return;
         }
         function Postend_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateUpdate ) )
	            return Preend_dateUpdate( $this );
                 else return;
         }
         function Preend_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateDelete ) )
	            return Preend_dateDelete( $this );
                 else return;
         }
         function Postend_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateDelete ) )
	            return Preend_dateDelete( $this );
                 else return;
         }
         function Setend_date($value)
         {
                 $this->end_date = $value;
	          return SUCCESS;
         }
         function Getend_date()
         {
                    return $this->end_date;
         }
         function Precreated_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateInsert ) )
	            return Precreated_dateInsert( $this );
                 else return;
         }
         function Postcreated_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateInsert ) )
	            return Precreated_dateInsert( $this );
                 else return;
         }
         function Precreated_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateUpdate ) )
	            return Precreated_dateUpdate( $this );
                 else return;
         }
         function Postcreated_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateUpdate ) )
	            return Precreated_dateUpdate( $this );
                 else return;
         }
         function Precreated_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateDelete ) )
	            return Precreated_dateDelete( $this );
                 else return;
         }
         function Postcreated_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateDelete ) )
	            return Precreated_dateDelete( $this );
                 else return;
         }
         function Setcreated_date($value)
         {
                 $this->created_date = $value;
	          return SUCCESS;
         }
         function Getcreated_date()
         {
                    return $this->created_date;
         }
         function Precreated_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userInsert ) )
	            return Precreated_userInsert( $this );
                 else return;
         }
         function Postcreated_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userInsert ) )
	            return Precreated_userInsert( $this );
                 else return;
         }
         function Precreated_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userUpdate ) )
	            return Precreated_userUpdate( $this );
                 else return;
         }
         function Postcreated_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userUpdate ) )
	            return Precreated_userUpdate( $this );
                 else return;
         }
         function Precreated_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userDelete ) )
	            return Precreated_userDelete( $this );
                 else return;
         }
         function Postcreated_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userDelete ) )
	            return Precreated_userDelete( $this );
                 else return;
         }
         function Setcreated_user($value)
         {
                 $this->created_user = $value;
	          return SUCCESS;
         }
         function Getcreated_user()
         {
                    return $this->created_user;
         }
         function Prerevised_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateInsert ) )
	            return Prerevised_dateInsert( $this );
                 else return;
         }
         function Postrevised_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateInsert ) )
	            return Prerevised_dateInsert( $this );
                 else return;
         }
         function Prerevised_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateUpdate ) )
	            return Prerevised_dateUpdate( $this );
                 else return;
         }
         function Postrevised_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateUpdate ) )
	            return Prerevised_dateUpdate( $this );
                 else return;
         }
         function Prerevised_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateDelete ) )
	            return Prerevised_dateDelete( $this );
                 else return;
         }
         function Postrevised_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateDelete ) )
	            return Prerevised_dateDelete( $this );
                 else return;
         }
         function Setrevised_date($value)
         {
                 $this->revised_date = $value;
	          return SUCCESS;
         }
         function Getrevised_date()
         {
                    return $this->revised_date;
         }
         function Prerevised_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userInsert ) )
	            return Prerevised_userInsert( $this );
                 else return;
         }
         function Postrevised_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userInsert ) )
	            return Prerevised_userInsert( $this );
                 else return;
         }
         function Prerevised_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userUpdate ) )
	            return Prerevised_userUpdate( $this );
                 else return;
         }
         function Postrevised_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userUpdate ) )
	            return Prerevised_userUpdate( $this );
                 else return;
         }
         function Prerevised_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userDelete ) )
	            return Prerevised_userDelete( $this );
                 else return;
         }
         function Postrevised_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userDelete ) )
	            return Prerevised_userDelete( $this );
                 else return;
         }
         function Setrevised_user($value)
         {
                 $this->revised_user = $value;
	          return SUCCESS;
         }
         function Getrevised_user()
         {
                    return $this->revised_user;
         }
} /* class stateworkflow */
