<?php 
//This file was generated by calling php /var/www/html/codemeta/generator.php workflow 

//this script may only be included - so its better to die if called directly.
if ( strpos( $_SERVER["SCRIPT_NAME"], basename(__FILE__) ) !== false ) {
  header( "location: ../index.php" );
  exit;
}

class statecase extends generictable 
{
          private $observers;
         var $data; //data passed in by other calls         var $case_id;
		 /* */
         var $workflow_id;
		 /* */
         var $context;
		 /* */
         var $case_status;
		 /* */
         var $start_date;
		 /* */
         var $end_date;
		 /* */
         var $created_date;
		 /* */
         var $created_user;
		 /* */
         var $revised_date;
		 /* */
         var $revised_user;
		 /* */
         var $case_id;
		 /* */
         var $workflow_id;
		 /* */
         var $context;
		 /* */
         var $case_status;
		 /* */
         var $start_date;
		 /* */
         var $end_date;
		 /* */
         var $created_date;
		 /* */
         var $created_user;
		 /* */
         var $revised_date;
		 /* */
         var $revised_user;
		 /* */
         function __constructor()
         {
         $this->querytablename = 'statecase';
         $this->fieldspec['case_id']['metadata_id'] = '2684';
         $this->fieldspec['case_id']['table_name'] = 'statecase';
         $this->fieldspec['case_id']['column_name'] = 'case_id';
         $this->fieldspec['case_id']['pretty_name'] = '';
         $this->fieldspec['case_id']['abstract_data_type'] = 'int';
         $this->fieldspec['case_id']['db_data_type'] = 'int';
         $this->fieldspec['case_id']['field_null'] = 'YES';
         $this->fieldspec['case_id']['field_key'] = '';
         $this->fieldspec['case_id']['extra_sql'] = ' ';
         $this->fieldspec['case_id']['html_form_type'] = 'integer';
         $this->fieldspec['case_id']['html_form_options'] = '';
         $this->fieldspec['case_id']['html_form_explanation'] = '';
         $this->fieldspec['case_id']['help_text'] = '';
         $this->fieldspec['case_id']['mandatory_p'] = 'N';
         $this->fieldspec['case_id']['sort_key'] = '0';
         $this->fieldspec['case_id']['form_sort_key'] = '0';
         $this->fieldspec['case_id']['form_number'] = '1';
         $this->fieldspec['case_id']['default_value'] = '';
         $this->fieldspec['case_id']['field_toupper'] = 'NO';
         $this->fieldspec['case_id']['validationprocname'] = '';
         $this->fieldspec['case_id']['c_size'] = '10';
         $this->fieldspec['case_id']['prikey'] = 'Y';
         $this->fieldspec['case_id']['noedit'] = 'N';
         $this->fieldspec['case_id']['nodisplay'] = 'N';
         $this->fieldspec['case_id']['c_unsigned'] = 'Y';
         $this->fieldspec['case_id']['c_zerofill'] = 'N';
         $this->fieldspec['case_id']['c_auto_increment'] = 'N';
         $this->fieldspec['case_id']['foreign_table'] = '';
         $this->fieldspec['case_id']['foreign_key'] = '';
         $this->fieldspec['case_id']['application'] = 'workflow';
         $this->fieldspec['case_id']['issearchable'] = '1';
         $this->fieldspec['case_id']['preinserttrigger'] = '';
         $this->fieldspec['case_id']['postinserttrigger'] = '';
         $this->fieldspec['case_id']['preupdatetrigger'] = '';
         $this->fieldspec['case_id']['postupdatetrigger'] = '';
         $this->fieldspec['case_id']['predeletetrigger'] = '';
         $this->fieldspec['case_id']['postdeletetrigger'] = '';
         $this->fieldspec['workflow_id']['metadata_id'] = '2685';
         $this->fieldspec['workflow_id']['table_name'] = 'statecase';
         $this->fieldspec['workflow_id']['column_name'] = 'workflow_id';
         $this->fieldspec['workflow_id']['pretty_name'] = '';
         $this->fieldspec['workflow_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['db_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['field_null'] = 'YES';
         $this->fieldspec['workflow_id']['field_key'] = '';
         $this->fieldspec['workflow_id']['extra_sql'] = ' ';
         $this->fieldspec['workflow_id']['html_form_type'] = 'integer';
         $this->fieldspec['workflow_id']['html_form_options'] = '';
         $this->fieldspec['workflow_id']['html_form_explanation'] = '';
         $this->fieldspec['workflow_id']['help_text'] = '';
         $this->fieldspec['workflow_id']['mandatory_p'] = 'N';
         $this->fieldspec['workflow_id']['sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_number'] = '1';
         $this->fieldspec['workflow_id']['default_value'] = '';
         $this->fieldspec['workflow_id']['field_toupper'] = 'NO';
         $this->fieldspec['workflow_id']['validationprocname'] = '';
         $this->fieldspec['workflow_id']['c_size'] = '5';
         $this->fieldspec['workflow_id']['prikey'] = 'N';
         $this->fieldspec['workflow_id']['noedit'] = 'N';
         $this->fieldspec['workflow_id']['nodisplay'] = 'N';
         $this->fieldspec['workflow_id']['c_unsigned'] = 'Y';
         $this->fieldspec['workflow_id']['c_zerofill'] = 'N';
         $this->fieldspec['workflow_id']['c_auto_increment'] = 'N';
         $this->fieldspec['workflow_id']['foreign_table'] = '';
         $this->fieldspec['workflow_id']['foreign_key'] = '';
         $this->fieldspec['workflow_id']['application'] = 'workflow';
         $this->fieldspec['workflow_id']['issearchable'] = '1';
         $this->fieldspec['workflow_id']['preinserttrigger'] = '';
         $this->fieldspec['workflow_id']['postinserttrigger'] = '';
         $this->fieldspec['workflow_id']['preupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['postupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['predeletetrigger'] = '';
         $this->fieldspec['workflow_id']['postdeletetrigger'] = '';
         $this->fieldspec['context']['metadata_id'] = '2686';
         $this->fieldspec['context']['table_name'] = 'statecase';
         $this->fieldspec['context']['column_name'] = 'context';
         $this->fieldspec['context']['pretty_name'] = '';
         $this->fieldspec['context']['abstract_data_type'] = 'varchar';
         $this->fieldspec['context']['db_data_type'] = 'varchar';
         $this->fieldspec['context']['field_null'] = 'YES';
         $this->fieldspec['context']['field_key'] = '';
         $this->fieldspec['context']['extra_sql'] = ' ';
         $this->fieldspec['context']['html_form_type'] = 'text';
         $this->fieldspec['context']['html_form_options'] = '';
         $this->fieldspec['context']['html_form_explanation'] = '';
         $this->fieldspec['context']['help_text'] = '';
         $this->fieldspec['context']['mandatory_p'] = 'N';
         $this->fieldspec['context']['sort_key'] = '0';
         $this->fieldspec['context']['form_sort_key'] = '0';
         $this->fieldspec['context']['form_number'] = '1';
         $this->fieldspec['context']['default_value'] = '';
         $this->fieldspec['context']['field_toupper'] = 'NO';
         $this->fieldspec['context']['validationprocname'] = '';
         $this->fieldspec['context']['c_size'] = '255';
         $this->fieldspec['context']['prikey'] = 'N';
         $this->fieldspec['context']['noedit'] = 'N';
         $this->fieldspec['context']['nodisplay'] = 'N';
         $this->fieldspec['context']['c_unsigned'] = 'N';
         $this->fieldspec['context']['c_zerofill'] = 'N';
         $this->fieldspec['context']['c_auto_increment'] = 'N';
         $this->fieldspec['context']['foreign_table'] = '';
         $this->fieldspec['context']['foreign_key'] = '';
         $this->fieldspec['context']['application'] = 'workflow';
         $this->fieldspec['context']['issearchable'] = '1';
         $this->fieldspec['context']['preinserttrigger'] = '';
         $this->fieldspec['context']['postinserttrigger'] = '';
         $this->fieldspec['context']['preupdatetrigger'] = '';
         $this->fieldspec['context']['postupdatetrigger'] = '';
         $this->fieldspec['context']['predeletetrigger'] = '';
         $this->fieldspec['context']['postdeletetrigger'] = '';
         $this->fieldspec['case_status']['metadata_id'] = '2687';
         $this->fieldspec['case_status']['table_name'] = 'statecase';
         $this->fieldspec['case_status']['column_name'] = 'case_status';
         $this->fieldspec['case_status']['pretty_name'] = '';
         $this->fieldspec['case_status']['abstract_data_type'] = 'char';
         $this->fieldspec['case_status']['db_data_type'] = 'char';
         $this->fieldspec['case_status']['field_null'] = 'YES';
         $this->fieldspec['case_status']['field_key'] = '';
         $this->fieldspec['case_status']['extra_sql'] = ' ';
         $this->fieldspec['case_status']['html_form_type'] = 'text';
         $this->fieldspec['case_status']['html_form_options'] = '';
         $this->fieldspec['case_status']['html_form_explanation'] = '';
         $this->fieldspec['case_status']['help_text'] = '';
         $this->fieldspec['case_status']['mandatory_p'] = 'N';
         $this->fieldspec['case_status']['sort_key'] = '0';
         $this->fieldspec['case_status']['form_sort_key'] = '0';
         $this->fieldspec['case_status']['form_number'] = '1';
         $this->fieldspec['case_status']['default_value'] = '';
         $this->fieldspec['case_status']['field_toupper'] = 'NO';
         $this->fieldspec['case_status']['validationprocname'] = '';
         $this->fieldspec['case_status']['c_size'] = '2';
         $this->fieldspec['case_status']['prikey'] = 'N';
         $this->fieldspec['case_status']['noedit'] = 'N';
         $this->fieldspec['case_status']['nodisplay'] = 'N';
         $this->fieldspec['case_status']['c_unsigned'] = 'N';
         $this->fieldspec['case_status']['c_zerofill'] = 'N';
         $this->fieldspec['case_status']['c_auto_increment'] = 'N';
         $this->fieldspec['case_status']['foreign_table'] = '';
         $this->fieldspec['case_status']['foreign_key'] = '';
         $this->fieldspec['case_status']['application'] = 'workflow';
         $this->fieldspec['case_status']['issearchable'] = '1';
         $this->fieldspec['case_status']['preinserttrigger'] = '';
         $this->fieldspec['case_status']['postinserttrigger'] = '';
         $this->fieldspec['case_status']['preupdatetrigger'] = '';
         $this->fieldspec['case_status']['postupdatetrigger'] = '';
         $this->fieldspec['case_status']['predeletetrigger'] = '';
         $this->fieldspec['case_status']['postdeletetrigger'] = '';
         $this->fieldspec['start_date']['metadata_id'] = '2688';
         $this->fieldspec['start_date']['table_name'] = 'statecase';
         $this->fieldspec['start_date']['column_name'] = 'start_date';
         $this->fieldspec['start_date']['pretty_name'] = '';
         $this->fieldspec['start_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['start_date']['db_data_type'] = 'datetime';
         $this->fieldspec['start_date']['field_null'] = 'YES';
         $this->fieldspec['start_date']['field_key'] = '';
         $this->fieldspec['start_date']['extra_sql'] = ' ';
         $this->fieldspec['start_date']['html_form_type'] = 'datetime';
         $this->fieldspec['start_date']['html_form_options'] = '';
         $this->fieldspec['start_date']['html_form_explanation'] = '';
         $this->fieldspec['start_date']['help_text'] = '';
         $this->fieldspec['start_date']['mandatory_p'] = 'N';
         $this->fieldspec['start_date']['sort_key'] = '0';
         $this->fieldspec['start_date']['form_sort_key'] = '0';
         $this->fieldspec['start_date']['form_number'] = '1';
         $this->fieldspec['start_date']['default_value'] = '';
         $this->fieldspec['start_date']['field_toupper'] = 'NO';
         $this->fieldspec['start_date']['validationprocname'] = '';
         $this->fieldspec['start_date']['c_size'] = '';
         $this->fieldspec['start_date']['prikey'] = 'N';
         $this->fieldspec['start_date']['noedit'] = 'N';
         $this->fieldspec['start_date']['nodisplay'] = 'N';
         $this->fieldspec['start_date']['c_unsigned'] = 'N';
         $this->fieldspec['start_date']['c_zerofill'] = 'N';
         $this->fieldspec['start_date']['c_auto_increment'] = 'N';
         $this->fieldspec['start_date']['foreign_table'] = '';
         $this->fieldspec['start_date']['foreign_key'] = '';
         $this->fieldspec['start_date']['application'] = 'workflow';
         $this->fieldspec['start_date']['issearchable'] = '1';
         $this->fieldspec['start_date']['preinserttrigger'] = '';
         $this->fieldspec['start_date']['postinserttrigger'] = '';
         $this->fieldspec['start_date']['preupdatetrigger'] = '';
         $this->fieldspec['start_date']['postupdatetrigger'] = '';
         $this->fieldspec['start_date']['predeletetrigger'] = '';
         $this->fieldspec['start_date']['postdeletetrigger'] = '';
         $this->fieldspec['end_date']['metadata_id'] = '2689';
         $this->fieldspec['end_date']['table_name'] = 'statecase';
         $this->fieldspec['end_date']['column_name'] = 'end_date';
         $this->fieldspec['end_date']['pretty_name'] = '';
         $this->fieldspec['end_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['end_date']['db_data_type'] = 'datetime';
         $this->fieldspec['end_date']['field_null'] = 'NO';
         $this->fieldspec['end_date']['field_key'] = '';
         $this->fieldspec['end_date']['extra_sql'] = ' ';
         $this->fieldspec['end_date']['html_form_type'] = 'datetime';
         $this->fieldspec['end_date']['html_form_options'] = '';
         $this->fieldspec['end_date']['html_form_explanation'] = '';
         $this->fieldspec['end_date']['help_text'] = '';
         $this->fieldspec['end_date']['mandatory_p'] = 'N';
         $this->fieldspec['end_date']['sort_key'] = '0';
         $this->fieldspec['end_date']['form_sort_key'] = '0';
         $this->fieldspec['end_date']['form_number'] = '1';
         $this->fieldspec['end_date']['default_value'] = '';
         $this->fieldspec['end_date']['field_toupper'] = 'NO';
         $this->fieldspec['end_date']['validationprocname'] = '';
         $this->fieldspec['end_date']['c_size'] = '';
         $this->fieldspec['end_date']['prikey'] = 'N';
         $this->fieldspec['end_date']['noedit'] = 'N';
         $this->fieldspec['end_date']['nodisplay'] = 'N';
         $this->fieldspec['end_date']['c_unsigned'] = 'N';
         $this->fieldspec['end_date']['c_zerofill'] = 'N';
         $this->fieldspec['end_date']['c_auto_increment'] = 'N';
         $this->fieldspec['end_date']['foreign_table'] = '';
         $this->fieldspec['end_date']['foreign_key'] = '';
         $this->fieldspec['end_date']['application'] = 'workflow';
         $this->fieldspec['end_date']['issearchable'] = '1';
         $this->fieldspec['end_date']['preinserttrigger'] = '';
         $this->fieldspec['end_date']['postinserttrigger'] = '';
         $this->fieldspec['end_date']['preupdatetrigger'] = '';
         $this->fieldspec['end_date']['postupdatetrigger'] = '';
         $this->fieldspec['end_date']['predeletetrigger'] = '';
         $this->fieldspec['end_date']['postdeletetrigger'] = '';
         $this->fieldspec['created_date']['metadata_id'] = '2690';
         $this->fieldspec['created_date']['table_name'] = 'statecase';
         $this->fieldspec['created_date']['column_name'] = 'created_date';
         $this->fieldspec['created_date']['pretty_name'] = '';
         $this->fieldspec['created_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['created_date']['db_data_type'] = 'datetime';
         $this->fieldspec['created_date']['field_null'] = 'YES';
         $this->fieldspec['created_date']['field_key'] = '';
         $this->fieldspec['created_date']['extra_sql'] = ' ';
         $this->fieldspec['created_date']['html_form_type'] = 'datetime';
         $this->fieldspec['created_date']['html_form_options'] = '';
         $this->fieldspec['created_date']['html_form_explanation'] = '';
         $this->fieldspec['created_date']['help_text'] = '';
         $this->fieldspec['created_date']['mandatory_p'] = 'N';
         $this->fieldspec['created_date']['sort_key'] = '0';
         $this->fieldspec['created_date']['form_sort_key'] = '0';
         $this->fieldspec['created_date']['form_number'] = '1';
         $this->fieldspec['created_date']['default_value'] = '';
         $this->fieldspec['created_date']['field_toupper'] = 'NO';
         $this->fieldspec['created_date']['validationprocname'] = '';
         $this->fieldspec['created_date']['c_size'] = '';
         $this->fieldspec['created_date']['prikey'] = 'N';
         $this->fieldspec['created_date']['noedit'] = 'N';
         $this->fieldspec['created_date']['nodisplay'] = 'N';
         $this->fieldspec['created_date']['c_unsigned'] = 'N';
         $this->fieldspec['created_date']['c_zerofill'] = 'N';
         $this->fieldspec['created_date']['c_auto_increment'] = 'N';
         $this->fieldspec['created_date']['foreign_table'] = '';
         $this->fieldspec['created_date']['foreign_key'] = '';
         $this->fieldspec['created_date']['application'] = 'workflow';
         $this->fieldspec['created_date']['issearchable'] = '1';
         $this->fieldspec['created_date']['preinserttrigger'] = '';
         $this->fieldspec['created_date']['postinserttrigger'] = '';
         $this->fieldspec['created_date']['preupdatetrigger'] = '';
         $this->fieldspec['created_date']['postupdatetrigger'] = '';
         $this->fieldspec['created_date']['predeletetrigger'] = '';
         $this->fieldspec['created_date']['postdeletetrigger'] = '';
         $this->fieldspec['created_user']['metadata_id'] = '2691';
         $this->fieldspec['created_user']['table_name'] = 'statecase';
         $this->fieldspec['created_user']['column_name'] = 'created_user';
         $this->fieldspec['created_user']['pretty_name'] = '';
         $this->fieldspec['created_user']['abstract_data_type'] = 'varchar';
         $this->fieldspec['created_user']['db_data_type'] = 'varchar';
         $this->fieldspec['created_user']['field_null'] = 'NO';
         $this->fieldspec['created_user']['field_key'] = '';
         $this->fieldspec['created_user']['extra_sql'] = ' ';
         $this->fieldspec['created_user']['html_form_type'] = 'text';
         $this->fieldspec['created_user']['html_form_options'] = '';
         $this->fieldspec['created_user']['html_form_explanation'] = '';
         $this->fieldspec['created_user']['help_text'] = '';
         $this->fieldspec['created_user']['mandatory_p'] = 'N';
         $this->fieldspec['created_user']['sort_key'] = '0';
         $this->fieldspec['created_user']['form_sort_key'] = '0';
         $this->fieldspec['created_user']['form_number'] = '1';
         $this->fieldspec['created_user']['default_value'] = '';
         $this->fieldspec['created_user']['field_toupper'] = 'NO';
         $this->fieldspec['created_user']['validationprocname'] = '';
         $this->fieldspec['created_user']['c_size'] = '16';
         $this->fieldspec['created_user']['prikey'] = 'N';
         $this->fieldspec['created_user']['noedit'] = 'N';
         $this->fieldspec['created_user']['nodisplay'] = 'N';
         $this->fieldspec['created_user']['c_unsigned'] = 'N';
         $this->fieldspec['created_user']['c_zerofill'] = 'N';
         $this->fieldspec['created_user']['c_auto_increment'] = 'N';
         $this->fieldspec['created_user']['foreign_table'] = '';
         $this->fieldspec['created_user']['foreign_key'] = '';
         $this->fieldspec['created_user']['application'] = 'workflow';
         $this->fieldspec['created_user']['issearchable'] = '1';
         $this->fieldspec['created_user']['preinserttrigger'] = '';
         $this->fieldspec['created_user']['postinserttrigger'] = '';
         $this->fieldspec['created_user']['preupdatetrigger'] = '';
         $this->fieldspec['created_user']['postupdatetrigger'] = '';
         $this->fieldspec['created_user']['predeletetrigger'] = '';
         $this->fieldspec['created_user']['postdeletetrigger'] = '';
         $this->fieldspec['revised_date']['metadata_id'] = '2692';
         $this->fieldspec['revised_date']['table_name'] = 'statecase';
         $this->fieldspec['revised_date']['column_name'] = 'revised_date';
         $this->fieldspec['revised_date']['pretty_name'] = '';
         $this->fieldspec['revised_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['revised_date']['db_data_type'] = 'datetime';
         $this->fieldspec['revised_date']['field_null'] = 'NO';
         $this->fieldspec['revised_date']['field_key'] = '';
         $this->fieldspec['revised_date']['extra_sql'] = ' ';
         $this->fieldspec['revised_date']['html_form_type'] = 'datetime';
         $this->fieldspec['revised_date']['html_form_options'] = '';
         $this->fieldspec['revised_date']['html_form_explanation'] = '';
         $this->fieldspec['revised_date']['help_text'] = '';
         $this->fieldspec['revised_date']['mandatory_p'] = 'N';
         $this->fieldspec['revised_date']['sort_key'] = '0';
         $this->fieldspec['revised_date']['form_sort_key'] = '0';
         $this->fieldspec['revised_date']['form_number'] = '1';
         $this->fieldspec['revised_date']['default_value'] = '';
         $this->fieldspec['revised_date']['field_toupper'] = 'NO';
         $this->fieldspec['revised_date']['validationprocname'] = '';
         $this->fieldspec['revised_date']['c_size'] = '';
         $this->fieldspec['revised_date']['prikey'] = 'N';
         $this->fieldspec['revised_date']['noedit'] = 'N';
         $this->fieldspec['revised_date']['nodisplay'] = 'N';
         $this->fieldspec['revised_date']['c_unsigned'] = 'N';
         $this->fieldspec['revised_date']['c_zerofill'] = 'N';
         $this->fieldspec['revised_date']['c_auto_increment'] = 'N';
         $this->fieldspec['revised_date']['foreign_table'] = '';
         $this->fieldspec['revised_date']['foreign_key'] = '';
         $this->fieldspec['revised_date']['application'] = 'workflow';
         $this->fieldspec['revised_date']['issearchable'] = '1';
         $this->fieldspec['revised_date']['preinserttrigger'] = '';
         $this->fieldspec['revised_date']['postinserttrigger'] = '';
         $this->fieldspec['revised_date']['preupdatetrigger'] = '';
         $this->fieldspec['revised_date']['postupdatetrigger'] = '';
         $this->fieldspec['revised_date']['predeletetrigger'] = '';
         $this->fieldspec['revised_date']['postdeletetrigger'] = '';
         $this->fieldspec['revised_user']['metadata_id'] = '2693';
         $this->fieldspec['revised_user']['table_name'] = 'statecase';
         $this->fieldspec['revised_user']['column_name'] = 'revised_user';
         $this->fieldspec['revised_user']['pretty_name'] = '';
         $this->fieldspec['revised_user']['abstract_data_type'] = 'varchar';
         $this->fieldspec['revised_user']['db_data_type'] = 'varchar';
         $this->fieldspec['revised_user']['field_null'] = 'NO';
         $this->fieldspec['revised_user']['field_key'] = '';
         $this->fieldspec['revised_user']['extra_sql'] = ' ';
         $this->fieldspec['revised_user']['html_form_type'] = 'text';
         $this->fieldspec['revised_user']['html_form_options'] = '';
         $this->fieldspec['revised_user']['html_form_explanation'] = '';
         $this->fieldspec['revised_user']['help_text'] = '';
         $this->fieldspec['revised_user']['mandatory_p'] = 'N';
         $this->fieldspec['revised_user']['sort_key'] = '0';
         $this->fieldspec['revised_user']['form_sort_key'] = '0';
         $this->fieldspec['revised_user']['form_number'] = '1';
         $this->fieldspec['revised_user']['default_value'] = '';
         $this->fieldspec['revised_user']['field_toupper'] = 'NO';
         $this->fieldspec['revised_user']['validationprocname'] = '';
         $this->fieldspec['revised_user']['c_size'] = '16';
         $this->fieldspec['revised_user']['prikey'] = 'N';
         $this->fieldspec['revised_user']['noedit'] = 'N';
         $this->fieldspec['revised_user']['nodisplay'] = 'N';
         $this->fieldspec['revised_user']['c_unsigned'] = 'N';
         $this->fieldspec['revised_user']['c_zerofill'] = 'N';
         $this->fieldspec['revised_user']['c_auto_increment'] = 'N';
         $this->fieldspec['revised_user']['foreign_table'] = '';
         $this->fieldspec['revised_user']['foreign_key'] = '';
         $this->fieldspec['revised_user']['application'] = 'workflow';
         $this->fieldspec['revised_user']['issearchable'] = '1';
         $this->fieldspec['revised_user']['preinserttrigger'] = '';
         $this->fieldspec['revised_user']['postinserttrigger'] = '';
         $this->fieldspec['revised_user']['preupdatetrigger'] = '';
         $this->fieldspec['revised_user']['postupdatetrigger'] = '';
         $this->fieldspec['revised_user']['predeletetrigger'] = '';
         $this->fieldspec['revised_user']['postdeletetrigger'] = '';
         $this->fieldspec['case_id']['metadata_id'] = '2760';
         $this->fieldspec['case_id']['table_name'] = 'statecase';
         $this->fieldspec['case_id']['column_name'] = 'case_id';
         $this->fieldspec['case_id']['pretty_name'] = '';
         $this->fieldspec['case_id']['abstract_data_type'] = 'int';
         $this->fieldspec['case_id']['db_data_type'] = 'int';
         $this->fieldspec['case_id']['field_null'] = 'YES';
         $this->fieldspec['case_id']['field_key'] = '';
         $this->fieldspec['case_id']['extra_sql'] = ' ';
         $this->fieldspec['case_id']['html_form_type'] = 'integer';
         $this->fieldspec['case_id']['html_form_options'] = '';
         $this->fieldspec['case_id']['html_form_explanation'] = '';
         $this->fieldspec['case_id']['help_text'] = '';
         $this->fieldspec['case_id']['mandatory_p'] = 'N';
         $this->fieldspec['case_id']['sort_key'] = '0';
         $this->fieldspec['case_id']['form_sort_key'] = '0';
         $this->fieldspec['case_id']['form_number'] = '1';
         $this->fieldspec['case_id']['default_value'] = '';
         $this->fieldspec['case_id']['field_toupper'] = 'NO';
         $this->fieldspec['case_id']['validationprocname'] = '';
         $this->fieldspec['case_id']['c_size'] = '10';
         $this->fieldspec['case_id']['prikey'] = 'Y';
         $this->fieldspec['case_id']['noedit'] = 'N';
         $this->fieldspec['case_id']['nodisplay'] = 'N';
         $this->fieldspec['case_id']['c_unsigned'] = 'Y';
         $this->fieldspec['case_id']['c_zerofill'] = 'N';
         $this->fieldspec['case_id']['c_auto_increment'] = 'N';
         $this->fieldspec['case_id']['foreign_table'] = '';
         $this->fieldspec['case_id']['foreign_key'] = '';
         $this->fieldspec['case_id']['application'] = 'workflow';
         $this->fieldspec['case_id']['issearchable'] = '1';
         $this->fieldspec['case_id']['preinserttrigger'] = '';
         $this->fieldspec['case_id']['postinserttrigger'] = '';
         $this->fieldspec['case_id']['preupdatetrigger'] = '';
         $this->fieldspec['case_id']['postupdatetrigger'] = '';
         $this->fieldspec['case_id']['predeletetrigger'] = '';
         $this->fieldspec['case_id']['postdeletetrigger'] = '';
         $this->fieldspec['workflow_id']['metadata_id'] = '2761';
         $this->fieldspec['workflow_id']['table_name'] = 'statecase';
         $this->fieldspec['workflow_id']['column_name'] = 'workflow_id';
         $this->fieldspec['workflow_id']['pretty_name'] = '';
         $this->fieldspec['workflow_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['db_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['field_null'] = 'YES';
         $this->fieldspec['workflow_id']['field_key'] = '';
         $this->fieldspec['workflow_id']['extra_sql'] = ' ';
         $this->fieldspec['workflow_id']['html_form_type'] = 'integer';
         $this->fieldspec['workflow_id']['html_form_options'] = '';
         $this->fieldspec['workflow_id']['html_form_explanation'] = '';
         $this->fieldspec['workflow_id']['help_text'] = '';
         $this->fieldspec['workflow_id']['mandatory_p'] = 'N';
         $this->fieldspec['workflow_id']['sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_number'] = '1';
         $this->fieldspec['workflow_id']['default_value'] = '';
         $this->fieldspec['workflow_id']['field_toupper'] = 'NO';
         $this->fieldspec['workflow_id']['validationprocname'] = '';
         $this->fieldspec['workflow_id']['c_size'] = '5';
         $this->fieldspec['workflow_id']['prikey'] = 'N';
         $this->fieldspec['workflow_id']['noedit'] = 'N';
         $this->fieldspec['workflow_id']['nodisplay'] = 'N';
         $this->fieldspec['workflow_id']['c_unsigned'] = 'Y';
         $this->fieldspec['workflow_id']['c_zerofill'] = 'N';
         $this->fieldspec['workflow_id']['c_auto_increment'] = 'N';
         $this->fieldspec['workflow_id']['foreign_table'] = '';
         $this->fieldspec['workflow_id']['foreign_key'] = '';
         $this->fieldspec['workflow_id']['application'] = 'workflow';
         $this->fieldspec['workflow_id']['issearchable'] = '1';
         $this->fieldspec['workflow_id']['preinserttrigger'] = '';
         $this->fieldspec['workflow_id']['postinserttrigger'] = '';
         $this->fieldspec['workflow_id']['preupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['postupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['predeletetrigger'] = '';
         $this->fieldspec['workflow_id']['postdeletetrigger'] = '';
         $this->fieldspec['context']['metadata_id'] = '2762';
         $this->fieldspec['context']['table_name'] = 'statecase';
         $this->fieldspec['context']['column_name'] = 'context';
         $this->fieldspec['context']['pretty_name'] = '';
         $this->fieldspec['context']['abstract_data_type'] = 'varchar';
         $this->fieldspec['context']['db_data_type'] = 'varchar';
         $this->fieldspec['context']['field_null'] = 'YES';
         $this->fieldspec['context']['field_key'] = '';
         $this->fieldspec['context']['extra_sql'] = ' ';
         $this->fieldspec['context']['html_form_type'] = 'text';
         $this->fieldspec['context']['html_form_options'] = '';
         $this->fieldspec['context']['html_form_explanation'] = '';
         $this->fieldspec['context']['help_text'] = '';
         $this->fieldspec['context']['mandatory_p'] = 'N';
         $this->fieldspec['context']['sort_key'] = '0';
         $this->fieldspec['context']['form_sort_key'] = '0';
         $this->fieldspec['context']['form_number'] = '1';
         $this->fieldspec['context']['default_value'] = '';
         $this->fieldspec['context']['field_toupper'] = 'NO';
         $this->fieldspec['context']['validationprocname'] = '';
         $this->fieldspec['context']['c_size'] = '255';
         $this->fieldspec['context']['prikey'] = 'N';
         $this->fieldspec['context']['noedit'] = 'N';
         $this->fieldspec['context']['nodisplay'] = 'N';
         $this->fieldspec['context']['c_unsigned'] = 'N';
         $this->fieldspec['context']['c_zerofill'] = 'N';
         $this->fieldspec['context']['c_auto_increment'] = 'N';
         $this->fieldspec['context']['foreign_table'] = '';
         $this->fieldspec['context']['foreign_key'] = '';
         $this->fieldspec['context']['application'] = 'workflow';
         $this->fieldspec['context']['issearchable'] = '1';
         $this->fieldspec['context']['preinserttrigger'] = '';
         $this->fieldspec['context']['postinserttrigger'] = '';
         $this->fieldspec['context']['preupdatetrigger'] = '';
         $this->fieldspec['context']['postupdatetrigger'] = '';
         $this->fieldspec['context']['predeletetrigger'] = '';
         $this->fieldspec['context']['postdeletetrigger'] = '';
         $this->fieldspec['case_status']['metadata_id'] = '2763';
         $this->fieldspec['case_status']['table_name'] = 'statecase';
         $this->fieldspec['case_status']['column_name'] = 'case_status';
         $this->fieldspec['case_status']['pretty_name'] = '';
         $this->fieldspec['case_status']['abstract_data_type'] = 'char';
         $this->fieldspec['case_status']['db_data_type'] = 'char';
         $this->fieldspec['case_status']['field_null'] = 'YES';
         $this->fieldspec['case_status']['field_key'] = '';
         $this->fieldspec['case_status']['extra_sql'] = ' ';
         $this->fieldspec['case_status']['html_form_type'] = 'text';
         $this->fieldspec['case_status']['html_form_options'] = '';
         $this->fieldspec['case_status']['html_form_explanation'] = '';
         $this->fieldspec['case_status']['help_text'] = '';
         $this->fieldspec['case_status']['mandatory_p'] = 'N';
         $this->fieldspec['case_status']['sort_key'] = '0';
         $this->fieldspec['case_status']['form_sort_key'] = '0';
         $this->fieldspec['case_status']['form_number'] = '1';
         $this->fieldspec['case_status']['default_value'] = '';
         $this->fieldspec['case_status']['field_toupper'] = 'NO';
         $this->fieldspec['case_status']['validationprocname'] = '';
         $this->fieldspec['case_status']['c_size'] = '2';
         $this->fieldspec['case_status']['prikey'] = 'N';
         $this->fieldspec['case_status']['noedit'] = 'N';
         $this->fieldspec['case_status']['nodisplay'] = 'N';
         $this->fieldspec['case_status']['c_unsigned'] = 'N';
         $this->fieldspec['case_status']['c_zerofill'] = 'N';
         $this->fieldspec['case_status']['c_auto_increment'] = 'N';
         $this->fieldspec['case_status']['foreign_table'] = '';
         $this->fieldspec['case_status']['foreign_key'] = '';
         $this->fieldspec['case_status']['application'] = 'workflow';
         $this->fieldspec['case_status']['issearchable'] = '1';
         $this->fieldspec['case_status']['preinserttrigger'] = '';
         $this->fieldspec['case_status']['postinserttrigger'] = '';
         $this->fieldspec['case_status']['preupdatetrigger'] = '';
         $this->fieldspec['case_status']['postupdatetrigger'] = '';
         $this->fieldspec['case_status']['predeletetrigger'] = '';
         $this->fieldspec['case_status']['postdeletetrigger'] = '';
         $this->fieldspec['start_date']['metadata_id'] = '2764';
         $this->fieldspec['start_date']['table_name'] = 'statecase';
         $this->fieldspec['start_date']['column_name'] = 'start_date';
         $this->fieldspec['start_date']['pretty_name'] = '';
         $this->fieldspec['start_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['start_date']['db_data_type'] = 'datetime';
         $this->fieldspec['start_date']['field_null'] = 'YES';
         $this->fieldspec['start_date']['field_key'] = '';
         $this->fieldspec['start_date']['extra_sql'] = ' ';
         $this->fieldspec['start_date']['html_form_type'] = 'datetime';
         $this->fieldspec['start_date']['html_form_options'] = '';
         $this->fieldspec['start_date']['html_form_explanation'] = '';
         $this->fieldspec['start_date']['help_text'] = '';
         $this->fieldspec['start_date']['mandatory_p'] = 'N';
         $this->fieldspec['start_date']['sort_key'] = '0';
         $this->fieldspec['start_date']['form_sort_key'] = '0';
         $this->fieldspec['start_date']['form_number'] = '1';
         $this->fieldspec['start_date']['default_value'] = '';
         $this->fieldspec['start_date']['field_toupper'] = 'NO';
         $this->fieldspec['start_date']['validationprocname'] = '';
         $this->fieldspec['start_date']['c_size'] = '';
         $this->fieldspec['start_date']['prikey'] = 'N';
         $this->fieldspec['start_date']['noedit'] = 'N';
         $this->fieldspec['start_date']['nodisplay'] = 'N';
         $this->fieldspec['start_date']['c_unsigned'] = 'N';
         $this->fieldspec['start_date']['c_zerofill'] = 'N';
         $this->fieldspec['start_date']['c_auto_increment'] = 'N';
         $this->fieldspec['start_date']['foreign_table'] = '';
         $this->fieldspec['start_date']['foreign_key'] = '';
         $this->fieldspec['start_date']['application'] = 'workflow';
         $this->fieldspec['start_date']['issearchable'] = '1';
         $this->fieldspec['start_date']['preinserttrigger'] = '';
         $this->fieldspec['start_date']['postinserttrigger'] = '';
         $this->fieldspec['start_date']['preupdatetrigger'] = '';
         $this->fieldspec['start_date']['postupdatetrigger'] = '';
         $this->fieldspec['start_date']['predeletetrigger'] = '';
         $this->fieldspec['start_date']['postdeletetrigger'] = '';
         $this->fieldspec['end_date']['metadata_id'] = '2765';
         $this->fieldspec['end_date']['table_name'] = 'statecase';
         $this->fieldspec['end_date']['column_name'] = 'end_date';
         $this->fieldspec['end_date']['pretty_name'] = '';
         $this->fieldspec['end_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['end_date']['db_data_type'] = 'datetime';
         $this->fieldspec['end_date']['field_null'] = 'NO';
         $this->fieldspec['end_date']['field_key'] = '';
         $this->fieldspec['end_date']['extra_sql'] = ' ';
         $this->fieldspec['end_date']['html_form_type'] = 'datetime';
         $this->fieldspec['end_date']['html_form_options'] = '';
         $this->fieldspec['end_date']['html_form_explanation'] = '';
         $this->fieldspec['end_date']['help_text'] = '';
         $this->fieldspec['end_date']['mandatory_p'] = 'N';
         $this->fieldspec['end_date']['sort_key'] = '0';
         $this->fieldspec['end_date']['form_sort_key'] = '0';
         $this->fieldspec['end_date']['form_number'] = '1';
         $this->fieldspec['end_date']['default_value'] = '';
         $this->fieldspec['end_date']['field_toupper'] = 'NO';
         $this->fieldspec['end_date']['validationprocname'] = '';
         $this->fieldspec['end_date']['c_size'] = '';
         $this->fieldspec['end_date']['prikey'] = 'N';
         $this->fieldspec['end_date']['noedit'] = 'N';
         $this->fieldspec['end_date']['nodisplay'] = 'N';
         $this->fieldspec['end_date']['c_unsigned'] = 'N';
         $this->fieldspec['end_date']['c_zerofill'] = 'N';
         $this->fieldspec['end_date']['c_auto_increment'] = 'N';
         $this->fieldspec['end_date']['foreign_table'] = '';
         $this->fieldspec['end_date']['foreign_key'] = '';
         $this->fieldspec['end_date']['application'] = 'workflow';
         $this->fieldspec['end_date']['issearchable'] = '1';
         $this->fieldspec['end_date']['preinserttrigger'] = '';
         $this->fieldspec['end_date']['postinserttrigger'] = '';
         $this->fieldspec['end_date']['preupdatetrigger'] = '';
         $this->fieldspec['end_date']['postupdatetrigger'] = '';
         $this->fieldspec['end_date']['predeletetrigger'] = '';
         $this->fieldspec['end_date']['postdeletetrigger'] = '';
         $this->fieldspec['created_date']['metadata_id'] = '2766';
         $this->fieldspec['created_date']['table_name'] = 'statecase';
         $this->fieldspec['created_date']['column_name'] = 'created_date';
         $this->fieldspec['created_date']['pretty_name'] = '';
         $this->fieldspec['created_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['created_date']['db_data_type'] = 'datetime';
         $this->fieldspec['created_date']['field_null'] = 'YES';
         $this->fieldspec['created_date']['field_key'] = '';
         $this->fieldspec['created_date']['extra_sql'] = ' ';
         $this->fieldspec['created_date']['html_form_type'] = 'datetime';
         $this->fieldspec['created_date']['html_form_options'] = '';
         $this->fieldspec['created_date']['html_form_explanation'] = '';
         $this->fieldspec['created_date']['help_text'] = '';
         $this->fieldspec['created_date']['mandatory_p'] = 'N';
         $this->fieldspec['created_date']['sort_key'] = '0';
         $this->fieldspec['created_date']['form_sort_key'] = '0';
         $this->fieldspec['created_date']['form_number'] = '1';
         $this->fieldspec['created_date']['default_value'] = '';
         $this->fieldspec['created_date']['field_toupper'] = 'NO';
         $this->fieldspec['created_date']['validationprocname'] = '';
         $this->fieldspec['created_date']['c_size'] = '';
         $this->fieldspec['created_date']['prikey'] = 'N';
         $this->fieldspec['created_date']['noedit'] = 'N';
         $this->fieldspec['created_date']['nodisplay'] = 'N';
         $this->fieldspec['created_date']['c_unsigned'] = 'N';
         $this->fieldspec['created_date']['c_zerofill'] = 'N';
         $this->fieldspec['created_date']['c_auto_increment'] = 'N';
         $this->fieldspec['created_date']['foreign_table'] = '';
         $this->fieldspec['created_date']['foreign_key'] = '';
         $this->fieldspec['created_date']['application'] = 'workflow';
         $this->fieldspec['created_date']['issearchable'] = '1';
         $this->fieldspec['created_date']['preinserttrigger'] = '';
         $this->fieldspec['created_date']['postinserttrigger'] = '';
         $this->fieldspec['created_date']['preupdatetrigger'] = '';
         $this->fieldspec['created_date']['postupdatetrigger'] = '';
         $this->fieldspec['created_date']['predeletetrigger'] = '';
         $this->fieldspec['created_date']['postdeletetrigger'] = '';
         $this->fieldspec['created_user']['metadata_id'] = '2767';
         $this->fieldspec['created_user']['table_name'] = 'statecase';
         $this->fieldspec['created_user']['column_name'] = 'created_user';
         $this->fieldspec['created_user']['pretty_name'] = '';
         $this->fieldspec['created_user']['abstract_data_type'] = 'varchar';
         $this->fieldspec['created_user']['db_data_type'] = 'varchar';
         $this->fieldspec['created_user']['field_null'] = 'NO';
         $this->fieldspec['created_user']['field_key'] = '';
         $this->fieldspec['created_user']['extra_sql'] = ' ';
         $this->fieldspec['created_user']['html_form_type'] = 'text';
         $this->fieldspec['created_user']['html_form_options'] = '';
         $this->fieldspec['created_user']['html_form_explanation'] = '';
         $this->fieldspec['created_user']['help_text'] = '';
         $this->fieldspec['created_user']['mandatory_p'] = 'N';
         $this->fieldspec['created_user']['sort_key'] = '0';
         $this->fieldspec['created_user']['form_sort_key'] = '0';
         $this->fieldspec['created_user']['form_number'] = '1';
         $this->fieldspec['created_user']['default_value'] = '';
         $this->fieldspec['created_user']['field_toupper'] = 'NO';
         $this->fieldspec['created_user']['validationprocname'] = '';
         $this->fieldspec['created_user']['c_size'] = '16';
         $this->fieldspec['created_user']['prikey'] = 'N';
         $this->fieldspec['created_user']['noedit'] = 'N';
         $this->fieldspec['created_user']['nodisplay'] = 'N';
         $this->fieldspec['created_user']['c_unsigned'] = 'N';
         $this->fieldspec['created_user']['c_zerofill'] = 'N';
         $this->fieldspec['created_user']['c_auto_increment'] = 'N';
         $this->fieldspec['created_user']['foreign_table'] = '';
         $this->fieldspec['created_user']['foreign_key'] = '';
         $this->fieldspec['created_user']['application'] = 'workflow';
         $this->fieldspec['created_user']['issearchable'] = '1';
         $this->fieldspec['created_user']['preinserttrigger'] = '';
         $this->fieldspec['created_user']['postinserttrigger'] = '';
         $this->fieldspec['created_user']['preupdatetrigger'] = '';
         $this->fieldspec['created_user']['postupdatetrigger'] = '';
         $this->fieldspec['created_user']['predeletetrigger'] = '';
         $this->fieldspec['created_user']['postdeletetrigger'] = '';
         $this->fieldspec['revised_date']['metadata_id'] = '2768';
         $this->fieldspec['revised_date']['table_name'] = 'statecase';
         $this->fieldspec['revised_date']['column_name'] = 'revised_date';
         $this->fieldspec['revised_date']['pretty_name'] = '';
         $this->fieldspec['revised_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['revised_date']['db_data_type'] = 'datetime';
         $this->fieldspec['revised_date']['field_null'] = 'NO';
         $this->fieldspec['revised_date']['field_key'] = '';
         $this->fieldspec['revised_date']['extra_sql'] = ' ';
         $this->fieldspec['revised_date']['html_form_type'] = 'datetime';
         $this->fieldspec['revised_date']['html_form_options'] = '';
         $this->fieldspec['revised_date']['html_form_explanation'] = '';
         $this->fieldspec['revised_date']['help_text'] = '';
         $this->fieldspec['revised_date']['mandatory_p'] = 'N';
         $this->fieldspec['revised_date']['sort_key'] = '0';
         $this->fieldspec['revised_date']['form_sort_key'] = '0';
         $this->fieldspec['revised_date']['form_number'] = '1';
         $this->fieldspec['revised_date']['default_value'] = '';
         $this->fieldspec['revised_date']['field_toupper'] = 'NO';
         $this->fieldspec['revised_date']['validationprocname'] = '';
         $this->fieldspec['revised_date']['c_size'] = '';
         $this->fieldspec['revised_date']['prikey'] = 'N';
         $this->fieldspec['revised_date']['noedit'] = 'N';
         $this->fieldspec['revised_date']['nodisplay'] = 'N';
         $this->fieldspec['revised_date']['c_unsigned'] = 'N';
         $this->fieldspec['revised_date']['c_zerofill'] = 'N';
         $this->fieldspec['revised_date']['c_auto_increment'] = 'N';
         $this->fieldspec['revised_date']['foreign_table'] = '';
         $this->fieldspec['revised_date']['foreign_key'] = '';
         $this->fieldspec['revised_date']['application'] = 'workflow';
         $this->fieldspec['revised_date']['issearchable'] = '1';
         $this->fieldspec['revised_date']['preinserttrigger'] = '';
         $this->fieldspec['revised_date']['postinserttrigger'] = '';
         $this->fieldspec['revised_date']['preupdatetrigger'] = '';
         $this->fieldspec['revised_date']['postupdatetrigger'] = '';
         $this->fieldspec['revised_date']['predeletetrigger'] = '';
         $this->fieldspec['revised_date']['postdeletetrigger'] = '';
         $this->fieldspec['revised_user']['metadata_id'] = '2769';
         $this->fieldspec['revised_user']['table_name'] = 'statecase';
         $this->fieldspec['revised_user']['column_name'] = 'revised_user';
         $this->fieldspec['revised_user']['pretty_name'] = '';
         $this->fieldspec['revised_user']['abstract_data_type'] = 'varchar';
         $this->fieldspec['revised_user']['db_data_type'] = 'varchar';
         $this->fieldspec['revised_user']['field_null'] = 'NO';
         $this->fieldspec['revised_user']['field_key'] = '';
         $this->fieldspec['revised_user']['extra_sql'] = ' ';
         $this->fieldspec['revised_user']['html_form_type'] = 'text';
         $this->fieldspec['revised_user']['html_form_options'] = '';
         $this->fieldspec['revised_user']['html_form_explanation'] = '';
         $this->fieldspec['revised_user']['help_text'] = '';
         $this->fieldspec['revised_user']['mandatory_p'] = 'N';
         $this->fieldspec['revised_user']['sort_key'] = '0';
         $this->fieldspec['revised_user']['form_sort_key'] = '0';
         $this->fieldspec['revised_user']['form_number'] = '1';
         $this->fieldspec['revised_user']['default_value'] = '';
         $this->fieldspec['revised_user']['field_toupper'] = 'NO';
         $this->fieldspec['revised_user']['validationprocname'] = '';
         $this->fieldspec['revised_user']['c_size'] = '16';
         $this->fieldspec['revised_user']['prikey'] = 'N';
         $this->fieldspec['revised_user']['noedit'] = 'N';
         $this->fieldspec['revised_user']['nodisplay'] = 'N';
         $this->fieldspec['revised_user']['c_unsigned'] = 'N';
         $this->fieldspec['revised_user']['c_zerofill'] = 'N';
         $this->fieldspec['revised_user']['c_auto_increment'] = 'N';
         $this->fieldspec['revised_user']['foreign_table'] = '';
         $this->fieldspec['revised_user']['foreign_key'] = '';
         $this->fieldspec['revised_user']['application'] = 'workflow';
         $this->fieldspec['revised_user']['issearchable'] = '1';
         $this->fieldspec['revised_user']['preinserttrigger'] = '';
         $this->fieldspec['revised_user']['postinserttrigger'] = '';
         $this->fieldspec['revised_user']['preupdatetrigger'] = '';
         $this->fieldspec['revised_user']['postupdatetrigger'] = '';
         $this->fieldspec['revised_user']['predeletetrigger'] = '';
         $this->fieldspec['revised_user']['postdeletetrigger'] = '';
         $this->fieldlist = array('case_id', 'workflow_id', 'context', 'case_status', 'start_date', 'end_date', 'created_date', 'created_user', 'revised_date', 'revised_user', 'case_id', 'workflow_id', 'context', 'case_status', 'start_date', 'end_date', 'created_date', 'created_user', 'revised_date', 'revised_user');
         $this->searchlist = array('case_id', 'workflow_id', 'context', 'case_status', 'start_date', 'end_date', 'created_date', 'created_user', 'revised_date', 'revised_user', 'case_id', 'workflow_id', 'context', 'case_status', 'start_date', 'end_date', 'created_date', 'created_user', 'revised_date', 'revised_user', );
	         return SUCCESS;
         }
         function statecase()
         { //For older php which doesn't have constructor
              return $this->__constructor();
         }
         function Push()
         {
	         $_SESSION['statecase'] = serialize($this);
	         return SUCCESS;
         }
         function Pop()
         {
                 //Can't do this in self - this is how to do it outside
	       //  $this = unserialize($_SESSION['statecase']);
	         return SUCCESS;
         }
         function ObserverRegister( $observer, $event )
         {
                 $this->observers[$event][] = $observer;
	         return SUCCESS;
         }
         function ObserverDeRegister( $observer )
         {
                 $this->observers[] = array_diff( $this->observers, array( $observer) );
	         return SUCCESS;
         }
         function ObserverNotify( $event, $msg )
         {
                 if ( isset( $this->observers[$event] ) )
                 	foreach ( $this->observers[$event] as $obs ) 
                 	{
                      		$obs->notify( $event, $msg );
                 	}
                 /* '**' being used as 'ALL' */
                 if ( isset( $this->observers['**'] ) )
                 	foreach ( $this->observers['**'] as $obs ) 
                 	{
                      		$obs->notify( $event, $msg );
                 	}
	         return SUCCESS;
         }
         function notify( $object )
         {
                 //Called when another object we are observing sends us a notification
	         return SUCCESS;
         }
         function Precase_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idInsert ) )
	            return Precase_idInsert( $this );
                 else return;
         }
         function Postcase_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idInsert ) )
	            return Precase_idInsert( $this );
                 else return;
         }
         function Precase_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idUpdate ) )
	            return Precase_idUpdate( $this );
                 else return;
         }
         function Postcase_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idUpdate ) )
	            return Precase_idUpdate( $this );
                 else return;
         }
         function Precase_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idDelete ) )
	            return Precase_idDelete( $this );
                 else return;
         }
         function Postcase_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idDelete ) )
	            return Precase_idDelete( $this );
                 else return;
         }
         function Setcase_id($value)
         {
                 $this->case_id = $value;
	          return SUCCESS;
         }
         function Getcase_id()
         {
                    return $this->case_id;
         }
         function Preworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Postworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Preworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Postworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Preworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Postworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Setworkflow_id($value)
         {
                 $this->workflow_id = $value;
	          return SUCCESS;
         }
         function Getworkflow_id()
         {
                    return $this->workflow_id;
         }
         function PrecontextInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextInsert ) )
	            return PrecontextInsert( $this );
                 else return;
         }
         function PostcontextInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextInsert ) )
	            return PrecontextInsert( $this );
                 else return;
         }
         function PrecontextUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextUpdate ) )
	            return PrecontextUpdate( $this );
                 else return;
         }
         function PostcontextUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextUpdate ) )
	            return PrecontextUpdate( $this );
                 else return;
         }
         function PrecontextDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextDelete ) )
	            return PrecontextDelete( $this );
                 else return;
         }
         function PostcontextDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextDelete ) )
	            return PrecontextDelete( $this );
                 else return;
         }
         function Setcontext($value)
         {
                 $this->context = $value;
	          return SUCCESS;
         }
         function Getcontext()
         {
                    return $this->context;
         }
         function Precase_statusInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_statusInsert ) )
	            return Precase_statusInsert( $this );
                 else return;
         }
         function Postcase_statusInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_statusInsert ) )
	            return Precase_statusInsert( $this );
                 else return;
         }
         function Precase_statusUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_statusUpdate ) )
	            return Precase_statusUpdate( $this );
                 else return;
         }
         function Postcase_statusUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_statusUpdate ) )
	            return Precase_statusUpdate( $this );
                 else return;
         }
         function Precase_statusDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_statusDelete ) )
	            return Precase_statusDelete( $this );
                 else return;
         }
         function Postcase_statusDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_statusDelete ) )
	            return Precase_statusDelete( $this );
                 else return;
         }
         function Setcase_status($value)
         {
                 $this->case_status = $value;
	          return SUCCESS;
         }
         function Getcase_status()
         {
                    return $this->case_status;
         }
         function Prestart_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateInsert ) )
	            return Prestart_dateInsert( $this );
                 else return;
         }
         function Poststart_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateInsert ) )
	            return Prestart_dateInsert( $this );
                 else return;
         }
         function Prestart_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateUpdate ) )
	            return Prestart_dateUpdate( $this );
                 else return;
         }
         function Poststart_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateUpdate ) )
	            return Prestart_dateUpdate( $this );
                 else return;
         }
         function Prestart_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateDelete ) )
	            return Prestart_dateDelete( $this );
                 else return;
         }
         function Poststart_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateDelete ) )
	            return Prestart_dateDelete( $this );
                 else return;
         }
         function Setstart_date($value)
         {
                 $this->start_date = $value;
	          return SUCCESS;
         }
         function Getstart_date()
         {
                    return $this->start_date;
         }
         function Preend_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateInsert ) )
	            return Preend_dateInsert( $this );
                 else return;
         }
         function Postend_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateInsert ) )
	            return Preend_dateInsert( $this );
                 else return;
         }
         function Preend_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateUpdate ) )
	            return Preend_dateUpdate( $this );
                 else return;
         }
         function Postend_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateUpdate ) )
	            return Preend_dateUpdate( $this );
                 else return;
         }
         function Preend_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateDelete ) )
	            return Preend_dateDelete( $this );
                 else return;
         }
         function Postend_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateDelete ) )
	            return Preend_dateDelete( $this );
                 else return;
         }
         function Setend_date($value)
         {
                 $this->end_date = $value;
	          return SUCCESS;
         }
         function Getend_date()
         {
                    return $this->end_date;
         }
         function Precreated_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateInsert ) )
	            return Precreated_dateInsert( $this );
                 else return;
         }
         function Postcreated_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateInsert ) )
	            return Precreated_dateInsert( $this );
                 else return;
         }
         function Precreated_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateUpdate ) )
	            return Precreated_dateUpdate( $this );
                 else return;
         }
         function Postcreated_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateUpdate ) )
	            return Precreated_dateUpdate( $this );
                 else return;
         }
         function Precreated_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateDelete ) )
	            return Precreated_dateDelete( $this );
                 else return;
         }
         function Postcreated_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateDelete ) )
	            return Precreated_dateDelete( $this );
                 else return;
         }
         function Setcreated_date($value)
         {
                 $this->created_date = $value;
	          return SUCCESS;
         }
         function Getcreated_date()
         {
                    return $this->created_date;
         }
         function Precreated_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userInsert ) )
	            return Precreated_userInsert( $this );
                 else return;
         }
         function Postcreated_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userInsert ) )
	            return Precreated_userInsert( $this );
                 else return;
         }
         function Precreated_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userUpdate ) )
	            return Precreated_userUpdate( $this );
                 else return;
         }
         function Postcreated_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userUpdate ) )
	            return Precreated_userUpdate( $this );
                 else return;
         }
         function Precreated_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userDelete ) )
	            return Precreated_userDelete( $this );
                 else return;
         }
         function Postcreated_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userDelete ) )
	            return Precreated_userDelete( $this );
                 else return;
         }
         function Setcreated_user($value)
         {
                 $this->created_user = $value;
	          return SUCCESS;
         }
         function Getcreated_user()
         {
                    return $this->created_user;
         }
         function Prerevised_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateInsert ) )
	            return Prerevised_dateInsert( $this );
                 else return;
         }
         function Postrevised_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateInsert ) )
	            return Prerevised_dateInsert( $this );
                 else return;
         }
         function Prerevised_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateUpdate ) )
	            return Prerevised_dateUpdate( $this );
                 else return;
         }
         function Postrevised_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateUpdate ) )
	            return Prerevised_dateUpdate( $this );
                 else return;
         }
         function Prerevised_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateDelete ) )
	            return Prerevised_dateDelete( $this );
                 else return;
         }
         function Postrevised_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateDelete ) )
	            return Prerevised_dateDelete( $this );
                 else return;
         }
         function Setrevised_date($value)
         {
                 $this->revised_date = $value;
	          return SUCCESS;
         }
         function Getrevised_date()
         {
                    return $this->revised_date;
         }
         function Prerevised_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userInsert ) )
	            return Prerevised_userInsert( $this );
                 else return;
         }
         function Postrevised_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userInsert ) )
	            return Prerevised_userInsert( $this );
                 else return;
         }
         function Prerevised_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userUpdate ) )
	            return Prerevised_userUpdate( $this );
                 else return;
         }
         function Postrevised_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userUpdate ) )
	            return Prerevised_userUpdate( $this );
                 else return;
         }
         function Prerevised_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userDelete ) )
	            return Prerevised_userDelete( $this );
                 else return;
         }
         function Postrevised_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userDelete ) )
	            return Prerevised_userDelete( $this );
                 else return;
         }
         function Setrevised_user($value)
         {
                 $this->revised_user = $value;
	          return SUCCESS;
         }
         function Getrevised_user()
         {
                    return $this->revised_user;
         }
         function Precase_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idInsert ) )
	            return Precase_idInsert( $this );
                 else return;
         }
         function Postcase_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idInsert ) )
	            return Precase_idInsert( $this );
                 else return;
         }
         function Precase_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idUpdate ) )
	            return Precase_idUpdate( $this );
                 else return;
         }
         function Postcase_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idUpdate ) )
	            return Precase_idUpdate( $this );
                 else return;
         }
         function Precase_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idDelete ) )
	            return Precase_idDelete( $this );
                 else return;
         }
         function Postcase_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idDelete ) )
	            return Precase_idDelete( $this );
                 else return;
         }
         function Setcase_id($value)
         {
                 $this->case_id = $value;
	          return SUCCESS;
         }
         function Getcase_id()
         {
                    return $this->case_id;
         }
         function Preworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Postworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Preworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Postworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Preworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Postworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Setworkflow_id($value)
         {
                 $this->workflow_id = $value;
	          return SUCCESS;
         }
         function Getworkflow_id()
         {
                    return $this->workflow_id;
         }
         function PrecontextInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextInsert ) )
	            return PrecontextInsert( $this );
                 else return;
         }
         function PostcontextInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextInsert ) )
	            return PrecontextInsert( $this );
                 else return;
         }
         function PrecontextUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextUpdate ) )
	            return PrecontextUpdate( $this );
                 else return;
         }
         function PostcontextUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextUpdate ) )
	            return PrecontextUpdate( $this );
                 else return;
         }
         function PrecontextDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextDelete ) )
	            return PrecontextDelete( $this );
                 else return;
         }
         function PostcontextDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextDelete ) )
	            return PrecontextDelete( $this );
                 else return;
         }
         function Setcontext($value)
         {
                 $this->context = $value;
	          return SUCCESS;
         }
         function Getcontext()
         {
                    return $this->context;
         }
         function Precase_statusInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_statusInsert ) )
	            return Precase_statusInsert( $this );
                 else return;
         }
         function Postcase_statusInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_statusInsert ) )
	            return Precase_statusInsert( $this );
                 else return;
         }
         function Precase_statusUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_statusUpdate ) )
	            return Precase_statusUpdate( $this );
                 else return;
         }
         function Postcase_statusUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_statusUpdate ) )
	            return Precase_statusUpdate( $this );
                 else return;
         }
         function Precase_statusDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_statusDelete ) )
	            return Precase_statusDelete( $this );
                 else return;
         }
         function Postcase_statusDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_statusDelete ) )
	            return Precase_statusDelete( $this );
                 else return;
         }
         function Setcase_status($value)
         {
                 $this->case_status = $value;
	          return SUCCESS;
         }
         function Getcase_status()
         {
                    return $this->case_status;
         }
         function Prestart_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateInsert ) )
	            return Prestart_dateInsert( $this );
                 else return;
         }
         function Poststart_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateInsert ) )
	            return Prestart_dateInsert( $this );
                 else return;
         }
         function Prestart_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateUpdate ) )
	            return Prestart_dateUpdate( $this );
                 else return;
         }
         function Poststart_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateUpdate ) )
	            return Prestart_dateUpdate( $this );
                 else return;
         }
         function Prestart_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateDelete ) )
	            return Prestart_dateDelete( $this );
                 else return;
         }
         function Poststart_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prestart_dateDelete ) )
	            return Prestart_dateDelete( $this );
                 else return;
         }
         function Setstart_date($value)
         {
                 $this->start_date = $value;
	          return SUCCESS;
         }
         function Getstart_date()
         {
                    return $this->start_date;
         }
         function Preend_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateInsert ) )
	            return Preend_dateInsert( $this );
                 else return;
         }
         function Postend_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateInsert ) )
	            return Preend_dateInsert( $this );
                 else return;
         }
         function Preend_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateUpdate ) )
	            return Preend_dateUpdate( $this );
                 else return;
         }
         function Postend_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateUpdate ) )
	            return Preend_dateUpdate( $this );
                 else return;
         }
         function Preend_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateDelete ) )
	            return Preend_dateDelete( $this );
                 else return;
         }
         function Postend_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preend_dateDelete ) )
	            return Preend_dateDelete( $this );
                 else return;
         }
         function Setend_date($value)
         {
                 $this->end_date = $value;
	          return SUCCESS;
         }
         function Getend_date()
         {
                    return $this->end_date;
         }
         function Precreated_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateInsert ) )
	            return Precreated_dateInsert( $this );
                 else return;
         }
         function Postcreated_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateInsert ) )
	            return Precreated_dateInsert( $this );
                 else return;
         }
         function Precreated_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateUpdate ) )
	            return Precreated_dateUpdate( $this );
                 else return;
         }
         function Postcreated_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateUpdate ) )
	            return Precreated_dateUpdate( $this );
                 else return;
         }
         function Precreated_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateDelete ) )
	            return Precreated_dateDelete( $this );
                 else return;
         }
         function Postcreated_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateDelete ) )
	            return Precreated_dateDelete( $this );
                 else return;
         }
         function Setcreated_date($value)
         {
                 $this->created_date = $value;
	          return SUCCESS;
         }
         function Getcreated_date()
         {
                    return $this->created_date;
         }
         function Precreated_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userInsert ) )
	            return Precreated_userInsert( $this );
                 else return;
         }
         function Postcreated_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userInsert ) )
	            return Precreated_userInsert( $this );
                 else return;
         }
         function Precreated_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userUpdate ) )
	            return Precreated_userUpdate( $this );
                 else return;
         }
         function Postcreated_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userUpdate ) )
	            return Precreated_userUpdate( $this );
                 else return;
         }
         function Precreated_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userDelete ) )
	            return Precreated_userDelete( $this );
                 else return;
         }
         function Postcreated_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userDelete ) )
	            return Precreated_userDelete( $this );
                 else return;
         }
         function Setcreated_user($value)
         {
                 $this->created_user = $value;
	          return SUCCESS;
         }
         function Getcreated_user()
         {
                    return $this->created_user;
         }
         function Prerevised_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateInsert ) )
	            return Prerevised_dateInsert( $this );
                 else return;
         }
         function Postrevised_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateInsert ) )
	            return Prerevised_dateInsert( $this );
                 else return;
         }
         function Prerevised_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateUpdate ) )
	            return Prerevised_dateUpdate( $this );
                 else return;
         }
         function Postrevised_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateUpdate ) )
	            return Prerevised_dateUpdate( $this );
                 else return;
         }
         function Prerevised_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateDelete ) )
	            return Prerevised_dateDelete( $this );
                 else return;
         }
         function Postrevised_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateDelete ) )
	            return Prerevised_dateDelete( $this );
                 else return;
         }
         function Setrevised_date($value)
         {
                 $this->revised_date = $value;
	          return SUCCESS;
         }
         function Getrevised_date()
         {
                    return $this->revised_date;
         }
         function Prerevised_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userInsert ) )
	            return Prerevised_userInsert( $this );
                 else return;
         }
         function Postrevised_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userInsert ) )
	            return Prerevised_userInsert( $this );
                 else return;
         }
         function Prerevised_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userUpdate ) )
	            return Prerevised_userUpdate( $this );
                 else return;
         }
         function Postrevised_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userUpdate ) )
	            return Prerevised_userUpdate( $this );
                 else return;
         }
         function Prerevised_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userDelete ) )
	            return Prerevised_userDelete( $this );
                 else return;
         }
         function Postrevised_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userDelete ) )
	            return Prerevised_userDelete( $this );
                 else return;
         }
         function Setrevised_user($value)
         {
                 $this->revised_user = $value;
	          return SUCCESS;
         }
         function Getrevised_user()
         {
                    return $this->revised_user;
         }
} /* class statecase */
