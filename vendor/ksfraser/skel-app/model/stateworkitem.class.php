<?php 
//This file was generated by calling php /var/www/html/codemeta/generator.php workflow 

//this script may only be included - so its better to die if called directly.
if ( strpos( $_SERVER["SCRIPT_NAME"], basename(__FILE__) ) !== false ) {
  header( "location: ../index.php" );
  exit;
}

class stateworkitem extends generictable 
{
          private $observers;
         var $data; //data passed in by other calls         var $case_id;
		 /* */
         var $workitem_id;
		 /* */
         var $workflow_id;
		 /* */
         var $transition_id;
		 /* */
         var $transition_trigger;
		 /* */
         var $task_id;
		 /* */
         var $context;
		 /* */
         var $workitem_status;
		 /* */
         var $enabled_date;
		 /* */
         var $cancelled_date;
		 /* */
         var $finished_date;
		 /* */
         var $deadline;
		 /* */
         var $roles_id;
		 /* */
         var $user_id;
		 /* */
         var $case_id;
		 /* */
         var $workitem_id;
		 /* */
         var $workflow_id;
		 /* */
         var $transition_id;
		 /* */
         var $transition_trigger;
		 /* */
         var $task_id;
		 /* */
         var $context;
		 /* */
         var $workitem_status;
		 /* */
         var $enabled_date;
		 /* */
         var $cancelled_date;
		 /* */
         var $finished_date;
		 /* */
         var $deadline;
		 /* */
         var $roles_id;
		 /* */
         var $user_id;
		 /* */
         function __constructor()
         {
         $this->querytablename = 'stateworkitem';
         $this->fieldspec['case_id']['metadata_id'] = '2668';
         $this->fieldspec['case_id']['table_name'] = 'stateworkitem';
         $this->fieldspec['case_id']['column_name'] = 'case_id';
         $this->fieldspec['case_id']['pretty_name'] = '';
         $this->fieldspec['case_id']['abstract_data_type'] = 'int';
         $this->fieldspec['case_id']['db_data_type'] = 'int';
         $this->fieldspec['case_id']['field_null'] = 'YES';
         $this->fieldspec['case_id']['field_key'] = '';
         $this->fieldspec['case_id']['extra_sql'] = ' ';
         $this->fieldspec['case_id']['html_form_type'] = 'integer';
         $this->fieldspec['case_id']['html_form_options'] = '';
         $this->fieldspec['case_id']['html_form_explanation'] = '';
         $this->fieldspec['case_id']['help_text'] = '';
         $this->fieldspec['case_id']['mandatory_p'] = 'N';
         $this->fieldspec['case_id']['sort_key'] = '0';
         $this->fieldspec['case_id']['form_sort_key'] = '0';
         $this->fieldspec['case_id']['form_number'] = '1';
         $this->fieldspec['case_id']['default_value'] = '';
         $this->fieldspec['case_id']['field_toupper'] = 'NO';
         $this->fieldspec['case_id']['validationprocname'] = '';
         $this->fieldspec['case_id']['c_size'] = '10';
         $this->fieldspec['case_id']['prikey'] = 'Y';
         $this->fieldspec['case_id']['noedit'] = 'N';
         $this->fieldspec['case_id']['nodisplay'] = 'N';
         $this->fieldspec['case_id']['c_unsigned'] = 'Y';
         $this->fieldspec['case_id']['c_zerofill'] = 'N';
         $this->fieldspec['case_id']['c_auto_increment'] = 'N';
         $this->fieldspec['case_id']['foreign_table'] = '';
         $this->fieldspec['case_id']['foreign_key'] = '';
         $this->fieldspec['case_id']['application'] = 'workflow';
         $this->fieldspec['case_id']['issearchable'] = '1';
         $this->fieldspec['case_id']['preinserttrigger'] = '';
         $this->fieldspec['case_id']['postinserttrigger'] = '';
         $this->fieldspec['case_id']['preupdatetrigger'] = '';
         $this->fieldspec['case_id']['postupdatetrigger'] = '';
         $this->fieldspec['case_id']['predeletetrigger'] = '';
         $this->fieldspec['case_id']['postdeletetrigger'] = '';
         $this->fieldspec['workitem_id']['metadata_id'] = '2669';
         $this->fieldspec['workitem_id']['table_name'] = 'stateworkitem';
         $this->fieldspec['workitem_id']['column_name'] = 'workitem_id';
         $this->fieldspec['workitem_id']['pretty_name'] = '';
         $this->fieldspec['workitem_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['workitem_id']['db_data_type'] = 'smallint';
         $this->fieldspec['workitem_id']['field_null'] = 'YES';
         $this->fieldspec['workitem_id']['field_key'] = '';
         $this->fieldspec['workitem_id']['extra_sql'] = ' ';
         $this->fieldspec['workitem_id']['html_form_type'] = 'integer';
         $this->fieldspec['workitem_id']['html_form_options'] = '';
         $this->fieldspec['workitem_id']['html_form_explanation'] = '';
         $this->fieldspec['workitem_id']['help_text'] = '';
         $this->fieldspec['workitem_id']['mandatory_p'] = 'N';
         $this->fieldspec['workitem_id']['sort_key'] = '0';
         $this->fieldspec['workitem_id']['form_sort_key'] = '0';
         $this->fieldspec['workitem_id']['form_number'] = '1';
         $this->fieldspec['workitem_id']['default_value'] = '';
         $this->fieldspec['workitem_id']['field_toupper'] = 'NO';
         $this->fieldspec['workitem_id']['validationprocname'] = '';
         $this->fieldspec['workitem_id']['c_size'] = '5';
         $this->fieldspec['workitem_id']['prikey'] = 'Y';
         $this->fieldspec['workitem_id']['noedit'] = 'N';
         $this->fieldspec['workitem_id']['nodisplay'] = 'N';
         $this->fieldspec['workitem_id']['c_unsigned'] = 'Y';
         $this->fieldspec['workitem_id']['c_zerofill'] = 'N';
         $this->fieldspec['workitem_id']['c_auto_increment'] = 'N';
         $this->fieldspec['workitem_id']['foreign_table'] = '';
         $this->fieldspec['workitem_id']['foreign_key'] = '';
         $this->fieldspec['workitem_id']['application'] = 'workflow';
         $this->fieldspec['workitem_id']['issearchable'] = '1';
         $this->fieldspec['workitem_id']['preinserttrigger'] = '';
         $this->fieldspec['workitem_id']['postinserttrigger'] = '';
         $this->fieldspec['workitem_id']['preupdatetrigger'] = '';
         $this->fieldspec['workitem_id']['postupdatetrigger'] = '';
         $this->fieldspec['workitem_id']['predeletetrigger'] = '';
         $this->fieldspec['workitem_id']['postdeletetrigger'] = '';
         $this->fieldspec['workflow_id']['metadata_id'] = '2670';
         $this->fieldspec['workflow_id']['table_name'] = 'stateworkitem';
         $this->fieldspec['workflow_id']['column_name'] = 'workflow_id';
         $this->fieldspec['workflow_id']['pretty_name'] = '';
         $this->fieldspec['workflow_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['db_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['field_null'] = 'YES';
         $this->fieldspec['workflow_id']['field_key'] = '';
         $this->fieldspec['workflow_id']['extra_sql'] = ' ';
         $this->fieldspec['workflow_id']['html_form_type'] = 'integer';
         $this->fieldspec['workflow_id']['html_form_options'] = '';
         $this->fieldspec['workflow_id']['html_form_explanation'] = '';
         $this->fieldspec['workflow_id']['help_text'] = '';
         $this->fieldspec['workflow_id']['mandatory_p'] = 'N';
         $this->fieldspec['workflow_id']['sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_number'] = '1';
         $this->fieldspec['workflow_id']['default_value'] = '';
         $this->fieldspec['workflow_id']['field_toupper'] = 'NO';
         $this->fieldspec['workflow_id']['validationprocname'] = '';
         $this->fieldspec['workflow_id']['c_size'] = '6';
         $this->fieldspec['workflow_id']['prikey'] = 'N';
         $this->fieldspec['workflow_id']['noedit'] = 'N';
         $this->fieldspec['workflow_id']['nodisplay'] = 'N';
         $this->fieldspec['workflow_id']['c_unsigned'] = 'Y';
         $this->fieldspec['workflow_id']['c_zerofill'] = 'N';
         $this->fieldspec['workflow_id']['c_auto_increment'] = 'N';
         $this->fieldspec['workflow_id']['foreign_table'] = '';
         $this->fieldspec['workflow_id']['foreign_key'] = '';
         $this->fieldspec['workflow_id']['application'] = 'workflow';
         $this->fieldspec['workflow_id']['issearchable'] = '1';
         $this->fieldspec['workflow_id']['preinserttrigger'] = '';
         $this->fieldspec['workflow_id']['postinserttrigger'] = '';
         $this->fieldspec['workflow_id']['preupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['postupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['predeletetrigger'] = '';
         $this->fieldspec['workflow_id']['postdeletetrigger'] = '';
         $this->fieldspec['transition_id']['metadata_id'] = '2671';
         $this->fieldspec['transition_id']['table_name'] = 'stateworkitem';
         $this->fieldspec['transition_id']['column_name'] = 'transition_id';
         $this->fieldspec['transition_id']['pretty_name'] = '';
         $this->fieldspec['transition_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['transition_id']['db_data_type'] = 'smallint';
         $this->fieldspec['transition_id']['field_null'] = 'YES';
         $this->fieldspec['transition_id']['field_key'] = '';
         $this->fieldspec['transition_id']['extra_sql'] = ' ';
         $this->fieldspec['transition_id']['html_form_type'] = 'integer';
         $this->fieldspec['transition_id']['html_form_options'] = '';
         $this->fieldspec['transition_id']['html_form_explanation'] = '';
         $this->fieldspec['transition_id']['help_text'] = '';
         $this->fieldspec['transition_id']['mandatory_p'] = 'N';
         $this->fieldspec['transition_id']['sort_key'] = '0';
         $this->fieldspec['transition_id']['form_sort_key'] = '0';
         $this->fieldspec['transition_id']['form_number'] = '1';
         $this->fieldspec['transition_id']['default_value'] = '';
         $this->fieldspec['transition_id']['field_toupper'] = 'NO';
         $this->fieldspec['transition_id']['validationprocname'] = '';
         $this->fieldspec['transition_id']['c_size'] = '5';
         $this->fieldspec['transition_id']['prikey'] = 'N';
         $this->fieldspec['transition_id']['noedit'] = 'N';
         $this->fieldspec['transition_id']['nodisplay'] = 'N';
         $this->fieldspec['transition_id']['c_unsigned'] = 'Y';
         $this->fieldspec['transition_id']['c_zerofill'] = 'N';
         $this->fieldspec['transition_id']['c_auto_increment'] = 'N';
         $this->fieldspec['transition_id']['foreign_table'] = '';
         $this->fieldspec['transition_id']['foreign_key'] = '';
         $this->fieldspec['transition_id']['application'] = 'workflow';
         $this->fieldspec['transition_id']['issearchable'] = '1';
         $this->fieldspec['transition_id']['preinserttrigger'] = '';
         $this->fieldspec['transition_id']['postinserttrigger'] = '';
         $this->fieldspec['transition_id']['preupdatetrigger'] = '';
         $this->fieldspec['transition_id']['postupdatetrigger'] = '';
         $this->fieldspec['transition_id']['predeletetrigger'] = '';
         $this->fieldspec['transition_id']['postdeletetrigger'] = '';
         $this->fieldspec['transition_trigger']['metadata_id'] = '2672';
         $this->fieldspec['transition_trigger']['table_name'] = 'stateworkitem';
         $this->fieldspec['transition_trigger']['column_name'] = 'transition_trigger';
         $this->fieldspec['transition_trigger']['pretty_name'] = '';
         $this->fieldspec['transition_trigger']['abstract_data_type'] = 'varchar';
         $this->fieldspec['transition_trigger']['db_data_type'] = 'varchar';
         $this->fieldspec['transition_trigger']['field_null'] = 'YES';
         $this->fieldspec['transition_trigger']['field_key'] = '';
         $this->fieldspec['transition_trigger']['extra_sql'] = ' ';
         $this->fieldspec['transition_trigger']['html_form_type'] = 'text';
         $this->fieldspec['transition_trigger']['html_form_options'] = '';
         $this->fieldspec['transition_trigger']['html_form_explanation'] = '';
         $this->fieldspec['transition_trigger']['help_text'] = '';
         $this->fieldspec['transition_trigger']['mandatory_p'] = 'N';
         $this->fieldspec['transition_trigger']['sort_key'] = '0';
         $this->fieldspec['transition_trigger']['form_sort_key'] = '0';
         $this->fieldspec['transition_trigger']['form_number'] = '1';
         $this->fieldspec['transition_trigger']['default_value'] = '';
         $this->fieldspec['transition_trigger']['field_toupper'] = 'NO';
         $this->fieldspec['transition_trigger']['validationprocname'] = '';
         $this->fieldspec['transition_trigger']['c_size'] = '4';
         $this->fieldspec['transition_trigger']['prikey'] = 'N';
         $this->fieldspec['transition_trigger']['noedit'] = 'N';
         $this->fieldspec['transition_trigger']['nodisplay'] = 'N';
         $this->fieldspec['transition_trigger']['c_unsigned'] = 'N';
         $this->fieldspec['transition_trigger']['c_zerofill'] = 'N';
         $this->fieldspec['transition_trigger']['c_auto_increment'] = 'N';
         $this->fieldspec['transition_trigger']['foreign_table'] = '';
         $this->fieldspec['transition_trigger']['foreign_key'] = '';
         $this->fieldspec['transition_trigger']['application'] = 'workflow';
         $this->fieldspec['transition_trigger']['issearchable'] = '1';
         $this->fieldspec['transition_trigger']['preinserttrigger'] = '';
         $this->fieldspec['transition_trigger']['postinserttrigger'] = '';
         $this->fieldspec['transition_trigger']['preupdatetrigger'] = '';
         $this->fieldspec['transition_trigger']['postupdatetrigger'] = '';
         $this->fieldspec['transition_trigger']['predeletetrigger'] = '';
         $this->fieldspec['transition_trigger']['postdeletetrigger'] = '';
         $this->fieldspec['task_id']['metadata_id'] = '2673';
         $this->fieldspec['task_id']['table_name'] = 'stateworkitem';
         $this->fieldspec['task_id']['column_name'] = 'task_id';
         $this->fieldspec['task_id']['pretty_name'] = '';
         $this->fieldspec['task_id']['abstract_data_type'] = 'varchar';
         $this->fieldspec['task_id']['db_data_type'] = 'varchar';
         $this->fieldspec['task_id']['field_null'] = 'YES';
         $this->fieldspec['task_id']['field_key'] = '';
         $this->fieldspec['task_id']['extra_sql'] = ' ';
         $this->fieldspec['task_id']['html_form_type'] = 'text';
         $this->fieldspec['task_id']['html_form_options'] = '';
         $this->fieldspec['task_id']['html_form_explanation'] = '';
         $this->fieldspec['task_id']['help_text'] = '';
         $this->fieldspec['task_id']['mandatory_p'] = 'N';
         $this->fieldspec['task_id']['sort_key'] = '0';
         $this->fieldspec['task_id']['form_sort_key'] = '0';
         $this->fieldspec['task_id']['form_number'] = '1';
         $this->fieldspec['task_id']['default_value'] = '';
         $this->fieldspec['task_id']['field_toupper'] = 'NO';
         $this->fieldspec['task_id']['validationprocname'] = '';
         $this->fieldspec['task_id']['c_size'] = '40';
         $this->fieldspec['task_id']['prikey'] = 'N';
         $this->fieldspec['task_id']['noedit'] = 'N';
         $this->fieldspec['task_id']['nodisplay'] = 'N';
         $this->fieldspec['task_id']['c_unsigned'] = 'N';
         $this->fieldspec['task_id']['c_zerofill'] = 'N';
         $this->fieldspec['task_id']['c_auto_increment'] = 'N';
         $this->fieldspec['task_id']['foreign_table'] = '';
         $this->fieldspec['task_id']['foreign_key'] = '';
         $this->fieldspec['task_id']['application'] = 'workflow';
         $this->fieldspec['task_id']['issearchable'] = '1';
         $this->fieldspec['task_id']['preinserttrigger'] = '';
         $this->fieldspec['task_id']['postinserttrigger'] = '';
         $this->fieldspec['task_id']['preupdatetrigger'] = '';
         $this->fieldspec['task_id']['postupdatetrigger'] = '';
         $this->fieldspec['task_id']['predeletetrigger'] = '';
         $this->fieldspec['task_id']['postdeletetrigger'] = '';
         $this->fieldspec['context']['metadata_id'] = '2674';
         $this->fieldspec['context']['table_name'] = 'stateworkitem';
         $this->fieldspec['context']['column_name'] = 'context';
         $this->fieldspec['context']['pretty_name'] = '';
         $this->fieldspec['context']['abstract_data_type'] = 'varchar';
         $this->fieldspec['context']['db_data_type'] = 'varchar';
         $this->fieldspec['context']['field_null'] = 'YES';
         $this->fieldspec['context']['field_key'] = '';
         $this->fieldspec['context']['extra_sql'] = ' ';
         $this->fieldspec['context']['html_form_type'] = 'text';
         $this->fieldspec['context']['html_form_options'] = '';
         $this->fieldspec['context']['html_form_explanation'] = '';
         $this->fieldspec['context']['help_text'] = '';
         $this->fieldspec['context']['mandatory_p'] = 'N';
         $this->fieldspec['context']['sort_key'] = '0';
         $this->fieldspec['context']['form_sort_key'] = '0';
         $this->fieldspec['context']['form_number'] = '1';
         $this->fieldspec['context']['default_value'] = '';
         $this->fieldspec['context']['field_toupper'] = 'NO';
         $this->fieldspec['context']['validationprocname'] = '';
         $this->fieldspec['context']['c_size'] = '255';
         $this->fieldspec['context']['prikey'] = 'N';
         $this->fieldspec['context']['noedit'] = 'N';
         $this->fieldspec['context']['nodisplay'] = 'N';
         $this->fieldspec['context']['c_unsigned'] = 'N';
         $this->fieldspec['context']['c_zerofill'] = 'N';
         $this->fieldspec['context']['c_auto_increment'] = 'N';
         $this->fieldspec['context']['foreign_table'] = '';
         $this->fieldspec['context']['foreign_key'] = '';
         $this->fieldspec['context']['application'] = 'workflow';
         $this->fieldspec['context']['issearchable'] = '1';
         $this->fieldspec['context']['preinserttrigger'] = '';
         $this->fieldspec['context']['postinserttrigger'] = '';
         $this->fieldspec['context']['preupdatetrigger'] = '';
         $this->fieldspec['context']['postupdatetrigger'] = '';
         $this->fieldspec['context']['predeletetrigger'] = '';
         $this->fieldspec['context']['postdeletetrigger'] = '';
         $this->fieldspec['workitem_status']['metadata_id'] = '2675';
         $this->fieldspec['workitem_status']['table_name'] = 'stateworkitem';
         $this->fieldspec['workitem_status']['column_name'] = 'workitem_status';
         $this->fieldspec['workitem_status']['pretty_name'] = '';
         $this->fieldspec['workitem_status']['abstract_data_type'] = 'char';
         $this->fieldspec['workitem_status']['db_data_type'] = 'char';
         $this->fieldspec['workitem_status']['field_null'] = 'YES';
         $this->fieldspec['workitem_status']['field_key'] = '';
         $this->fieldspec['workitem_status']['extra_sql'] = ' ';
         $this->fieldspec['workitem_status']['html_form_type'] = 'text';
         $this->fieldspec['workitem_status']['html_form_options'] = '';
         $this->fieldspec['workitem_status']['html_form_explanation'] = '';
         $this->fieldspec['workitem_status']['help_text'] = '';
         $this->fieldspec['workitem_status']['mandatory_p'] = 'N';
         $this->fieldspec['workitem_status']['sort_key'] = '0';
         $this->fieldspec['workitem_status']['form_sort_key'] = '0';
         $this->fieldspec['workitem_status']['form_number'] = '1';
         $this->fieldspec['workitem_status']['default_value'] = '';
         $this->fieldspec['workitem_status']['field_toupper'] = 'NO';
         $this->fieldspec['workitem_status']['validationprocname'] = '';
         $this->fieldspec['workitem_status']['c_size'] = '2';
         $this->fieldspec['workitem_status']['prikey'] = 'N';
         $this->fieldspec['workitem_status']['noedit'] = 'N';
         $this->fieldspec['workitem_status']['nodisplay'] = 'N';
         $this->fieldspec['workitem_status']['c_unsigned'] = 'N';
         $this->fieldspec['workitem_status']['c_zerofill'] = 'N';
         $this->fieldspec['workitem_status']['c_auto_increment'] = 'N';
         $this->fieldspec['workitem_status']['foreign_table'] = '';
         $this->fieldspec['workitem_status']['foreign_key'] = '';
         $this->fieldspec['workitem_status']['application'] = 'workflow';
         $this->fieldspec['workitem_status']['issearchable'] = '1';
         $this->fieldspec['workitem_status']['preinserttrigger'] = '';
         $this->fieldspec['workitem_status']['postinserttrigger'] = '';
         $this->fieldspec['workitem_status']['preupdatetrigger'] = '';
         $this->fieldspec['workitem_status']['postupdatetrigger'] = '';
         $this->fieldspec['workitem_status']['predeletetrigger'] = '';
         $this->fieldspec['workitem_status']['postdeletetrigger'] = '';
         $this->fieldspec['enabled_date']['metadata_id'] = '2676';
         $this->fieldspec['enabled_date']['table_name'] = 'stateworkitem';
         $this->fieldspec['enabled_date']['column_name'] = 'enabled_date';
         $this->fieldspec['enabled_date']['pretty_name'] = '';
         $this->fieldspec['enabled_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['enabled_date']['db_data_type'] = 'datetime';
         $this->fieldspec['enabled_date']['field_null'] = 'NO';
         $this->fieldspec['enabled_date']['field_key'] = '';
         $this->fieldspec['enabled_date']['extra_sql'] = ' ';
         $this->fieldspec['enabled_date']['html_form_type'] = 'datetime';
         $this->fieldspec['enabled_date']['html_form_options'] = '';
         $this->fieldspec['enabled_date']['html_form_explanation'] = '';
         $this->fieldspec['enabled_date']['help_text'] = '';
         $this->fieldspec['enabled_date']['mandatory_p'] = 'N';
         $this->fieldspec['enabled_date']['sort_key'] = '0';
         $this->fieldspec['enabled_date']['form_sort_key'] = '0';
         $this->fieldspec['enabled_date']['form_number'] = '1';
         $this->fieldspec['enabled_date']['default_value'] = '';
         $this->fieldspec['enabled_date']['field_toupper'] = 'NO';
         $this->fieldspec['enabled_date']['validationprocname'] = '';
         $this->fieldspec['enabled_date']['c_size'] = '';
         $this->fieldspec['enabled_date']['prikey'] = 'N';
         $this->fieldspec['enabled_date']['noedit'] = 'N';
         $this->fieldspec['enabled_date']['nodisplay'] = 'N';
         $this->fieldspec['enabled_date']['c_unsigned'] = 'N';
         $this->fieldspec['enabled_date']['c_zerofill'] = 'N';
         $this->fieldspec['enabled_date']['c_auto_increment'] = 'N';
         $this->fieldspec['enabled_date']['foreign_table'] = '';
         $this->fieldspec['enabled_date']['foreign_key'] = '';
         $this->fieldspec['enabled_date']['application'] = 'workflow';
         $this->fieldspec['enabled_date']['issearchable'] = '1';
         $this->fieldspec['enabled_date']['preinserttrigger'] = '';
         $this->fieldspec['enabled_date']['postinserttrigger'] = '';
         $this->fieldspec['enabled_date']['preupdatetrigger'] = '';
         $this->fieldspec['enabled_date']['postupdatetrigger'] = '';
         $this->fieldspec['enabled_date']['predeletetrigger'] = '';
         $this->fieldspec['enabled_date']['postdeletetrigger'] = '';
         $this->fieldspec['cancelled_date']['metadata_id'] = '2677';
         $this->fieldspec['cancelled_date']['table_name'] = 'stateworkitem';
         $this->fieldspec['cancelled_date']['column_name'] = 'cancelled_date';
         $this->fieldspec['cancelled_date']['pretty_name'] = '';
         $this->fieldspec['cancelled_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['cancelled_date']['db_data_type'] = 'datetime';
         $this->fieldspec['cancelled_date']['field_null'] = 'NO';
         $this->fieldspec['cancelled_date']['field_key'] = '';
         $this->fieldspec['cancelled_date']['extra_sql'] = ' ';
         $this->fieldspec['cancelled_date']['html_form_type'] = 'datetime';
         $this->fieldspec['cancelled_date']['html_form_options'] = '';
         $this->fieldspec['cancelled_date']['html_form_explanation'] = '';
         $this->fieldspec['cancelled_date']['help_text'] = '';
         $this->fieldspec['cancelled_date']['mandatory_p'] = 'N';
         $this->fieldspec['cancelled_date']['sort_key'] = '0';
         $this->fieldspec['cancelled_date']['form_sort_key'] = '0';
         $this->fieldspec['cancelled_date']['form_number'] = '1';
         $this->fieldspec['cancelled_date']['default_value'] = '';
         $this->fieldspec['cancelled_date']['field_toupper'] = 'NO';
         $this->fieldspec['cancelled_date']['validationprocname'] = '';
         $this->fieldspec['cancelled_date']['c_size'] = '';
         $this->fieldspec['cancelled_date']['prikey'] = 'N';
         $this->fieldspec['cancelled_date']['noedit'] = 'N';
         $this->fieldspec['cancelled_date']['nodisplay'] = 'N';
         $this->fieldspec['cancelled_date']['c_unsigned'] = 'N';
         $this->fieldspec['cancelled_date']['c_zerofill'] = 'N';
         $this->fieldspec['cancelled_date']['c_auto_increment'] = 'N';
         $this->fieldspec['cancelled_date']['foreign_table'] = '';
         $this->fieldspec['cancelled_date']['foreign_key'] = '';
         $this->fieldspec['cancelled_date']['application'] = 'workflow';
         $this->fieldspec['cancelled_date']['issearchable'] = '1';
         $this->fieldspec['cancelled_date']['preinserttrigger'] = '';
         $this->fieldspec['cancelled_date']['postinserttrigger'] = '';
         $this->fieldspec['cancelled_date']['preupdatetrigger'] = '';
         $this->fieldspec['cancelled_date']['postupdatetrigger'] = '';
         $this->fieldspec['cancelled_date']['predeletetrigger'] = '';
         $this->fieldspec['cancelled_date']['postdeletetrigger'] = '';
         $this->fieldspec['finished_date']['metadata_id'] = '2678';
         $this->fieldspec['finished_date']['table_name'] = 'stateworkitem';
         $this->fieldspec['finished_date']['column_name'] = 'finished_date';
         $this->fieldspec['finished_date']['pretty_name'] = '';
         $this->fieldspec['finished_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['finished_date']['db_data_type'] = 'datetime';
         $this->fieldspec['finished_date']['field_null'] = 'NO';
         $this->fieldspec['finished_date']['field_key'] = '';
         $this->fieldspec['finished_date']['extra_sql'] = ' ';
         $this->fieldspec['finished_date']['html_form_type'] = 'datetime';
         $this->fieldspec['finished_date']['html_form_options'] = '';
         $this->fieldspec['finished_date']['html_form_explanation'] = '';
         $this->fieldspec['finished_date']['help_text'] = '';
         $this->fieldspec['finished_date']['mandatory_p'] = 'N';
         $this->fieldspec['finished_date']['sort_key'] = '0';
         $this->fieldspec['finished_date']['form_sort_key'] = '0';
         $this->fieldspec['finished_date']['form_number'] = '1';
         $this->fieldspec['finished_date']['default_value'] = '';
         $this->fieldspec['finished_date']['field_toupper'] = 'NO';
         $this->fieldspec['finished_date']['validationprocname'] = '';
         $this->fieldspec['finished_date']['c_size'] = '';
         $this->fieldspec['finished_date']['prikey'] = 'N';
         $this->fieldspec['finished_date']['noedit'] = 'N';
         $this->fieldspec['finished_date']['nodisplay'] = 'N';
         $this->fieldspec['finished_date']['c_unsigned'] = 'N';
         $this->fieldspec['finished_date']['c_zerofill'] = 'N';
         $this->fieldspec['finished_date']['c_auto_increment'] = 'N';
         $this->fieldspec['finished_date']['foreign_table'] = '';
         $this->fieldspec['finished_date']['foreign_key'] = '';
         $this->fieldspec['finished_date']['application'] = 'workflow';
         $this->fieldspec['finished_date']['issearchable'] = '1';
         $this->fieldspec['finished_date']['preinserttrigger'] = '';
         $this->fieldspec['finished_date']['postinserttrigger'] = '';
         $this->fieldspec['finished_date']['preupdatetrigger'] = '';
         $this->fieldspec['finished_date']['postupdatetrigger'] = '';
         $this->fieldspec['finished_date']['predeletetrigger'] = '';
         $this->fieldspec['finished_date']['postdeletetrigger'] = '';
         $this->fieldspec['deadline']['metadata_id'] = '2679';
         $this->fieldspec['deadline']['table_name'] = 'stateworkitem';
         $this->fieldspec['deadline']['column_name'] = 'deadline';
         $this->fieldspec['deadline']['pretty_name'] = '';
         $this->fieldspec['deadline']['abstract_data_type'] = 'datetime';
         $this->fieldspec['deadline']['db_data_type'] = 'datetime';
         $this->fieldspec['deadline']['field_null'] = 'NO';
         $this->fieldspec['deadline']['field_key'] = '';
         $this->fieldspec['deadline']['extra_sql'] = ' ';
         $this->fieldspec['deadline']['html_form_type'] = 'datetime';
         $this->fieldspec['deadline']['html_form_options'] = '';
         $this->fieldspec['deadline']['html_form_explanation'] = '';
         $this->fieldspec['deadline']['help_text'] = '';
         $this->fieldspec['deadline']['mandatory_p'] = 'N';
         $this->fieldspec['deadline']['sort_key'] = '0';
         $this->fieldspec['deadline']['form_sort_key'] = '0';
         $this->fieldspec['deadline']['form_number'] = '1';
         $this->fieldspec['deadline']['default_value'] = '';
         $this->fieldspec['deadline']['field_toupper'] = 'NO';
         $this->fieldspec['deadline']['validationprocname'] = '';
         $this->fieldspec['deadline']['c_size'] = '';
         $this->fieldspec['deadline']['prikey'] = 'N';
         $this->fieldspec['deadline']['noedit'] = 'N';
         $this->fieldspec['deadline']['nodisplay'] = 'N';
         $this->fieldspec['deadline']['c_unsigned'] = 'N';
         $this->fieldspec['deadline']['c_zerofill'] = 'N';
         $this->fieldspec['deadline']['c_auto_increment'] = 'N';
         $this->fieldspec['deadline']['foreign_table'] = '';
         $this->fieldspec['deadline']['foreign_key'] = '';
         $this->fieldspec['deadline']['application'] = 'workflow';
         $this->fieldspec['deadline']['issearchable'] = '1';
         $this->fieldspec['deadline']['preinserttrigger'] = '';
         $this->fieldspec['deadline']['postinserttrigger'] = '';
         $this->fieldspec['deadline']['preupdatetrigger'] = '';
         $this->fieldspec['deadline']['postupdatetrigger'] = '';
         $this->fieldspec['deadline']['predeletetrigger'] = '';
         $this->fieldspec['deadline']['postdeletetrigger'] = '';
         $this->fieldspec['roles_id']['metadata_id'] = '2680';
         $this->fieldspec['roles_id']['table_name'] = 'stateworkitem';
         $this->fieldspec['roles_id']['column_name'] = 'roles_id';
         $this->fieldspec['roles_id']['pretty_name'] = '';
         $this->fieldspec['roles_id']['abstract_data_type'] = 'varchar';
         $this->fieldspec['roles_id']['db_data_type'] = 'varchar';
         $this->fieldspec['roles_id']['field_null'] = 'NO';
         $this->fieldspec['roles_id']['field_key'] = '';
         $this->fieldspec['roles_id']['extra_sql'] = ' ';
         $this->fieldspec['roles_id']['html_form_type'] = 'text';
         $this->fieldspec['roles_id']['html_form_options'] = '';
         $this->fieldspec['roles_id']['html_form_explanation'] = '';
         $this->fieldspec['roles_id']['help_text'] = '';
         $this->fieldspec['roles_id']['mandatory_p'] = 'N';
         $this->fieldspec['roles_id']['sort_key'] = '0';
         $this->fieldspec['roles_id']['form_sort_key'] = '0';
         $this->fieldspec['roles_id']['form_number'] = '1';
         $this->fieldspec['roles_id']['default_value'] = '';
         $this->fieldspec['roles_id']['field_toupper'] = 'NO';
         $this->fieldspec['roles_id']['validationprocname'] = '';
         $this->fieldspec['roles_id']['c_size'] = '16';
         $this->fieldspec['roles_id']['prikey'] = 'N';
         $this->fieldspec['roles_id']['noedit'] = 'N';
         $this->fieldspec['roles_id']['nodisplay'] = 'N';
         $this->fieldspec['roles_id']['c_unsigned'] = 'N';
         $this->fieldspec['roles_id']['c_zerofill'] = 'N';
         $this->fieldspec['roles_id']['c_auto_increment'] = 'N';
         $this->fieldspec['roles_id']['foreign_table'] = '';
         $this->fieldspec['roles_id']['foreign_key'] = '';
         $this->fieldspec['roles_id']['application'] = 'workflow';
         $this->fieldspec['roles_id']['issearchable'] = '1';
         $this->fieldspec['roles_id']['preinserttrigger'] = '';
         $this->fieldspec['roles_id']['postinserttrigger'] = '';
         $this->fieldspec['roles_id']['preupdatetrigger'] = '';
         $this->fieldspec['roles_id']['postupdatetrigger'] = '';
         $this->fieldspec['roles_id']['predeletetrigger'] = '';
         $this->fieldspec['roles_id']['postdeletetrigger'] = '';
         $this->fieldspec['user_id']['metadata_id'] = '2681';
         $this->fieldspec['user_id']['table_name'] = 'stateworkitem';
         $this->fieldspec['user_id']['column_name'] = 'user_id';
         $this->fieldspec['user_id']['pretty_name'] = '';
         $this->fieldspec['user_id']['abstract_data_type'] = 'varchar';
         $this->fieldspec['user_id']['db_data_type'] = 'varchar';
         $this->fieldspec['user_id']['field_null'] = 'NO';
         $this->fieldspec['user_id']['field_key'] = '';
         $this->fieldspec['user_id']['extra_sql'] = ' ';
         $this->fieldspec['user_id']['html_form_type'] = 'text';
         $this->fieldspec['user_id']['html_form_options'] = '';
         $this->fieldspec['user_id']['html_form_explanation'] = '';
         $this->fieldspec['user_id']['help_text'] = '';
         $this->fieldspec['user_id']['mandatory_p'] = 'N';
         $this->fieldspec['user_id']['sort_key'] = '0';
         $this->fieldspec['user_id']['form_sort_key'] = '0';
         $this->fieldspec['user_id']['form_number'] = '1';
         $this->fieldspec['user_id']['default_value'] = '';
         $this->fieldspec['user_id']['field_toupper'] = 'NO';
         $this->fieldspec['user_id']['validationprocname'] = '';
         $this->fieldspec['user_id']['c_size'] = '16';
         $this->fieldspec['user_id']['prikey'] = 'N';
         $this->fieldspec['user_id']['noedit'] = 'N';
         $this->fieldspec['user_id']['nodisplay'] = 'N';
         $this->fieldspec['user_id']['c_unsigned'] = 'N';
         $this->fieldspec['user_id']['c_zerofill'] = 'N';
         $this->fieldspec['user_id']['c_auto_increment'] = 'N';
         $this->fieldspec['user_id']['foreign_table'] = '';
         $this->fieldspec['user_id']['foreign_key'] = '';
         $this->fieldspec['user_id']['application'] = 'workflow';
         $this->fieldspec['user_id']['issearchable'] = '1';
         $this->fieldspec['user_id']['preinserttrigger'] = '';
         $this->fieldspec['user_id']['postinserttrigger'] = '';
         $this->fieldspec['user_id']['preupdatetrigger'] = '';
         $this->fieldspec['user_id']['postupdatetrigger'] = '';
         $this->fieldspec['user_id']['predeletetrigger'] = '';
         $this->fieldspec['user_id']['postdeletetrigger'] = '';
         $this->fieldspec['case_id']['metadata_id'] = '2744';
         $this->fieldspec['case_id']['table_name'] = 'stateworkitem';
         $this->fieldspec['case_id']['column_name'] = 'case_id';
         $this->fieldspec['case_id']['pretty_name'] = '';
         $this->fieldspec['case_id']['abstract_data_type'] = 'int';
         $this->fieldspec['case_id']['db_data_type'] = 'int';
         $this->fieldspec['case_id']['field_null'] = 'YES';
         $this->fieldspec['case_id']['field_key'] = '';
         $this->fieldspec['case_id']['extra_sql'] = ' ';
         $this->fieldspec['case_id']['html_form_type'] = 'integer';
         $this->fieldspec['case_id']['html_form_options'] = '';
         $this->fieldspec['case_id']['html_form_explanation'] = '';
         $this->fieldspec['case_id']['help_text'] = '';
         $this->fieldspec['case_id']['mandatory_p'] = 'N';
         $this->fieldspec['case_id']['sort_key'] = '0';
         $this->fieldspec['case_id']['form_sort_key'] = '0';
         $this->fieldspec['case_id']['form_number'] = '1';
         $this->fieldspec['case_id']['default_value'] = '';
         $this->fieldspec['case_id']['field_toupper'] = 'NO';
         $this->fieldspec['case_id']['validationprocname'] = '';
         $this->fieldspec['case_id']['c_size'] = '10';
         $this->fieldspec['case_id']['prikey'] = 'Y';
         $this->fieldspec['case_id']['noedit'] = 'N';
         $this->fieldspec['case_id']['nodisplay'] = 'N';
         $this->fieldspec['case_id']['c_unsigned'] = 'Y';
         $this->fieldspec['case_id']['c_zerofill'] = 'N';
         $this->fieldspec['case_id']['c_auto_increment'] = 'N';
         $this->fieldspec['case_id']['foreign_table'] = '';
         $this->fieldspec['case_id']['foreign_key'] = '';
         $this->fieldspec['case_id']['application'] = 'workflow';
         $this->fieldspec['case_id']['issearchable'] = '1';
         $this->fieldspec['case_id']['preinserttrigger'] = '';
         $this->fieldspec['case_id']['postinserttrigger'] = '';
         $this->fieldspec['case_id']['preupdatetrigger'] = '';
         $this->fieldspec['case_id']['postupdatetrigger'] = '';
         $this->fieldspec['case_id']['predeletetrigger'] = '';
         $this->fieldspec['case_id']['postdeletetrigger'] = '';
         $this->fieldspec['workitem_id']['metadata_id'] = '2745';
         $this->fieldspec['workitem_id']['table_name'] = 'stateworkitem';
         $this->fieldspec['workitem_id']['column_name'] = 'workitem_id';
         $this->fieldspec['workitem_id']['pretty_name'] = '';
         $this->fieldspec['workitem_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['workitem_id']['db_data_type'] = 'smallint';
         $this->fieldspec['workitem_id']['field_null'] = 'YES';
         $this->fieldspec['workitem_id']['field_key'] = '';
         $this->fieldspec['workitem_id']['extra_sql'] = ' ';
         $this->fieldspec['workitem_id']['html_form_type'] = 'integer';
         $this->fieldspec['workitem_id']['html_form_options'] = '';
         $this->fieldspec['workitem_id']['html_form_explanation'] = '';
         $this->fieldspec['workitem_id']['help_text'] = '';
         $this->fieldspec['workitem_id']['mandatory_p'] = 'N';
         $this->fieldspec['workitem_id']['sort_key'] = '0';
         $this->fieldspec['workitem_id']['form_sort_key'] = '0';
         $this->fieldspec['workitem_id']['form_number'] = '1';
         $this->fieldspec['workitem_id']['default_value'] = '';
         $this->fieldspec['workitem_id']['field_toupper'] = 'NO';
         $this->fieldspec['workitem_id']['validationprocname'] = '';
         $this->fieldspec['workitem_id']['c_size'] = '5';
         $this->fieldspec['workitem_id']['prikey'] = 'Y';
         $this->fieldspec['workitem_id']['noedit'] = 'N';
         $this->fieldspec['workitem_id']['nodisplay'] = 'N';
         $this->fieldspec['workitem_id']['c_unsigned'] = 'Y';
         $this->fieldspec['workitem_id']['c_zerofill'] = 'N';
         $this->fieldspec['workitem_id']['c_auto_increment'] = 'N';
         $this->fieldspec['workitem_id']['foreign_table'] = '';
         $this->fieldspec['workitem_id']['foreign_key'] = '';
         $this->fieldspec['workitem_id']['application'] = 'workflow';
         $this->fieldspec['workitem_id']['issearchable'] = '1';
         $this->fieldspec['workitem_id']['preinserttrigger'] = '';
         $this->fieldspec['workitem_id']['postinserttrigger'] = '';
         $this->fieldspec['workitem_id']['preupdatetrigger'] = '';
         $this->fieldspec['workitem_id']['postupdatetrigger'] = '';
         $this->fieldspec['workitem_id']['predeletetrigger'] = '';
         $this->fieldspec['workitem_id']['postdeletetrigger'] = '';
         $this->fieldspec['workflow_id']['metadata_id'] = '2746';
         $this->fieldspec['workflow_id']['table_name'] = 'stateworkitem';
         $this->fieldspec['workflow_id']['column_name'] = 'workflow_id';
         $this->fieldspec['workflow_id']['pretty_name'] = '';
         $this->fieldspec['workflow_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['db_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['field_null'] = 'YES';
         $this->fieldspec['workflow_id']['field_key'] = '';
         $this->fieldspec['workflow_id']['extra_sql'] = ' ';
         $this->fieldspec['workflow_id']['html_form_type'] = 'integer';
         $this->fieldspec['workflow_id']['html_form_options'] = '';
         $this->fieldspec['workflow_id']['html_form_explanation'] = '';
         $this->fieldspec['workflow_id']['help_text'] = '';
         $this->fieldspec['workflow_id']['mandatory_p'] = 'N';
         $this->fieldspec['workflow_id']['sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_number'] = '1';
         $this->fieldspec['workflow_id']['default_value'] = '';
         $this->fieldspec['workflow_id']['field_toupper'] = 'NO';
         $this->fieldspec['workflow_id']['validationprocname'] = '';
         $this->fieldspec['workflow_id']['c_size'] = '6';
         $this->fieldspec['workflow_id']['prikey'] = 'N';
         $this->fieldspec['workflow_id']['noedit'] = 'N';
         $this->fieldspec['workflow_id']['nodisplay'] = 'N';
         $this->fieldspec['workflow_id']['c_unsigned'] = 'Y';
         $this->fieldspec['workflow_id']['c_zerofill'] = 'N';
         $this->fieldspec['workflow_id']['c_auto_increment'] = 'N';
         $this->fieldspec['workflow_id']['foreign_table'] = '';
         $this->fieldspec['workflow_id']['foreign_key'] = '';
         $this->fieldspec['workflow_id']['application'] = 'workflow';
         $this->fieldspec['workflow_id']['issearchable'] = '1';
         $this->fieldspec['workflow_id']['preinserttrigger'] = '';
         $this->fieldspec['workflow_id']['postinserttrigger'] = '';
         $this->fieldspec['workflow_id']['preupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['postupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['predeletetrigger'] = '';
         $this->fieldspec['workflow_id']['postdeletetrigger'] = '';
         $this->fieldspec['transition_id']['metadata_id'] = '2747';
         $this->fieldspec['transition_id']['table_name'] = 'stateworkitem';
         $this->fieldspec['transition_id']['column_name'] = 'transition_id';
         $this->fieldspec['transition_id']['pretty_name'] = '';
         $this->fieldspec['transition_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['transition_id']['db_data_type'] = 'smallint';
         $this->fieldspec['transition_id']['field_null'] = 'YES';
         $this->fieldspec['transition_id']['field_key'] = '';
         $this->fieldspec['transition_id']['extra_sql'] = ' ';
         $this->fieldspec['transition_id']['html_form_type'] = 'integer';
         $this->fieldspec['transition_id']['html_form_options'] = '';
         $this->fieldspec['transition_id']['html_form_explanation'] = '';
         $this->fieldspec['transition_id']['help_text'] = '';
         $this->fieldspec['transition_id']['mandatory_p'] = 'N';
         $this->fieldspec['transition_id']['sort_key'] = '0';
         $this->fieldspec['transition_id']['form_sort_key'] = '0';
         $this->fieldspec['transition_id']['form_number'] = '1';
         $this->fieldspec['transition_id']['default_value'] = '';
         $this->fieldspec['transition_id']['field_toupper'] = 'NO';
         $this->fieldspec['transition_id']['validationprocname'] = '';
         $this->fieldspec['transition_id']['c_size'] = '5';
         $this->fieldspec['transition_id']['prikey'] = 'N';
         $this->fieldspec['transition_id']['noedit'] = 'N';
         $this->fieldspec['transition_id']['nodisplay'] = 'N';
         $this->fieldspec['transition_id']['c_unsigned'] = 'Y';
         $this->fieldspec['transition_id']['c_zerofill'] = 'N';
         $this->fieldspec['transition_id']['c_auto_increment'] = 'N';
         $this->fieldspec['transition_id']['foreign_table'] = '';
         $this->fieldspec['transition_id']['foreign_key'] = '';
         $this->fieldspec['transition_id']['application'] = 'workflow';
         $this->fieldspec['transition_id']['issearchable'] = '1';
         $this->fieldspec['transition_id']['preinserttrigger'] = '';
         $this->fieldspec['transition_id']['postinserttrigger'] = '';
         $this->fieldspec['transition_id']['preupdatetrigger'] = '';
         $this->fieldspec['transition_id']['postupdatetrigger'] = '';
         $this->fieldspec['transition_id']['predeletetrigger'] = '';
         $this->fieldspec['transition_id']['postdeletetrigger'] = '';
         $this->fieldspec['transition_trigger']['metadata_id'] = '2748';
         $this->fieldspec['transition_trigger']['table_name'] = 'stateworkitem';
         $this->fieldspec['transition_trigger']['column_name'] = 'transition_trigger';
         $this->fieldspec['transition_trigger']['pretty_name'] = '';
         $this->fieldspec['transition_trigger']['abstract_data_type'] = 'varchar';
         $this->fieldspec['transition_trigger']['db_data_type'] = 'varchar';
         $this->fieldspec['transition_trigger']['field_null'] = 'YES';
         $this->fieldspec['transition_trigger']['field_key'] = '';
         $this->fieldspec['transition_trigger']['extra_sql'] = ' ';
         $this->fieldspec['transition_trigger']['html_form_type'] = 'text';
         $this->fieldspec['transition_trigger']['html_form_options'] = '';
         $this->fieldspec['transition_trigger']['html_form_explanation'] = '';
         $this->fieldspec['transition_trigger']['help_text'] = '';
         $this->fieldspec['transition_trigger']['mandatory_p'] = 'N';
         $this->fieldspec['transition_trigger']['sort_key'] = '0';
         $this->fieldspec['transition_trigger']['form_sort_key'] = '0';
         $this->fieldspec['transition_trigger']['form_number'] = '1';
         $this->fieldspec['transition_trigger']['default_value'] = '';
         $this->fieldspec['transition_trigger']['field_toupper'] = 'NO';
         $this->fieldspec['transition_trigger']['validationprocname'] = '';
         $this->fieldspec['transition_trigger']['c_size'] = '4';
         $this->fieldspec['transition_trigger']['prikey'] = 'N';
         $this->fieldspec['transition_trigger']['noedit'] = 'N';
         $this->fieldspec['transition_trigger']['nodisplay'] = 'N';
         $this->fieldspec['transition_trigger']['c_unsigned'] = 'N';
         $this->fieldspec['transition_trigger']['c_zerofill'] = 'N';
         $this->fieldspec['transition_trigger']['c_auto_increment'] = 'N';
         $this->fieldspec['transition_trigger']['foreign_table'] = '';
         $this->fieldspec['transition_trigger']['foreign_key'] = '';
         $this->fieldspec['transition_trigger']['application'] = 'workflow';
         $this->fieldspec['transition_trigger']['issearchable'] = '1';
         $this->fieldspec['transition_trigger']['preinserttrigger'] = '';
         $this->fieldspec['transition_trigger']['postinserttrigger'] = '';
         $this->fieldspec['transition_trigger']['preupdatetrigger'] = '';
         $this->fieldspec['transition_trigger']['postupdatetrigger'] = '';
         $this->fieldspec['transition_trigger']['predeletetrigger'] = '';
         $this->fieldspec['transition_trigger']['postdeletetrigger'] = '';
         $this->fieldspec['task_id']['metadata_id'] = '2749';
         $this->fieldspec['task_id']['table_name'] = 'stateworkitem';
         $this->fieldspec['task_id']['column_name'] = 'task_id';
         $this->fieldspec['task_id']['pretty_name'] = '';
         $this->fieldspec['task_id']['abstract_data_type'] = 'varchar';
         $this->fieldspec['task_id']['db_data_type'] = 'varchar';
         $this->fieldspec['task_id']['field_null'] = 'YES';
         $this->fieldspec['task_id']['field_key'] = '';
         $this->fieldspec['task_id']['extra_sql'] = ' ';
         $this->fieldspec['task_id']['html_form_type'] = 'text';
         $this->fieldspec['task_id']['html_form_options'] = '';
         $this->fieldspec['task_id']['html_form_explanation'] = '';
         $this->fieldspec['task_id']['help_text'] = '';
         $this->fieldspec['task_id']['mandatory_p'] = 'N';
         $this->fieldspec['task_id']['sort_key'] = '0';
         $this->fieldspec['task_id']['form_sort_key'] = '0';
         $this->fieldspec['task_id']['form_number'] = '1';
         $this->fieldspec['task_id']['default_value'] = '';
         $this->fieldspec['task_id']['field_toupper'] = 'NO';
         $this->fieldspec['task_id']['validationprocname'] = '';
         $this->fieldspec['task_id']['c_size'] = '40';
         $this->fieldspec['task_id']['prikey'] = 'N';
         $this->fieldspec['task_id']['noedit'] = 'N';
         $this->fieldspec['task_id']['nodisplay'] = 'N';
         $this->fieldspec['task_id']['c_unsigned'] = 'N';
         $this->fieldspec['task_id']['c_zerofill'] = 'N';
         $this->fieldspec['task_id']['c_auto_increment'] = 'N';
         $this->fieldspec['task_id']['foreign_table'] = '';
         $this->fieldspec['task_id']['foreign_key'] = '';
         $this->fieldspec['task_id']['application'] = 'workflow';
         $this->fieldspec['task_id']['issearchable'] = '1';
         $this->fieldspec['task_id']['preinserttrigger'] = '';
         $this->fieldspec['task_id']['postinserttrigger'] = '';
         $this->fieldspec['task_id']['preupdatetrigger'] = '';
         $this->fieldspec['task_id']['postupdatetrigger'] = '';
         $this->fieldspec['task_id']['predeletetrigger'] = '';
         $this->fieldspec['task_id']['postdeletetrigger'] = '';
         $this->fieldspec['context']['metadata_id'] = '2750';
         $this->fieldspec['context']['table_name'] = 'stateworkitem';
         $this->fieldspec['context']['column_name'] = 'context';
         $this->fieldspec['context']['pretty_name'] = '';
         $this->fieldspec['context']['abstract_data_type'] = 'varchar';
         $this->fieldspec['context']['db_data_type'] = 'varchar';
         $this->fieldspec['context']['field_null'] = 'YES';
         $this->fieldspec['context']['field_key'] = '';
         $this->fieldspec['context']['extra_sql'] = ' ';
         $this->fieldspec['context']['html_form_type'] = 'text';
         $this->fieldspec['context']['html_form_options'] = '';
         $this->fieldspec['context']['html_form_explanation'] = '';
         $this->fieldspec['context']['help_text'] = '';
         $this->fieldspec['context']['mandatory_p'] = 'N';
         $this->fieldspec['context']['sort_key'] = '0';
         $this->fieldspec['context']['form_sort_key'] = '0';
         $this->fieldspec['context']['form_number'] = '1';
         $this->fieldspec['context']['default_value'] = '';
         $this->fieldspec['context']['field_toupper'] = 'NO';
         $this->fieldspec['context']['validationprocname'] = '';
         $this->fieldspec['context']['c_size'] = '255';
         $this->fieldspec['context']['prikey'] = 'N';
         $this->fieldspec['context']['noedit'] = 'N';
         $this->fieldspec['context']['nodisplay'] = 'N';
         $this->fieldspec['context']['c_unsigned'] = 'N';
         $this->fieldspec['context']['c_zerofill'] = 'N';
         $this->fieldspec['context']['c_auto_increment'] = 'N';
         $this->fieldspec['context']['foreign_table'] = '';
         $this->fieldspec['context']['foreign_key'] = '';
         $this->fieldspec['context']['application'] = 'workflow';
         $this->fieldspec['context']['issearchable'] = '1';
         $this->fieldspec['context']['preinserttrigger'] = '';
         $this->fieldspec['context']['postinserttrigger'] = '';
         $this->fieldspec['context']['preupdatetrigger'] = '';
         $this->fieldspec['context']['postupdatetrigger'] = '';
         $this->fieldspec['context']['predeletetrigger'] = '';
         $this->fieldspec['context']['postdeletetrigger'] = '';
         $this->fieldspec['workitem_status']['metadata_id'] = '2751';
         $this->fieldspec['workitem_status']['table_name'] = 'stateworkitem';
         $this->fieldspec['workitem_status']['column_name'] = 'workitem_status';
         $this->fieldspec['workitem_status']['pretty_name'] = '';
         $this->fieldspec['workitem_status']['abstract_data_type'] = 'char';
         $this->fieldspec['workitem_status']['db_data_type'] = 'char';
         $this->fieldspec['workitem_status']['field_null'] = 'YES';
         $this->fieldspec['workitem_status']['field_key'] = '';
         $this->fieldspec['workitem_status']['extra_sql'] = ' ';
         $this->fieldspec['workitem_status']['html_form_type'] = 'text';
         $this->fieldspec['workitem_status']['html_form_options'] = '';
         $this->fieldspec['workitem_status']['html_form_explanation'] = '';
         $this->fieldspec['workitem_status']['help_text'] = '';
         $this->fieldspec['workitem_status']['mandatory_p'] = 'N';
         $this->fieldspec['workitem_status']['sort_key'] = '0';
         $this->fieldspec['workitem_status']['form_sort_key'] = '0';
         $this->fieldspec['workitem_status']['form_number'] = '1';
         $this->fieldspec['workitem_status']['default_value'] = '';
         $this->fieldspec['workitem_status']['field_toupper'] = 'NO';
         $this->fieldspec['workitem_status']['validationprocname'] = '';
         $this->fieldspec['workitem_status']['c_size'] = '2';
         $this->fieldspec['workitem_status']['prikey'] = 'N';
         $this->fieldspec['workitem_status']['noedit'] = 'N';
         $this->fieldspec['workitem_status']['nodisplay'] = 'N';
         $this->fieldspec['workitem_status']['c_unsigned'] = 'N';
         $this->fieldspec['workitem_status']['c_zerofill'] = 'N';
         $this->fieldspec['workitem_status']['c_auto_increment'] = 'N';
         $this->fieldspec['workitem_status']['foreign_table'] = '';
         $this->fieldspec['workitem_status']['foreign_key'] = '';
         $this->fieldspec['workitem_status']['application'] = 'workflow';
         $this->fieldspec['workitem_status']['issearchable'] = '1';
         $this->fieldspec['workitem_status']['preinserttrigger'] = '';
         $this->fieldspec['workitem_status']['postinserttrigger'] = '';
         $this->fieldspec['workitem_status']['preupdatetrigger'] = '';
         $this->fieldspec['workitem_status']['postupdatetrigger'] = '';
         $this->fieldspec['workitem_status']['predeletetrigger'] = '';
         $this->fieldspec['workitem_status']['postdeletetrigger'] = '';
         $this->fieldspec['enabled_date']['metadata_id'] = '2752';
         $this->fieldspec['enabled_date']['table_name'] = 'stateworkitem';
         $this->fieldspec['enabled_date']['column_name'] = 'enabled_date';
         $this->fieldspec['enabled_date']['pretty_name'] = '';
         $this->fieldspec['enabled_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['enabled_date']['db_data_type'] = 'datetime';
         $this->fieldspec['enabled_date']['field_null'] = 'NO';
         $this->fieldspec['enabled_date']['field_key'] = '';
         $this->fieldspec['enabled_date']['extra_sql'] = ' ';
         $this->fieldspec['enabled_date']['html_form_type'] = 'datetime';
         $this->fieldspec['enabled_date']['html_form_options'] = '';
         $this->fieldspec['enabled_date']['html_form_explanation'] = '';
         $this->fieldspec['enabled_date']['help_text'] = '';
         $this->fieldspec['enabled_date']['mandatory_p'] = 'N';
         $this->fieldspec['enabled_date']['sort_key'] = '0';
         $this->fieldspec['enabled_date']['form_sort_key'] = '0';
         $this->fieldspec['enabled_date']['form_number'] = '1';
         $this->fieldspec['enabled_date']['default_value'] = '';
         $this->fieldspec['enabled_date']['field_toupper'] = 'NO';
         $this->fieldspec['enabled_date']['validationprocname'] = '';
         $this->fieldspec['enabled_date']['c_size'] = '';
         $this->fieldspec['enabled_date']['prikey'] = 'N';
         $this->fieldspec['enabled_date']['noedit'] = 'N';
         $this->fieldspec['enabled_date']['nodisplay'] = 'N';
         $this->fieldspec['enabled_date']['c_unsigned'] = 'N';
         $this->fieldspec['enabled_date']['c_zerofill'] = 'N';
         $this->fieldspec['enabled_date']['c_auto_increment'] = 'N';
         $this->fieldspec['enabled_date']['foreign_table'] = '';
         $this->fieldspec['enabled_date']['foreign_key'] = '';
         $this->fieldspec['enabled_date']['application'] = 'workflow';
         $this->fieldspec['enabled_date']['issearchable'] = '1';
         $this->fieldspec['enabled_date']['preinserttrigger'] = '';
         $this->fieldspec['enabled_date']['postinserttrigger'] = '';
         $this->fieldspec['enabled_date']['preupdatetrigger'] = '';
         $this->fieldspec['enabled_date']['postupdatetrigger'] = '';
         $this->fieldspec['enabled_date']['predeletetrigger'] = '';
         $this->fieldspec['enabled_date']['postdeletetrigger'] = '';
         $this->fieldspec['cancelled_date']['metadata_id'] = '2753';
         $this->fieldspec['cancelled_date']['table_name'] = 'stateworkitem';
         $this->fieldspec['cancelled_date']['column_name'] = 'cancelled_date';
         $this->fieldspec['cancelled_date']['pretty_name'] = '';
         $this->fieldspec['cancelled_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['cancelled_date']['db_data_type'] = 'datetime';
         $this->fieldspec['cancelled_date']['field_null'] = 'NO';
         $this->fieldspec['cancelled_date']['field_key'] = '';
         $this->fieldspec['cancelled_date']['extra_sql'] = ' ';
         $this->fieldspec['cancelled_date']['html_form_type'] = 'datetime';
         $this->fieldspec['cancelled_date']['html_form_options'] = '';
         $this->fieldspec['cancelled_date']['html_form_explanation'] = '';
         $this->fieldspec['cancelled_date']['help_text'] = '';
         $this->fieldspec['cancelled_date']['mandatory_p'] = 'N';
         $this->fieldspec['cancelled_date']['sort_key'] = '0';
         $this->fieldspec['cancelled_date']['form_sort_key'] = '0';
         $this->fieldspec['cancelled_date']['form_number'] = '1';
         $this->fieldspec['cancelled_date']['default_value'] = '';
         $this->fieldspec['cancelled_date']['field_toupper'] = 'NO';
         $this->fieldspec['cancelled_date']['validationprocname'] = '';
         $this->fieldspec['cancelled_date']['c_size'] = '';
         $this->fieldspec['cancelled_date']['prikey'] = 'N';
         $this->fieldspec['cancelled_date']['noedit'] = 'N';
         $this->fieldspec['cancelled_date']['nodisplay'] = 'N';
         $this->fieldspec['cancelled_date']['c_unsigned'] = 'N';
         $this->fieldspec['cancelled_date']['c_zerofill'] = 'N';
         $this->fieldspec['cancelled_date']['c_auto_increment'] = 'N';
         $this->fieldspec['cancelled_date']['foreign_table'] = '';
         $this->fieldspec['cancelled_date']['foreign_key'] = '';
         $this->fieldspec['cancelled_date']['application'] = 'workflow';
         $this->fieldspec['cancelled_date']['issearchable'] = '1';
         $this->fieldspec['cancelled_date']['preinserttrigger'] = '';
         $this->fieldspec['cancelled_date']['postinserttrigger'] = '';
         $this->fieldspec['cancelled_date']['preupdatetrigger'] = '';
         $this->fieldspec['cancelled_date']['postupdatetrigger'] = '';
         $this->fieldspec['cancelled_date']['predeletetrigger'] = '';
         $this->fieldspec['cancelled_date']['postdeletetrigger'] = '';
         $this->fieldspec['finished_date']['metadata_id'] = '2754';
         $this->fieldspec['finished_date']['table_name'] = 'stateworkitem';
         $this->fieldspec['finished_date']['column_name'] = 'finished_date';
         $this->fieldspec['finished_date']['pretty_name'] = '';
         $this->fieldspec['finished_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['finished_date']['db_data_type'] = 'datetime';
         $this->fieldspec['finished_date']['field_null'] = 'NO';
         $this->fieldspec['finished_date']['field_key'] = '';
         $this->fieldspec['finished_date']['extra_sql'] = ' ';
         $this->fieldspec['finished_date']['html_form_type'] = 'datetime';
         $this->fieldspec['finished_date']['html_form_options'] = '';
         $this->fieldspec['finished_date']['html_form_explanation'] = '';
         $this->fieldspec['finished_date']['help_text'] = '';
         $this->fieldspec['finished_date']['mandatory_p'] = 'N';
         $this->fieldspec['finished_date']['sort_key'] = '0';
         $this->fieldspec['finished_date']['form_sort_key'] = '0';
         $this->fieldspec['finished_date']['form_number'] = '1';
         $this->fieldspec['finished_date']['default_value'] = '';
         $this->fieldspec['finished_date']['field_toupper'] = 'NO';
         $this->fieldspec['finished_date']['validationprocname'] = '';
         $this->fieldspec['finished_date']['c_size'] = '';
         $this->fieldspec['finished_date']['prikey'] = 'N';
         $this->fieldspec['finished_date']['noedit'] = 'N';
         $this->fieldspec['finished_date']['nodisplay'] = 'N';
         $this->fieldspec['finished_date']['c_unsigned'] = 'N';
         $this->fieldspec['finished_date']['c_zerofill'] = 'N';
         $this->fieldspec['finished_date']['c_auto_increment'] = 'N';
         $this->fieldspec['finished_date']['foreign_table'] = '';
         $this->fieldspec['finished_date']['foreign_key'] = '';
         $this->fieldspec['finished_date']['application'] = 'workflow';
         $this->fieldspec['finished_date']['issearchable'] = '1';
         $this->fieldspec['finished_date']['preinserttrigger'] = '';
         $this->fieldspec['finished_date']['postinserttrigger'] = '';
         $this->fieldspec['finished_date']['preupdatetrigger'] = '';
         $this->fieldspec['finished_date']['postupdatetrigger'] = '';
         $this->fieldspec['finished_date']['predeletetrigger'] = '';
         $this->fieldspec['finished_date']['postdeletetrigger'] = '';
         $this->fieldspec['deadline']['metadata_id'] = '2755';
         $this->fieldspec['deadline']['table_name'] = 'stateworkitem';
         $this->fieldspec['deadline']['column_name'] = 'deadline';
         $this->fieldspec['deadline']['pretty_name'] = '';
         $this->fieldspec['deadline']['abstract_data_type'] = 'datetime';
         $this->fieldspec['deadline']['db_data_type'] = 'datetime';
         $this->fieldspec['deadline']['field_null'] = 'NO';
         $this->fieldspec['deadline']['field_key'] = '';
         $this->fieldspec['deadline']['extra_sql'] = ' ';
         $this->fieldspec['deadline']['html_form_type'] = 'datetime';
         $this->fieldspec['deadline']['html_form_options'] = '';
         $this->fieldspec['deadline']['html_form_explanation'] = '';
         $this->fieldspec['deadline']['help_text'] = '';
         $this->fieldspec['deadline']['mandatory_p'] = 'N';
         $this->fieldspec['deadline']['sort_key'] = '0';
         $this->fieldspec['deadline']['form_sort_key'] = '0';
         $this->fieldspec['deadline']['form_number'] = '1';
         $this->fieldspec['deadline']['default_value'] = '';
         $this->fieldspec['deadline']['field_toupper'] = 'NO';
         $this->fieldspec['deadline']['validationprocname'] = '';
         $this->fieldspec['deadline']['c_size'] = '';
         $this->fieldspec['deadline']['prikey'] = 'N';
         $this->fieldspec['deadline']['noedit'] = 'N';
         $this->fieldspec['deadline']['nodisplay'] = 'N';
         $this->fieldspec['deadline']['c_unsigned'] = 'N';
         $this->fieldspec['deadline']['c_zerofill'] = 'N';
         $this->fieldspec['deadline']['c_auto_increment'] = 'N';
         $this->fieldspec['deadline']['foreign_table'] = '';
         $this->fieldspec['deadline']['foreign_key'] = '';
         $this->fieldspec['deadline']['application'] = 'workflow';
         $this->fieldspec['deadline']['issearchable'] = '1';
         $this->fieldspec['deadline']['preinserttrigger'] = '';
         $this->fieldspec['deadline']['postinserttrigger'] = '';
         $this->fieldspec['deadline']['preupdatetrigger'] = '';
         $this->fieldspec['deadline']['postupdatetrigger'] = '';
         $this->fieldspec['deadline']['predeletetrigger'] = '';
         $this->fieldspec['deadline']['postdeletetrigger'] = '';
         $this->fieldspec['roles_id']['metadata_id'] = '2756';
         $this->fieldspec['roles_id']['table_name'] = 'stateworkitem';
         $this->fieldspec['roles_id']['column_name'] = 'roles_id';
         $this->fieldspec['roles_id']['pretty_name'] = '';
         $this->fieldspec['roles_id']['abstract_data_type'] = 'varchar';
         $this->fieldspec['roles_id']['db_data_type'] = 'varchar';
         $this->fieldspec['roles_id']['field_null'] = 'NO';
         $this->fieldspec['roles_id']['field_key'] = '';
         $this->fieldspec['roles_id']['extra_sql'] = ' ';
         $this->fieldspec['roles_id']['html_form_type'] = 'text';
         $this->fieldspec['roles_id']['html_form_options'] = '';
         $this->fieldspec['roles_id']['html_form_explanation'] = '';
         $this->fieldspec['roles_id']['help_text'] = '';
         $this->fieldspec['roles_id']['mandatory_p'] = 'N';
         $this->fieldspec['roles_id']['sort_key'] = '0';
         $this->fieldspec['roles_id']['form_sort_key'] = '0';
         $this->fieldspec['roles_id']['form_number'] = '1';
         $this->fieldspec['roles_id']['default_value'] = '';
         $this->fieldspec['roles_id']['field_toupper'] = 'NO';
         $this->fieldspec['roles_id']['validationprocname'] = '';
         $this->fieldspec['roles_id']['c_size'] = '16';
         $this->fieldspec['roles_id']['prikey'] = 'N';
         $this->fieldspec['roles_id']['noedit'] = 'N';
         $this->fieldspec['roles_id']['nodisplay'] = 'N';
         $this->fieldspec['roles_id']['c_unsigned'] = 'N';
         $this->fieldspec['roles_id']['c_zerofill'] = 'N';
         $this->fieldspec['roles_id']['c_auto_increment'] = 'N';
         $this->fieldspec['roles_id']['foreign_table'] = '';
         $this->fieldspec['roles_id']['foreign_key'] = '';
         $this->fieldspec['roles_id']['application'] = 'workflow';
         $this->fieldspec['roles_id']['issearchable'] = '1';
         $this->fieldspec['roles_id']['preinserttrigger'] = '';
         $this->fieldspec['roles_id']['postinserttrigger'] = '';
         $this->fieldspec['roles_id']['preupdatetrigger'] = '';
         $this->fieldspec['roles_id']['postupdatetrigger'] = '';
         $this->fieldspec['roles_id']['predeletetrigger'] = '';
         $this->fieldspec['roles_id']['postdeletetrigger'] = '';
         $this->fieldspec['user_id']['metadata_id'] = '2757';
         $this->fieldspec['user_id']['table_name'] = 'stateworkitem';
         $this->fieldspec['user_id']['column_name'] = 'user_id';
         $this->fieldspec['user_id']['pretty_name'] = '';
         $this->fieldspec['user_id']['abstract_data_type'] = 'varchar';
         $this->fieldspec['user_id']['db_data_type'] = 'varchar';
         $this->fieldspec['user_id']['field_null'] = 'NO';
         $this->fieldspec['user_id']['field_key'] = '';
         $this->fieldspec['user_id']['extra_sql'] = ' ';
         $this->fieldspec['user_id']['html_form_type'] = 'text';
         $this->fieldspec['user_id']['html_form_options'] = '';
         $this->fieldspec['user_id']['html_form_explanation'] = '';
         $this->fieldspec['user_id']['help_text'] = '';
         $this->fieldspec['user_id']['mandatory_p'] = 'N';
         $this->fieldspec['user_id']['sort_key'] = '0';
         $this->fieldspec['user_id']['form_sort_key'] = '0';
         $this->fieldspec['user_id']['form_number'] = '1';
         $this->fieldspec['user_id']['default_value'] = '';
         $this->fieldspec['user_id']['field_toupper'] = 'NO';
         $this->fieldspec['user_id']['validationprocname'] = '';
         $this->fieldspec['user_id']['c_size'] = '16';
         $this->fieldspec['user_id']['prikey'] = 'N';
         $this->fieldspec['user_id']['noedit'] = 'N';
         $this->fieldspec['user_id']['nodisplay'] = 'N';
         $this->fieldspec['user_id']['c_unsigned'] = 'N';
         $this->fieldspec['user_id']['c_zerofill'] = 'N';
         $this->fieldspec['user_id']['c_auto_increment'] = 'N';
         $this->fieldspec['user_id']['foreign_table'] = '';
         $this->fieldspec['user_id']['foreign_key'] = '';
         $this->fieldspec['user_id']['application'] = 'workflow';
         $this->fieldspec['user_id']['issearchable'] = '1';
         $this->fieldspec['user_id']['preinserttrigger'] = '';
         $this->fieldspec['user_id']['postinserttrigger'] = '';
         $this->fieldspec['user_id']['preupdatetrigger'] = '';
         $this->fieldspec['user_id']['postupdatetrigger'] = '';
         $this->fieldspec['user_id']['predeletetrigger'] = '';
         $this->fieldspec['user_id']['postdeletetrigger'] = '';
         $this->fieldlist = array('case_id', 'workitem_id', 'workflow_id', 'transition_id', 'transition_trigger', 'task_id', 'context', 'workitem_status', 'enabled_date', 'cancelled_date', 'finished_date', 'deadline', 'roles_id', 'user_id', 'case_id', 'workitem_id', 'workflow_id', 'transition_id', 'transition_trigger', 'task_id', 'context', 'workitem_status', 'enabled_date', 'cancelled_date', 'finished_date', 'deadline', 'roles_id', 'user_id');
         $this->searchlist = array('case_id', 'workitem_id', 'workflow_id', 'transition_id', 'transition_trigger', 'task_id', 'context', 'workitem_status', 'enabled_date', 'cancelled_date', 'finished_date', 'deadline', 'roles_id', 'user_id', 'case_id', 'workitem_id', 'workflow_id', 'transition_id', 'transition_trigger', 'task_id', 'context', 'workitem_status', 'enabled_date', 'cancelled_date', 'finished_date', 'deadline', 'roles_id', 'user_id', );
	         return SUCCESS;
         }
         function stateworkitem()
         { //For older php which doesn't have constructor
              return $this->__constructor();
         }
         function Push()
         {
	         $_SESSION['stateworkitem'] = serialize($this);
	         return SUCCESS;
         }
         function Pop()
         {
                 //Can't do this in self - this is how to do it outside
	       //  $this = unserialize($_SESSION['stateworkitem']);
	         return SUCCESS;
         }
         function ObserverRegister( $observer, $event )
         {
                 $this->observers[$event][] = $observer;
	         return SUCCESS;
         }
         function ObserverDeRegister( $observer )
         {
                 $this->observers[] = array_diff( $this->observers, array( $observer) );
	         return SUCCESS;
         }
         function ObserverNotify( $event, $msg )
         {
                 if ( isset( $this->observers[$event] ) )
                 	foreach ( $this->observers[$event] as $obs ) 
                 	{
                      		$obs->notify( $event, $msg );
                 	}
                 /* '**' being used as 'ALL' */
                 if ( isset( $this->observers['**'] ) )
                 	foreach ( $this->observers['**'] as $obs ) 
                 	{
                      		$obs->notify( $event, $msg );
                 	}
	         return SUCCESS;
         }
         function notify( $object )
         {
                 //Called when another object we are observing sends us a notification
	         return SUCCESS;
         }
         function Precase_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idInsert ) )
	            return Precase_idInsert( $this );
                 else return;
         }
         function Postcase_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idInsert ) )
	            return Precase_idInsert( $this );
                 else return;
         }
         function Precase_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idUpdate ) )
	            return Precase_idUpdate( $this );
                 else return;
         }
         function Postcase_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idUpdate ) )
	            return Precase_idUpdate( $this );
                 else return;
         }
         function Precase_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idDelete ) )
	            return Precase_idDelete( $this );
                 else return;
         }
         function Postcase_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idDelete ) )
	            return Precase_idDelete( $this );
                 else return;
         }
         function Setcase_id($value)
         {
                 $this->case_id = $value;
	          return SUCCESS;
         }
         function Getcase_id()
         {
                    return $this->case_id;
         }
         function Preworkitem_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_idInsert ) )
	            return Preworkitem_idInsert( $this );
                 else return;
         }
         function Postworkitem_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_idInsert ) )
	            return Preworkitem_idInsert( $this );
                 else return;
         }
         function Preworkitem_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_idUpdate ) )
	            return Preworkitem_idUpdate( $this );
                 else return;
         }
         function Postworkitem_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_idUpdate ) )
	            return Preworkitem_idUpdate( $this );
                 else return;
         }
         function Preworkitem_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_idDelete ) )
	            return Preworkitem_idDelete( $this );
                 else return;
         }
         function Postworkitem_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_idDelete ) )
	            return Preworkitem_idDelete( $this );
                 else return;
         }
         function Setworkitem_id($value)
         {
                 $this->workitem_id = $value;
	          return SUCCESS;
         }
         function Getworkitem_id()
         {
                    return $this->workitem_id;
         }
         function Preworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Postworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Preworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Postworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Preworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Postworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Setworkflow_id($value)
         {
                 $this->workflow_id = $value;
	          return SUCCESS;
         }
         function Getworkflow_id()
         {
                    return $this->workflow_id;
         }
         function Pretransition_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idInsert ) )
	            return Pretransition_idInsert( $this );
                 else return;
         }
         function Posttransition_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idInsert ) )
	            return Pretransition_idInsert( $this );
                 else return;
         }
         function Pretransition_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idUpdate ) )
	            return Pretransition_idUpdate( $this );
                 else return;
         }
         function Posttransition_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idUpdate ) )
	            return Pretransition_idUpdate( $this );
                 else return;
         }
         function Pretransition_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idDelete ) )
	            return Pretransition_idDelete( $this );
                 else return;
         }
         function Posttransition_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idDelete ) )
	            return Pretransition_idDelete( $this );
                 else return;
         }
         function Settransition_id($value)
         {
                 $this->transition_id = $value;
	          return SUCCESS;
         }
         function Gettransition_id()
         {
                    return $this->transition_id;
         }
         function Pretransition_triggerInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerInsert ) )
	            return Pretransition_triggerInsert( $this );
                 else return;
         }
         function Posttransition_triggerInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerInsert ) )
	            return Pretransition_triggerInsert( $this );
                 else return;
         }
         function Pretransition_triggerUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerUpdate ) )
	            return Pretransition_triggerUpdate( $this );
                 else return;
         }
         function Posttransition_triggerUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerUpdate ) )
	            return Pretransition_triggerUpdate( $this );
                 else return;
         }
         function Pretransition_triggerDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerDelete ) )
	            return Pretransition_triggerDelete( $this );
                 else return;
         }
         function Posttransition_triggerDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerDelete ) )
	            return Pretransition_triggerDelete( $this );
                 else return;
         }
         function Settransition_trigger($value)
         {
                 $this->transition_trigger = $value;
	          return SUCCESS;
         }
         function Gettransition_trigger()
         {
                    return $this->transition_trigger;
         }
         function Pretask_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idInsert ) )
	            return Pretask_idInsert( $this );
                 else return;
         }
         function Posttask_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idInsert ) )
	            return Pretask_idInsert( $this );
                 else return;
         }
         function Pretask_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idUpdate ) )
	            return Pretask_idUpdate( $this );
                 else return;
         }
         function Posttask_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idUpdate ) )
	            return Pretask_idUpdate( $this );
                 else return;
         }
         function Pretask_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idDelete ) )
	            return Pretask_idDelete( $this );
                 else return;
         }
         function Posttask_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idDelete ) )
	            return Pretask_idDelete( $this );
                 else return;
         }
         function Settask_id($value)
         {
                 $this->task_id = $value;
	          return SUCCESS;
         }
         function Gettask_id()
         {
                    return $this->task_id;
         }
         function PrecontextInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextInsert ) )
	            return PrecontextInsert( $this );
                 else return;
         }
         function PostcontextInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextInsert ) )
	            return PrecontextInsert( $this );
                 else return;
         }
         function PrecontextUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextUpdate ) )
	            return PrecontextUpdate( $this );
                 else return;
         }
         function PostcontextUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextUpdate ) )
	            return PrecontextUpdate( $this );
                 else return;
         }
         function PrecontextDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextDelete ) )
	            return PrecontextDelete( $this );
                 else return;
         }
         function PostcontextDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextDelete ) )
	            return PrecontextDelete( $this );
                 else return;
         }
         function Setcontext($value)
         {
                 $this->context = $value;
	          return SUCCESS;
         }
         function Getcontext()
         {
                    return $this->context;
         }
         function Preworkitem_statusInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_statusInsert ) )
	            return Preworkitem_statusInsert( $this );
                 else return;
         }
         function Postworkitem_statusInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_statusInsert ) )
	            return Preworkitem_statusInsert( $this );
                 else return;
         }
         function Preworkitem_statusUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_statusUpdate ) )
	            return Preworkitem_statusUpdate( $this );
                 else return;
         }
         function Postworkitem_statusUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_statusUpdate ) )
	            return Preworkitem_statusUpdate( $this );
                 else return;
         }
         function Preworkitem_statusDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_statusDelete ) )
	            return Preworkitem_statusDelete( $this );
                 else return;
         }
         function Postworkitem_statusDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_statusDelete ) )
	            return Preworkitem_statusDelete( $this );
                 else return;
         }
         function Setworkitem_status($value)
         {
                 $this->workitem_status = $value;
	          return SUCCESS;
         }
         function Getworkitem_status()
         {
                    return $this->workitem_status;
         }
         function Preenabled_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preenabled_dateInsert ) )
	            return Preenabled_dateInsert( $this );
                 else return;
         }
         function Postenabled_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preenabled_dateInsert ) )
	            return Preenabled_dateInsert( $this );
                 else return;
         }
         function Preenabled_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preenabled_dateUpdate ) )
	            return Preenabled_dateUpdate( $this );
                 else return;
         }
         function Postenabled_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preenabled_dateUpdate ) )
	            return Preenabled_dateUpdate( $this );
                 else return;
         }
         function Preenabled_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preenabled_dateDelete ) )
	            return Preenabled_dateDelete( $this );
                 else return;
         }
         function Postenabled_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preenabled_dateDelete ) )
	            return Preenabled_dateDelete( $this );
                 else return;
         }
         function Setenabled_date($value)
         {
                 $this->enabled_date = $value;
	          return SUCCESS;
         }
         function Getenabled_date()
         {
                    return $this->enabled_date;
         }
         function Precancelled_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precancelled_dateInsert ) )
	            return Precancelled_dateInsert( $this );
                 else return;
         }
         function Postcancelled_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precancelled_dateInsert ) )
	            return Precancelled_dateInsert( $this );
                 else return;
         }
         function Precancelled_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precancelled_dateUpdate ) )
	            return Precancelled_dateUpdate( $this );
                 else return;
         }
         function Postcancelled_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precancelled_dateUpdate ) )
	            return Precancelled_dateUpdate( $this );
                 else return;
         }
         function Precancelled_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precancelled_dateDelete ) )
	            return Precancelled_dateDelete( $this );
                 else return;
         }
         function Postcancelled_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precancelled_dateDelete ) )
	            return Precancelled_dateDelete( $this );
                 else return;
         }
         function Setcancelled_date($value)
         {
                 $this->cancelled_date = $value;
	          return SUCCESS;
         }
         function Getcancelled_date()
         {
                    return $this->cancelled_date;
         }
         function Prefinished_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prefinished_dateInsert ) )
	            return Prefinished_dateInsert( $this );
                 else return;
         }
         function Postfinished_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prefinished_dateInsert ) )
	            return Prefinished_dateInsert( $this );
                 else return;
         }
         function Prefinished_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prefinished_dateUpdate ) )
	            return Prefinished_dateUpdate( $this );
                 else return;
         }
         function Postfinished_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prefinished_dateUpdate ) )
	            return Prefinished_dateUpdate( $this );
                 else return;
         }
         function Prefinished_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prefinished_dateDelete ) )
	            return Prefinished_dateDelete( $this );
                 else return;
         }
         function Postfinished_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prefinished_dateDelete ) )
	            return Prefinished_dateDelete( $this );
                 else return;
         }
         function Setfinished_date($value)
         {
                 $this->finished_date = $value;
	          return SUCCESS;
         }
         function Getfinished_date()
         {
                    return $this->finished_date;
         }
         function PredeadlineInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredeadlineInsert ) )
	            return PredeadlineInsert( $this );
                 else return;
         }
         function PostdeadlineInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredeadlineInsert ) )
	            return PredeadlineInsert( $this );
                 else return;
         }
         function PredeadlineUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredeadlineUpdate ) )
	            return PredeadlineUpdate( $this );
                 else return;
         }
         function PostdeadlineUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredeadlineUpdate ) )
	            return PredeadlineUpdate( $this );
                 else return;
         }
         function PredeadlineDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredeadlineDelete ) )
	            return PredeadlineDelete( $this );
                 else return;
         }
         function PostdeadlineDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredeadlineDelete ) )
	            return PredeadlineDelete( $this );
                 else return;
         }
         function Setdeadline($value)
         {
                 $this->deadline = $value;
	          return SUCCESS;
         }
         function Getdeadline()
         {
                    return $this->deadline;
         }
         function Preroles_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idInsert ) )
	            return Preroles_idInsert( $this );
                 else return;
         }
         function Postroles_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idInsert ) )
	            return Preroles_idInsert( $this );
                 else return;
         }
         function Preroles_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idUpdate ) )
	            return Preroles_idUpdate( $this );
                 else return;
         }
         function Postroles_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idUpdate ) )
	            return Preroles_idUpdate( $this );
                 else return;
         }
         function Preroles_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idDelete ) )
	            return Preroles_idDelete( $this );
                 else return;
         }
         function Postroles_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idDelete ) )
	            return Preroles_idDelete( $this );
                 else return;
         }
         function Setroles_id($value)
         {
                 $this->roles_id = $value;
	          return SUCCESS;
         }
         function Getroles_id()
         {
                    return $this->roles_id;
         }
         function Preuser_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preuser_idInsert ) )
	            return Preuser_idInsert( $this );
                 else return;
         }
         function Postuser_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preuser_idInsert ) )
	            return Preuser_idInsert( $this );
                 else return;
         }
         function Preuser_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preuser_idUpdate ) )
	            return Preuser_idUpdate( $this );
                 else return;
         }
         function Postuser_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preuser_idUpdate ) )
	            return Preuser_idUpdate( $this );
                 else return;
         }
         function Preuser_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preuser_idDelete ) )
	            return Preuser_idDelete( $this );
                 else return;
         }
         function Postuser_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preuser_idDelete ) )
	            return Preuser_idDelete( $this );
                 else return;
         }
         function Setuser_id($value)
         {
                 $this->user_id = $value;
	          return SUCCESS;
         }
         function Getuser_id()
         {
                    return $this->user_id;
         }
         function Precase_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idInsert ) )
	            return Precase_idInsert( $this );
                 else return;
         }
         function Postcase_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idInsert ) )
	            return Precase_idInsert( $this );
                 else return;
         }
         function Precase_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idUpdate ) )
	            return Precase_idUpdate( $this );
                 else return;
         }
         function Postcase_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idUpdate ) )
	            return Precase_idUpdate( $this );
                 else return;
         }
         function Precase_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idDelete ) )
	            return Precase_idDelete( $this );
                 else return;
         }
         function Postcase_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precase_idDelete ) )
	            return Precase_idDelete( $this );
                 else return;
         }
         function Setcase_id($value)
         {
                 $this->case_id = $value;
	          return SUCCESS;
         }
         function Getcase_id()
         {
                    return $this->case_id;
         }
         function Preworkitem_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_idInsert ) )
	            return Preworkitem_idInsert( $this );
                 else return;
         }
         function Postworkitem_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_idInsert ) )
	            return Preworkitem_idInsert( $this );
                 else return;
         }
         function Preworkitem_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_idUpdate ) )
	            return Preworkitem_idUpdate( $this );
                 else return;
         }
         function Postworkitem_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_idUpdate ) )
	            return Preworkitem_idUpdate( $this );
                 else return;
         }
         function Preworkitem_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_idDelete ) )
	            return Preworkitem_idDelete( $this );
                 else return;
         }
         function Postworkitem_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_idDelete ) )
	            return Preworkitem_idDelete( $this );
                 else return;
         }
         function Setworkitem_id($value)
         {
                 $this->workitem_id = $value;
	          return SUCCESS;
         }
         function Getworkitem_id()
         {
                    return $this->workitem_id;
         }
         function Preworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Postworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Preworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Postworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Preworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Postworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Setworkflow_id($value)
         {
                 $this->workflow_id = $value;
	          return SUCCESS;
         }
         function Getworkflow_id()
         {
                    return $this->workflow_id;
         }
         function Pretransition_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idInsert ) )
	            return Pretransition_idInsert( $this );
                 else return;
         }
         function Posttransition_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idInsert ) )
	            return Pretransition_idInsert( $this );
                 else return;
         }
         function Pretransition_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idUpdate ) )
	            return Pretransition_idUpdate( $this );
                 else return;
         }
         function Posttransition_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idUpdate ) )
	            return Pretransition_idUpdate( $this );
                 else return;
         }
         function Pretransition_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idDelete ) )
	            return Pretransition_idDelete( $this );
                 else return;
         }
         function Posttransition_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idDelete ) )
	            return Pretransition_idDelete( $this );
                 else return;
         }
         function Settransition_id($value)
         {
                 $this->transition_id = $value;
	          return SUCCESS;
         }
         function Gettransition_id()
         {
                    return $this->transition_id;
         }
         function Pretransition_triggerInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerInsert ) )
	            return Pretransition_triggerInsert( $this );
                 else return;
         }
         function Posttransition_triggerInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerInsert ) )
	            return Pretransition_triggerInsert( $this );
                 else return;
         }
         function Pretransition_triggerUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerUpdate ) )
	            return Pretransition_triggerUpdate( $this );
                 else return;
         }
         function Posttransition_triggerUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerUpdate ) )
	            return Pretransition_triggerUpdate( $this );
                 else return;
         }
         function Pretransition_triggerDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerDelete ) )
	            return Pretransition_triggerDelete( $this );
                 else return;
         }
         function Posttransition_triggerDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerDelete ) )
	            return Pretransition_triggerDelete( $this );
                 else return;
         }
         function Settransition_trigger($value)
         {
                 $this->transition_trigger = $value;
	          return SUCCESS;
         }
         function Gettransition_trigger()
         {
                    return $this->transition_trigger;
         }
         function Pretask_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idInsert ) )
	            return Pretask_idInsert( $this );
                 else return;
         }
         function Posttask_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idInsert ) )
	            return Pretask_idInsert( $this );
                 else return;
         }
         function Pretask_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idUpdate ) )
	            return Pretask_idUpdate( $this );
                 else return;
         }
         function Posttask_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idUpdate ) )
	            return Pretask_idUpdate( $this );
                 else return;
         }
         function Pretask_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idDelete ) )
	            return Pretask_idDelete( $this );
                 else return;
         }
         function Posttask_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idDelete ) )
	            return Pretask_idDelete( $this );
                 else return;
         }
         function Settask_id($value)
         {
                 $this->task_id = $value;
	          return SUCCESS;
         }
         function Gettask_id()
         {
                    return $this->task_id;
         }
         function PrecontextInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextInsert ) )
	            return PrecontextInsert( $this );
                 else return;
         }
         function PostcontextInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextInsert ) )
	            return PrecontextInsert( $this );
                 else return;
         }
         function PrecontextUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextUpdate ) )
	            return PrecontextUpdate( $this );
                 else return;
         }
         function PostcontextUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextUpdate ) )
	            return PrecontextUpdate( $this );
                 else return;
         }
         function PrecontextDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextDelete ) )
	            return PrecontextDelete( $this );
                 else return;
         }
         function PostcontextDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PrecontextDelete ) )
	            return PrecontextDelete( $this );
                 else return;
         }
         function Setcontext($value)
         {
                 $this->context = $value;
	          return SUCCESS;
         }
         function Getcontext()
         {
                    return $this->context;
         }
         function Preworkitem_statusInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_statusInsert ) )
	            return Preworkitem_statusInsert( $this );
                 else return;
         }
         function Postworkitem_statusInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_statusInsert ) )
	            return Preworkitem_statusInsert( $this );
                 else return;
         }
         function Preworkitem_statusUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_statusUpdate ) )
	            return Preworkitem_statusUpdate( $this );
                 else return;
         }
         function Postworkitem_statusUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_statusUpdate ) )
	            return Preworkitem_statusUpdate( $this );
                 else return;
         }
         function Preworkitem_statusDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_statusDelete ) )
	            return Preworkitem_statusDelete( $this );
                 else return;
         }
         function Postworkitem_statusDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkitem_statusDelete ) )
	            return Preworkitem_statusDelete( $this );
                 else return;
         }
         function Setworkitem_status($value)
         {
                 $this->workitem_status = $value;
	          return SUCCESS;
         }
         function Getworkitem_status()
         {
                    return $this->workitem_status;
         }
         function Preenabled_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preenabled_dateInsert ) )
	            return Preenabled_dateInsert( $this );
                 else return;
         }
         function Postenabled_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preenabled_dateInsert ) )
	            return Preenabled_dateInsert( $this );
                 else return;
         }
         function Preenabled_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preenabled_dateUpdate ) )
	            return Preenabled_dateUpdate( $this );
                 else return;
         }
         function Postenabled_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preenabled_dateUpdate ) )
	            return Preenabled_dateUpdate( $this );
                 else return;
         }
         function Preenabled_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preenabled_dateDelete ) )
	            return Preenabled_dateDelete( $this );
                 else return;
         }
         function Postenabled_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preenabled_dateDelete ) )
	            return Preenabled_dateDelete( $this );
                 else return;
         }
         function Setenabled_date($value)
         {
                 $this->enabled_date = $value;
	          return SUCCESS;
         }
         function Getenabled_date()
         {
                    return $this->enabled_date;
         }
         function Precancelled_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precancelled_dateInsert ) )
	            return Precancelled_dateInsert( $this );
                 else return;
         }
         function Postcancelled_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precancelled_dateInsert ) )
	            return Precancelled_dateInsert( $this );
                 else return;
         }
         function Precancelled_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precancelled_dateUpdate ) )
	            return Precancelled_dateUpdate( $this );
                 else return;
         }
         function Postcancelled_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precancelled_dateUpdate ) )
	            return Precancelled_dateUpdate( $this );
                 else return;
         }
         function Precancelled_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precancelled_dateDelete ) )
	            return Precancelled_dateDelete( $this );
                 else return;
         }
         function Postcancelled_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precancelled_dateDelete ) )
	            return Precancelled_dateDelete( $this );
                 else return;
         }
         function Setcancelled_date($value)
         {
                 $this->cancelled_date = $value;
	          return SUCCESS;
         }
         function Getcancelled_date()
         {
                    return $this->cancelled_date;
         }
         function Prefinished_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prefinished_dateInsert ) )
	            return Prefinished_dateInsert( $this );
                 else return;
         }
         function Postfinished_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prefinished_dateInsert ) )
	            return Prefinished_dateInsert( $this );
                 else return;
         }
         function Prefinished_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prefinished_dateUpdate ) )
	            return Prefinished_dateUpdate( $this );
                 else return;
         }
         function Postfinished_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prefinished_dateUpdate ) )
	            return Prefinished_dateUpdate( $this );
                 else return;
         }
         function Prefinished_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prefinished_dateDelete ) )
	            return Prefinished_dateDelete( $this );
                 else return;
         }
         function Postfinished_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prefinished_dateDelete ) )
	            return Prefinished_dateDelete( $this );
                 else return;
         }
         function Setfinished_date($value)
         {
                 $this->finished_date = $value;
	          return SUCCESS;
         }
         function Getfinished_date()
         {
                    return $this->finished_date;
         }
         function PredeadlineInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredeadlineInsert ) )
	            return PredeadlineInsert( $this );
                 else return;
         }
         function PostdeadlineInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredeadlineInsert ) )
	            return PredeadlineInsert( $this );
                 else return;
         }
         function PredeadlineUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredeadlineUpdate ) )
	            return PredeadlineUpdate( $this );
                 else return;
         }
         function PostdeadlineUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredeadlineUpdate ) )
	            return PredeadlineUpdate( $this );
                 else return;
         }
         function PredeadlineDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredeadlineDelete ) )
	            return PredeadlineDelete( $this );
                 else return;
         }
         function PostdeadlineDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredeadlineDelete ) )
	            return PredeadlineDelete( $this );
                 else return;
         }
         function Setdeadline($value)
         {
                 $this->deadline = $value;
	          return SUCCESS;
         }
         function Getdeadline()
         {
                    return $this->deadline;
         }
         function Preroles_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idInsert ) )
	            return Preroles_idInsert( $this );
                 else return;
         }
         function Postroles_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idInsert ) )
	            return Preroles_idInsert( $this );
                 else return;
         }
         function Preroles_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idUpdate ) )
	            return Preroles_idUpdate( $this );
                 else return;
         }
         function Postroles_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idUpdate ) )
	            return Preroles_idUpdate( $this );
                 else return;
         }
         function Preroles_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idDelete ) )
	            return Preroles_idDelete( $this );
                 else return;
         }
         function Postroles_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idDelete ) )
	            return Preroles_idDelete( $this );
                 else return;
         }
         function Setroles_id($value)
         {
                 $this->roles_id = $value;
	          return SUCCESS;
         }
         function Getroles_id()
         {
                    return $this->roles_id;
         }
         function Preuser_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preuser_idInsert ) )
	            return Preuser_idInsert( $this );
                 else return;
         }
         function Postuser_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preuser_idInsert ) )
	            return Preuser_idInsert( $this );
                 else return;
         }
         function Preuser_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preuser_idUpdate ) )
	            return Preuser_idUpdate( $this );
                 else return;
         }
         function Postuser_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preuser_idUpdate ) )
	            return Preuser_idUpdate( $this );
                 else return;
         }
         function Preuser_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preuser_idDelete ) )
	            return Preuser_idDelete( $this );
                 else return;
         }
         function Postuser_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preuser_idDelete ) )
	            return Preuser_idDelete( $this );
                 else return;
         }
         function Setuser_id($value)
         {
                 $this->user_id = $value;
	          return SUCCESS;
         }
         function Getuser_id()
         {
                    return $this->user_id;
         }
} /* class stateworkitem */
