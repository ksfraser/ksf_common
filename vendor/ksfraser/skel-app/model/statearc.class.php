<?php 
//This file was generated by calling php /var/www/html/codemeta/generator.php workflow 

//this script may only be included - so its better to die if called directly.
if ( strpos( $_SERVER["SCRIPT_NAME"], basename(__FILE__) ) !== false ) {
  header( "location: ../index.php" );
  exit;
}

class statearc extends generictable 
{
          private $observers;
         var $data; //data passed in by other calls         var $workflow_id;
		 /* */
         var $transition_id;
		 /* */
         var $place_id;
		 /* */
         var $direction;
		 /* */
         var $arc_type;
		 /* */
         var $pre_condition;
		 /* */
         var $created_date;
		 /* */
         var $created_user;
		 /* */
         var $revised_date;
		 /* */
         var $revised_user;
		 /* */
         var $workflow_id;
		 /* */
         var $transition_id;
		 /* */
         var $place_id;
		 /* */
         var $direction;
		 /* */
         var $arc_type;
		 /* */
         var $pre_condition;
		 /* */
         var $created_date;
		 /* */
         var $created_user;
		 /* */
         var $revised_date;
		 /* */
         var $revised_user;
		 /* */
         function __constructor()
         {
         $this->querytablename = 'statearc';
         $this->fieldspec['workflow_id']['metadata_id'] = '2633';
         $this->fieldspec['workflow_id']['table_name'] = 'statearc';
         $this->fieldspec['workflow_id']['column_name'] = 'workflow_id';
         $this->fieldspec['workflow_id']['pretty_name'] = '';
         $this->fieldspec['workflow_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['db_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['field_null'] = 'YES';
         $this->fieldspec['workflow_id']['field_key'] = '';
         $this->fieldspec['workflow_id']['extra_sql'] = ' ';
         $this->fieldspec['workflow_id']['html_form_type'] = 'integer';
         $this->fieldspec['workflow_id']['html_form_options'] = '';
         $this->fieldspec['workflow_id']['html_form_explanation'] = '';
         $this->fieldspec['workflow_id']['help_text'] = '';
         $this->fieldspec['workflow_id']['mandatory_p'] = 'N';
         $this->fieldspec['workflow_id']['sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_number'] = '1';
         $this->fieldspec['workflow_id']['default_value'] = '';
         $this->fieldspec['workflow_id']['field_toupper'] = 'NO';
         $this->fieldspec['workflow_id']['validationprocname'] = '';
         $this->fieldspec['workflow_id']['c_size'] = '5';
         $this->fieldspec['workflow_id']['prikey'] = 'Y';
         $this->fieldspec['workflow_id']['noedit'] = 'N';
         $this->fieldspec['workflow_id']['nodisplay'] = 'N';
         $this->fieldspec['workflow_id']['c_unsigned'] = 'Y';
         $this->fieldspec['workflow_id']['c_zerofill'] = 'N';
         $this->fieldspec['workflow_id']['c_auto_increment'] = 'N';
         $this->fieldspec['workflow_id']['foreign_table'] = '';
         $this->fieldspec['workflow_id']['foreign_key'] = '';
         $this->fieldspec['workflow_id']['application'] = 'workflow';
         $this->fieldspec['workflow_id']['issearchable'] = '1';
         $this->fieldspec['workflow_id']['preinserttrigger'] = '';
         $this->fieldspec['workflow_id']['postinserttrigger'] = '';
         $this->fieldspec['workflow_id']['preupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['postupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['predeletetrigger'] = '';
         $this->fieldspec['workflow_id']['postdeletetrigger'] = '';
         $this->fieldspec['transition_id']['metadata_id'] = '2634';
         $this->fieldspec['transition_id']['table_name'] = 'statearc';
         $this->fieldspec['transition_id']['column_name'] = 'transition_id';
         $this->fieldspec['transition_id']['pretty_name'] = '';
         $this->fieldspec['transition_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['transition_id']['db_data_type'] = 'smallint';
         $this->fieldspec['transition_id']['field_null'] = 'YES';
         $this->fieldspec['transition_id']['field_key'] = '';
         $this->fieldspec['transition_id']['extra_sql'] = ' ';
         $this->fieldspec['transition_id']['html_form_type'] = 'integer';
         $this->fieldspec['transition_id']['html_form_options'] = '';
         $this->fieldspec['transition_id']['html_form_explanation'] = '';
         $this->fieldspec['transition_id']['help_text'] = '';
         $this->fieldspec['transition_id']['mandatory_p'] = 'N';
         $this->fieldspec['transition_id']['sort_key'] = '0';
         $this->fieldspec['transition_id']['form_sort_key'] = '0';
         $this->fieldspec['transition_id']['form_number'] = '1';
         $this->fieldspec['transition_id']['default_value'] = '';
         $this->fieldspec['transition_id']['field_toupper'] = 'NO';
         $this->fieldspec['transition_id']['validationprocname'] = '';
         $this->fieldspec['transition_id']['c_size'] = '5';
         $this->fieldspec['transition_id']['prikey'] = 'Y';
         $this->fieldspec['transition_id']['noedit'] = 'N';
         $this->fieldspec['transition_id']['nodisplay'] = 'N';
         $this->fieldspec['transition_id']['c_unsigned'] = 'Y';
         $this->fieldspec['transition_id']['c_zerofill'] = 'N';
         $this->fieldspec['transition_id']['c_auto_increment'] = 'N';
         $this->fieldspec['transition_id']['foreign_table'] = '';
         $this->fieldspec['transition_id']['foreign_key'] = '';
         $this->fieldspec['transition_id']['application'] = 'workflow';
         $this->fieldspec['transition_id']['issearchable'] = '1';
         $this->fieldspec['transition_id']['preinserttrigger'] = '';
         $this->fieldspec['transition_id']['postinserttrigger'] = '';
         $this->fieldspec['transition_id']['preupdatetrigger'] = '';
         $this->fieldspec['transition_id']['postupdatetrigger'] = '';
         $this->fieldspec['transition_id']['predeletetrigger'] = '';
         $this->fieldspec['transition_id']['postdeletetrigger'] = '';
         $this->fieldspec['place_id']['metadata_id'] = '2635';
         $this->fieldspec['place_id']['table_name'] = 'statearc';
         $this->fieldspec['place_id']['column_name'] = 'place_id';
         $this->fieldspec['place_id']['pretty_name'] = '';
         $this->fieldspec['place_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['place_id']['db_data_type'] = 'smallint';
         $this->fieldspec['place_id']['field_null'] = 'YES';
         $this->fieldspec['place_id']['field_key'] = '';
         $this->fieldspec['place_id']['extra_sql'] = ' ';
         $this->fieldspec['place_id']['html_form_type'] = 'integer';
         $this->fieldspec['place_id']['html_form_options'] = '';
         $this->fieldspec['place_id']['html_form_explanation'] = '';
         $this->fieldspec['place_id']['help_text'] = '';
         $this->fieldspec['place_id']['mandatory_p'] = 'N';
         $this->fieldspec['place_id']['sort_key'] = '0';
         $this->fieldspec['place_id']['form_sort_key'] = '0';
         $this->fieldspec['place_id']['form_number'] = '1';
         $this->fieldspec['place_id']['default_value'] = '';
         $this->fieldspec['place_id']['field_toupper'] = 'NO';
         $this->fieldspec['place_id']['validationprocname'] = '';
         $this->fieldspec['place_id']['c_size'] = '5';
         $this->fieldspec['place_id']['prikey'] = 'Y';
         $this->fieldspec['place_id']['noedit'] = 'N';
         $this->fieldspec['place_id']['nodisplay'] = 'N';
         $this->fieldspec['place_id']['c_unsigned'] = 'Y';
         $this->fieldspec['place_id']['c_zerofill'] = 'N';
         $this->fieldspec['place_id']['c_auto_increment'] = 'N';
         $this->fieldspec['place_id']['foreign_table'] = '';
         $this->fieldspec['place_id']['foreign_key'] = '';
         $this->fieldspec['place_id']['application'] = 'workflow';
         $this->fieldspec['place_id']['issearchable'] = '1';
         $this->fieldspec['place_id']['preinserttrigger'] = '';
         $this->fieldspec['place_id']['postinserttrigger'] = '';
         $this->fieldspec['place_id']['preupdatetrigger'] = '';
         $this->fieldspec['place_id']['postupdatetrigger'] = '';
         $this->fieldspec['place_id']['predeletetrigger'] = '';
         $this->fieldspec['place_id']['postdeletetrigger'] = '';
         $this->fieldspec['direction']['metadata_id'] = '2636';
         $this->fieldspec['direction']['table_name'] = 'statearc';
         $this->fieldspec['direction']['column_name'] = 'direction';
         $this->fieldspec['direction']['pretty_name'] = '';
         $this->fieldspec['direction']['abstract_data_type'] = 'char';
         $this->fieldspec['direction']['db_data_type'] = 'char';
         $this->fieldspec['direction']['field_null'] = 'YES';
         $this->fieldspec['direction']['field_key'] = '';
         $this->fieldspec['direction']['extra_sql'] = ' ';
         $this->fieldspec['direction']['html_form_type'] = 'text';
         $this->fieldspec['direction']['html_form_options'] = '';
         $this->fieldspec['direction']['html_form_explanation'] = '';
         $this->fieldspec['direction']['help_text'] = '';
         $this->fieldspec['direction']['mandatory_p'] = 'N';
         $this->fieldspec['direction']['sort_key'] = '0';
         $this->fieldspec['direction']['form_sort_key'] = '0';
         $this->fieldspec['direction']['form_number'] = '1';
         $this->fieldspec['direction']['default_value'] = '';
         $this->fieldspec['direction']['field_toupper'] = 'NO';
         $this->fieldspec['direction']['validationprocname'] = '';
         $this->fieldspec['direction']['c_size'] = '3';
         $this->fieldspec['direction']['prikey'] = 'Y';
         $this->fieldspec['direction']['noedit'] = 'N';
         $this->fieldspec['direction']['nodisplay'] = 'N';
         $this->fieldspec['direction']['c_unsigned'] = 'N';
         $this->fieldspec['direction']['c_zerofill'] = 'N';
         $this->fieldspec['direction']['c_auto_increment'] = 'N';
         $this->fieldspec['direction']['foreign_table'] = '';
         $this->fieldspec['direction']['foreign_key'] = '';
         $this->fieldspec['direction']['application'] = 'workflow';
         $this->fieldspec['direction']['issearchable'] = '1';
         $this->fieldspec['direction']['preinserttrigger'] = '';
         $this->fieldspec['direction']['postinserttrigger'] = '';
         $this->fieldspec['direction']['preupdatetrigger'] = '';
         $this->fieldspec['direction']['postupdatetrigger'] = '';
         $this->fieldspec['direction']['predeletetrigger'] = '';
         $this->fieldspec['direction']['postdeletetrigger'] = '';
         $this->fieldspec['arc_type']['metadata_id'] = '2637';
         $this->fieldspec['arc_type']['table_name'] = 'statearc';
         $this->fieldspec['arc_type']['column_name'] = 'arc_type';
         $this->fieldspec['arc_type']['pretty_name'] = '';
         $this->fieldspec['arc_type']['abstract_data_type'] = 'varchar';
         $this->fieldspec['arc_type']['db_data_type'] = 'varchar';
         $this->fieldspec['arc_type']['field_null'] = 'YES';
         $this->fieldspec['arc_type']['field_key'] = '';
         $this->fieldspec['arc_type']['extra_sql'] = ' ';
         $this->fieldspec['arc_type']['html_form_type'] = 'text';
         $this->fieldspec['arc_type']['html_form_options'] = '';
         $this->fieldspec['arc_type']['html_form_explanation'] = '';
         $this->fieldspec['arc_type']['help_text'] = '';
         $this->fieldspec['arc_type']['mandatory_p'] = 'N';
         $this->fieldspec['arc_type']['sort_key'] = '0';
         $this->fieldspec['arc_type']['form_sort_key'] = '0';
         $this->fieldspec['arc_type']['form_number'] = '1';
         $this->fieldspec['arc_type']['default_value'] = '';
         $this->fieldspec['arc_type']['field_toupper'] = 'NO';
         $this->fieldspec['arc_type']['validationprocname'] = '';
         $this->fieldspec['arc_type']['c_size'] = '10';
         $this->fieldspec['arc_type']['prikey'] = 'N';
         $this->fieldspec['arc_type']['noedit'] = 'N';
         $this->fieldspec['arc_type']['nodisplay'] = 'N';
         $this->fieldspec['arc_type']['c_unsigned'] = 'N';
         $this->fieldspec['arc_type']['c_zerofill'] = 'N';
         $this->fieldspec['arc_type']['c_auto_increment'] = 'N';
         $this->fieldspec['arc_type']['foreign_table'] = '';
         $this->fieldspec['arc_type']['foreign_key'] = '';
         $this->fieldspec['arc_type']['application'] = 'workflow';
         $this->fieldspec['arc_type']['issearchable'] = '1';
         $this->fieldspec['arc_type']['preinserttrigger'] = '';
         $this->fieldspec['arc_type']['postinserttrigger'] = '';
         $this->fieldspec['arc_type']['preupdatetrigger'] = '';
         $this->fieldspec['arc_type']['postupdatetrigger'] = '';
         $this->fieldspec['arc_type']['predeletetrigger'] = '';
         $this->fieldspec['arc_type']['postdeletetrigger'] = '';
         $this->fieldspec['pre_condition']['metadata_id'] = '2638';
         $this->fieldspec['pre_condition']['table_name'] = 'statearc';
         $this->fieldspec['pre_condition']['column_name'] = 'pre_condition';
         $this->fieldspec['pre_condition']['pretty_name'] = '';
         $this->fieldspec['pre_condition']['abstract_data_type'] = 'text,
';
         $this->fieldspec['pre_condition']['db_data_type'] = 'text,
';
         $this->fieldspec['pre_condition']['field_null'] = 'NO';
         $this->fieldspec['pre_condition']['field_key'] = '';
         $this->fieldspec['pre_condition']['extra_sql'] = ' ';
         $this->fieldspec['pre_condition']['html_form_type'] = 'text';
         $this->fieldspec['pre_condition']['html_form_options'] = '';
         $this->fieldspec['pre_condition']['html_form_explanation'] = '';
         $this->fieldspec['pre_condition']['help_text'] = '';
         $this->fieldspec['pre_condition']['mandatory_p'] = 'N';
         $this->fieldspec['pre_condition']['sort_key'] = '0';
         $this->fieldspec['pre_condition']['form_sort_key'] = '0';
         $this->fieldspec['pre_condition']['form_number'] = '1';
         $this->fieldspec['pre_condition']['default_value'] = '';
         $this->fieldspec['pre_condition']['field_toupper'] = 'NO';
         $this->fieldspec['pre_condition']['validationprocname'] = '';
         $this->fieldspec['pre_condition']['c_size'] = '';
         $this->fieldspec['pre_condition']['prikey'] = 'N';
         $this->fieldspec['pre_condition']['noedit'] = 'N';
         $this->fieldspec['pre_condition']['nodisplay'] = 'N';
         $this->fieldspec['pre_condition']['c_unsigned'] = 'N';
         $this->fieldspec['pre_condition']['c_zerofill'] = 'N';
         $this->fieldspec['pre_condition']['c_auto_increment'] = 'N';
         $this->fieldspec['pre_condition']['foreign_table'] = '';
         $this->fieldspec['pre_condition']['foreign_key'] = '';
         $this->fieldspec['pre_condition']['application'] = 'workflow';
         $this->fieldspec['pre_condition']['issearchable'] = '1';
         $this->fieldspec['pre_condition']['preinserttrigger'] = '';
         $this->fieldspec['pre_condition']['postinserttrigger'] = '';
         $this->fieldspec['pre_condition']['preupdatetrigger'] = '';
         $this->fieldspec['pre_condition']['postupdatetrigger'] = '';
         $this->fieldspec['pre_condition']['predeletetrigger'] = '';
         $this->fieldspec['pre_condition']['postdeletetrigger'] = '';
         $this->fieldspec['created_date']['metadata_id'] = '2639';
         $this->fieldspec['created_date']['table_name'] = 'statearc';
         $this->fieldspec['created_date']['column_name'] = 'created_date';
         $this->fieldspec['created_date']['pretty_name'] = '';
         $this->fieldspec['created_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['created_date']['db_data_type'] = 'datetime';
         $this->fieldspec['created_date']['field_null'] = 'YES';
         $this->fieldspec['created_date']['field_key'] = '';
         $this->fieldspec['created_date']['extra_sql'] = ' ';
         $this->fieldspec['created_date']['html_form_type'] = 'datetime';
         $this->fieldspec['created_date']['html_form_options'] = '';
         $this->fieldspec['created_date']['html_form_explanation'] = '';
         $this->fieldspec['created_date']['help_text'] = '';
         $this->fieldspec['created_date']['mandatory_p'] = 'N';
         $this->fieldspec['created_date']['sort_key'] = '0';
         $this->fieldspec['created_date']['form_sort_key'] = '0';
         $this->fieldspec['created_date']['form_number'] = '1';
         $this->fieldspec['created_date']['default_value'] = '';
         $this->fieldspec['created_date']['field_toupper'] = 'NO';
         $this->fieldspec['created_date']['validationprocname'] = '';
         $this->fieldspec['created_date']['c_size'] = '';
         $this->fieldspec['created_date']['prikey'] = 'N';
         $this->fieldspec['created_date']['noedit'] = 'N';
         $this->fieldspec['created_date']['nodisplay'] = 'N';
         $this->fieldspec['created_date']['c_unsigned'] = 'N';
         $this->fieldspec['created_date']['c_zerofill'] = 'N';
         $this->fieldspec['created_date']['c_auto_increment'] = 'N';
         $this->fieldspec['created_date']['foreign_table'] = '';
         $this->fieldspec['created_date']['foreign_key'] = '';
         $this->fieldspec['created_date']['application'] = 'workflow';
         $this->fieldspec['created_date']['issearchable'] = '1';
         $this->fieldspec['created_date']['preinserttrigger'] = '';
         $this->fieldspec['created_date']['postinserttrigger'] = '';
         $this->fieldspec['created_date']['preupdatetrigger'] = '';
         $this->fieldspec['created_date']['postupdatetrigger'] = '';
         $this->fieldspec['created_date']['predeletetrigger'] = '';
         $this->fieldspec['created_date']['postdeletetrigger'] = '';
         $this->fieldspec['created_user']['metadata_id'] = '2640';
         $this->fieldspec['created_user']['table_name'] = 'statearc';
         $this->fieldspec['created_user']['column_name'] = 'created_user';
         $this->fieldspec['created_user']['pretty_name'] = '';
         $this->fieldspec['created_user']['abstract_data_type'] = 'varchar';
         $this->fieldspec['created_user']['db_data_type'] = 'varchar';
         $this->fieldspec['created_user']['field_null'] = 'NO';
         $this->fieldspec['created_user']['field_key'] = '';
         $this->fieldspec['created_user']['extra_sql'] = ' ';
         $this->fieldspec['created_user']['html_form_type'] = 'text';
         $this->fieldspec['created_user']['html_form_options'] = '';
         $this->fieldspec['created_user']['html_form_explanation'] = '';
         $this->fieldspec['created_user']['help_text'] = '';
         $this->fieldspec['created_user']['mandatory_p'] = 'N';
         $this->fieldspec['created_user']['sort_key'] = '0';
         $this->fieldspec['created_user']['form_sort_key'] = '0';
         $this->fieldspec['created_user']['form_number'] = '1';
         $this->fieldspec['created_user']['default_value'] = '';
         $this->fieldspec['created_user']['field_toupper'] = 'NO';
         $this->fieldspec['created_user']['validationprocname'] = '';
         $this->fieldspec['created_user']['c_size'] = '16';
         $this->fieldspec['created_user']['prikey'] = 'N';
         $this->fieldspec['created_user']['noedit'] = 'N';
         $this->fieldspec['created_user']['nodisplay'] = 'N';
         $this->fieldspec['created_user']['c_unsigned'] = 'N';
         $this->fieldspec['created_user']['c_zerofill'] = 'N';
         $this->fieldspec['created_user']['c_auto_increment'] = 'N';
         $this->fieldspec['created_user']['foreign_table'] = '';
         $this->fieldspec['created_user']['foreign_key'] = '';
         $this->fieldspec['created_user']['application'] = 'workflow';
         $this->fieldspec['created_user']['issearchable'] = '1';
         $this->fieldspec['created_user']['preinserttrigger'] = '';
         $this->fieldspec['created_user']['postinserttrigger'] = '';
         $this->fieldspec['created_user']['preupdatetrigger'] = '';
         $this->fieldspec['created_user']['postupdatetrigger'] = '';
         $this->fieldspec['created_user']['predeletetrigger'] = '';
         $this->fieldspec['created_user']['postdeletetrigger'] = '';
         $this->fieldspec['revised_date']['metadata_id'] = '2641';
         $this->fieldspec['revised_date']['table_name'] = 'statearc';
         $this->fieldspec['revised_date']['column_name'] = 'revised_date';
         $this->fieldspec['revised_date']['pretty_name'] = '';
         $this->fieldspec['revised_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['revised_date']['db_data_type'] = 'datetime';
         $this->fieldspec['revised_date']['field_null'] = 'NO';
         $this->fieldspec['revised_date']['field_key'] = '';
         $this->fieldspec['revised_date']['extra_sql'] = ' ';
         $this->fieldspec['revised_date']['html_form_type'] = 'datetime';
         $this->fieldspec['revised_date']['html_form_options'] = '';
         $this->fieldspec['revised_date']['html_form_explanation'] = '';
         $this->fieldspec['revised_date']['help_text'] = '';
         $this->fieldspec['revised_date']['mandatory_p'] = 'N';
         $this->fieldspec['revised_date']['sort_key'] = '0';
         $this->fieldspec['revised_date']['form_sort_key'] = '0';
         $this->fieldspec['revised_date']['form_number'] = '1';
         $this->fieldspec['revised_date']['default_value'] = '';
         $this->fieldspec['revised_date']['field_toupper'] = 'NO';
         $this->fieldspec['revised_date']['validationprocname'] = '';
         $this->fieldspec['revised_date']['c_size'] = '';
         $this->fieldspec['revised_date']['prikey'] = 'N';
         $this->fieldspec['revised_date']['noedit'] = 'N';
         $this->fieldspec['revised_date']['nodisplay'] = 'N';
         $this->fieldspec['revised_date']['c_unsigned'] = 'N';
         $this->fieldspec['revised_date']['c_zerofill'] = 'N';
         $this->fieldspec['revised_date']['c_auto_increment'] = 'N';
         $this->fieldspec['revised_date']['foreign_table'] = '';
         $this->fieldspec['revised_date']['foreign_key'] = '';
         $this->fieldspec['revised_date']['application'] = 'workflow';
         $this->fieldspec['revised_date']['issearchable'] = '1';
         $this->fieldspec['revised_date']['preinserttrigger'] = '';
         $this->fieldspec['revised_date']['postinserttrigger'] = '';
         $this->fieldspec['revised_date']['preupdatetrigger'] = '';
         $this->fieldspec['revised_date']['postupdatetrigger'] = '';
         $this->fieldspec['revised_date']['predeletetrigger'] = '';
         $this->fieldspec['revised_date']['postdeletetrigger'] = '';
         $this->fieldspec['revised_user']['metadata_id'] = '2642';
         $this->fieldspec['revised_user']['table_name'] = 'statearc';
         $this->fieldspec['revised_user']['column_name'] = 'revised_user';
         $this->fieldspec['revised_user']['pretty_name'] = '';
         $this->fieldspec['revised_user']['abstract_data_type'] = 'varchar';
         $this->fieldspec['revised_user']['db_data_type'] = 'varchar';
         $this->fieldspec['revised_user']['field_null'] = 'NO';
         $this->fieldspec['revised_user']['field_key'] = '';
         $this->fieldspec['revised_user']['extra_sql'] = ' ';
         $this->fieldspec['revised_user']['html_form_type'] = 'text';
         $this->fieldspec['revised_user']['html_form_options'] = '';
         $this->fieldspec['revised_user']['html_form_explanation'] = '';
         $this->fieldspec['revised_user']['help_text'] = '';
         $this->fieldspec['revised_user']['mandatory_p'] = 'N';
         $this->fieldspec['revised_user']['sort_key'] = '0';
         $this->fieldspec['revised_user']['form_sort_key'] = '0';
         $this->fieldspec['revised_user']['form_number'] = '1';
         $this->fieldspec['revised_user']['default_value'] = '';
         $this->fieldspec['revised_user']['field_toupper'] = 'NO';
         $this->fieldspec['revised_user']['validationprocname'] = '';
         $this->fieldspec['revised_user']['c_size'] = '16';
         $this->fieldspec['revised_user']['prikey'] = 'N';
         $this->fieldspec['revised_user']['noedit'] = 'N';
         $this->fieldspec['revised_user']['nodisplay'] = 'N';
         $this->fieldspec['revised_user']['c_unsigned'] = 'N';
         $this->fieldspec['revised_user']['c_zerofill'] = 'N';
         $this->fieldspec['revised_user']['c_auto_increment'] = 'N';
         $this->fieldspec['revised_user']['foreign_table'] = '';
         $this->fieldspec['revised_user']['foreign_key'] = '';
         $this->fieldspec['revised_user']['application'] = 'workflow';
         $this->fieldspec['revised_user']['issearchable'] = '1';
         $this->fieldspec['revised_user']['preinserttrigger'] = '';
         $this->fieldspec['revised_user']['postinserttrigger'] = '';
         $this->fieldspec['revised_user']['preupdatetrigger'] = '';
         $this->fieldspec['revised_user']['postupdatetrigger'] = '';
         $this->fieldspec['revised_user']['predeletetrigger'] = '';
         $this->fieldspec['revised_user']['postdeletetrigger'] = '';
         $this->fieldspec['workflow_id']['metadata_id'] = '2708';
         $this->fieldspec['workflow_id']['table_name'] = 'statearc';
         $this->fieldspec['workflow_id']['column_name'] = 'workflow_id';
         $this->fieldspec['workflow_id']['pretty_name'] = '';
         $this->fieldspec['workflow_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['db_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['field_null'] = 'YES';
         $this->fieldspec['workflow_id']['field_key'] = '';
         $this->fieldspec['workflow_id']['extra_sql'] = ' ';
         $this->fieldspec['workflow_id']['html_form_type'] = 'integer';
         $this->fieldspec['workflow_id']['html_form_options'] = '';
         $this->fieldspec['workflow_id']['html_form_explanation'] = '';
         $this->fieldspec['workflow_id']['help_text'] = '';
         $this->fieldspec['workflow_id']['mandatory_p'] = 'N';
         $this->fieldspec['workflow_id']['sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_number'] = '1';
         $this->fieldspec['workflow_id']['default_value'] = '';
         $this->fieldspec['workflow_id']['field_toupper'] = 'NO';
         $this->fieldspec['workflow_id']['validationprocname'] = '';
         $this->fieldspec['workflow_id']['c_size'] = '5';
         $this->fieldspec['workflow_id']['prikey'] = 'Y';
         $this->fieldspec['workflow_id']['noedit'] = 'N';
         $this->fieldspec['workflow_id']['nodisplay'] = 'N';
         $this->fieldspec['workflow_id']['c_unsigned'] = 'Y';
         $this->fieldspec['workflow_id']['c_zerofill'] = 'N';
         $this->fieldspec['workflow_id']['c_auto_increment'] = 'N';
         $this->fieldspec['workflow_id']['foreign_table'] = '';
         $this->fieldspec['workflow_id']['foreign_key'] = '';
         $this->fieldspec['workflow_id']['application'] = 'workflow';
         $this->fieldspec['workflow_id']['issearchable'] = '1';
         $this->fieldspec['workflow_id']['preinserttrigger'] = '';
         $this->fieldspec['workflow_id']['postinserttrigger'] = '';
         $this->fieldspec['workflow_id']['preupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['postupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['predeletetrigger'] = '';
         $this->fieldspec['workflow_id']['postdeletetrigger'] = '';
         $this->fieldspec['transition_id']['metadata_id'] = '2709';
         $this->fieldspec['transition_id']['table_name'] = 'statearc';
         $this->fieldspec['transition_id']['column_name'] = 'transition_id';
         $this->fieldspec['transition_id']['pretty_name'] = '';
         $this->fieldspec['transition_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['transition_id']['db_data_type'] = 'smallint';
         $this->fieldspec['transition_id']['field_null'] = 'YES';
         $this->fieldspec['transition_id']['field_key'] = '';
         $this->fieldspec['transition_id']['extra_sql'] = ' ';
         $this->fieldspec['transition_id']['html_form_type'] = 'integer';
         $this->fieldspec['transition_id']['html_form_options'] = '';
         $this->fieldspec['transition_id']['html_form_explanation'] = '';
         $this->fieldspec['transition_id']['help_text'] = '';
         $this->fieldspec['transition_id']['mandatory_p'] = 'N';
         $this->fieldspec['transition_id']['sort_key'] = '0';
         $this->fieldspec['transition_id']['form_sort_key'] = '0';
         $this->fieldspec['transition_id']['form_number'] = '1';
         $this->fieldspec['transition_id']['default_value'] = '';
         $this->fieldspec['transition_id']['field_toupper'] = 'NO';
         $this->fieldspec['transition_id']['validationprocname'] = '';
         $this->fieldspec['transition_id']['c_size'] = '5';
         $this->fieldspec['transition_id']['prikey'] = 'Y';
         $this->fieldspec['transition_id']['noedit'] = 'N';
         $this->fieldspec['transition_id']['nodisplay'] = 'N';
         $this->fieldspec['transition_id']['c_unsigned'] = 'Y';
         $this->fieldspec['transition_id']['c_zerofill'] = 'N';
         $this->fieldspec['transition_id']['c_auto_increment'] = 'N';
         $this->fieldspec['transition_id']['foreign_table'] = '';
         $this->fieldspec['transition_id']['foreign_key'] = '';
         $this->fieldspec['transition_id']['application'] = 'workflow';
         $this->fieldspec['transition_id']['issearchable'] = '1';
         $this->fieldspec['transition_id']['preinserttrigger'] = '';
         $this->fieldspec['transition_id']['postinserttrigger'] = '';
         $this->fieldspec['transition_id']['preupdatetrigger'] = '';
         $this->fieldspec['transition_id']['postupdatetrigger'] = '';
         $this->fieldspec['transition_id']['predeletetrigger'] = '';
         $this->fieldspec['transition_id']['postdeletetrigger'] = '';
         $this->fieldspec['place_id']['metadata_id'] = '2710';
         $this->fieldspec['place_id']['table_name'] = 'statearc';
         $this->fieldspec['place_id']['column_name'] = 'place_id';
         $this->fieldspec['place_id']['pretty_name'] = '';
         $this->fieldspec['place_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['place_id']['db_data_type'] = 'smallint';
         $this->fieldspec['place_id']['field_null'] = 'YES';
         $this->fieldspec['place_id']['field_key'] = '';
         $this->fieldspec['place_id']['extra_sql'] = ' ';
         $this->fieldspec['place_id']['html_form_type'] = 'integer';
         $this->fieldspec['place_id']['html_form_options'] = '';
         $this->fieldspec['place_id']['html_form_explanation'] = '';
         $this->fieldspec['place_id']['help_text'] = '';
         $this->fieldspec['place_id']['mandatory_p'] = 'N';
         $this->fieldspec['place_id']['sort_key'] = '0';
         $this->fieldspec['place_id']['form_sort_key'] = '0';
         $this->fieldspec['place_id']['form_number'] = '1';
         $this->fieldspec['place_id']['default_value'] = '';
         $this->fieldspec['place_id']['field_toupper'] = 'NO';
         $this->fieldspec['place_id']['validationprocname'] = '';
         $this->fieldspec['place_id']['c_size'] = '5';
         $this->fieldspec['place_id']['prikey'] = 'Y';
         $this->fieldspec['place_id']['noedit'] = 'N';
         $this->fieldspec['place_id']['nodisplay'] = 'N';
         $this->fieldspec['place_id']['c_unsigned'] = 'Y';
         $this->fieldspec['place_id']['c_zerofill'] = 'N';
         $this->fieldspec['place_id']['c_auto_increment'] = 'N';
         $this->fieldspec['place_id']['foreign_table'] = '';
         $this->fieldspec['place_id']['foreign_key'] = '';
         $this->fieldspec['place_id']['application'] = 'workflow';
         $this->fieldspec['place_id']['issearchable'] = '1';
         $this->fieldspec['place_id']['preinserttrigger'] = '';
         $this->fieldspec['place_id']['postinserttrigger'] = '';
         $this->fieldspec['place_id']['preupdatetrigger'] = '';
         $this->fieldspec['place_id']['postupdatetrigger'] = '';
         $this->fieldspec['place_id']['predeletetrigger'] = '';
         $this->fieldspec['place_id']['postdeletetrigger'] = '';
         $this->fieldspec['direction']['metadata_id'] = '2711';
         $this->fieldspec['direction']['table_name'] = 'statearc';
         $this->fieldspec['direction']['column_name'] = 'direction';
         $this->fieldspec['direction']['pretty_name'] = '';
         $this->fieldspec['direction']['abstract_data_type'] = 'char';
         $this->fieldspec['direction']['db_data_type'] = 'char';
         $this->fieldspec['direction']['field_null'] = 'YES';
         $this->fieldspec['direction']['field_key'] = '';
         $this->fieldspec['direction']['extra_sql'] = ' ';
         $this->fieldspec['direction']['html_form_type'] = 'text';
         $this->fieldspec['direction']['html_form_options'] = '';
         $this->fieldspec['direction']['html_form_explanation'] = '';
         $this->fieldspec['direction']['help_text'] = '';
         $this->fieldspec['direction']['mandatory_p'] = 'N';
         $this->fieldspec['direction']['sort_key'] = '0';
         $this->fieldspec['direction']['form_sort_key'] = '0';
         $this->fieldspec['direction']['form_number'] = '1';
         $this->fieldspec['direction']['default_value'] = '';
         $this->fieldspec['direction']['field_toupper'] = 'NO';
         $this->fieldspec['direction']['validationprocname'] = '';
         $this->fieldspec['direction']['c_size'] = '3';
         $this->fieldspec['direction']['prikey'] = 'Y';
         $this->fieldspec['direction']['noedit'] = 'N';
         $this->fieldspec['direction']['nodisplay'] = 'N';
         $this->fieldspec['direction']['c_unsigned'] = 'N';
         $this->fieldspec['direction']['c_zerofill'] = 'N';
         $this->fieldspec['direction']['c_auto_increment'] = 'N';
         $this->fieldspec['direction']['foreign_table'] = '';
         $this->fieldspec['direction']['foreign_key'] = '';
         $this->fieldspec['direction']['application'] = 'workflow';
         $this->fieldspec['direction']['issearchable'] = '1';
         $this->fieldspec['direction']['preinserttrigger'] = '';
         $this->fieldspec['direction']['postinserttrigger'] = '';
         $this->fieldspec['direction']['preupdatetrigger'] = '';
         $this->fieldspec['direction']['postupdatetrigger'] = '';
         $this->fieldspec['direction']['predeletetrigger'] = '';
         $this->fieldspec['direction']['postdeletetrigger'] = '';
         $this->fieldspec['arc_type']['metadata_id'] = '2712';
         $this->fieldspec['arc_type']['table_name'] = 'statearc';
         $this->fieldspec['arc_type']['column_name'] = 'arc_type';
         $this->fieldspec['arc_type']['pretty_name'] = '';
         $this->fieldspec['arc_type']['abstract_data_type'] = 'varchar';
         $this->fieldspec['arc_type']['db_data_type'] = 'varchar';
         $this->fieldspec['arc_type']['field_null'] = 'YES';
         $this->fieldspec['arc_type']['field_key'] = '';
         $this->fieldspec['arc_type']['extra_sql'] = ' ';
         $this->fieldspec['arc_type']['html_form_type'] = 'text';
         $this->fieldspec['arc_type']['html_form_options'] = '';
         $this->fieldspec['arc_type']['html_form_explanation'] = '';
         $this->fieldspec['arc_type']['help_text'] = '';
         $this->fieldspec['arc_type']['mandatory_p'] = 'N';
         $this->fieldspec['arc_type']['sort_key'] = '0';
         $this->fieldspec['arc_type']['form_sort_key'] = '0';
         $this->fieldspec['arc_type']['form_number'] = '1';
         $this->fieldspec['arc_type']['default_value'] = '';
         $this->fieldspec['arc_type']['field_toupper'] = 'NO';
         $this->fieldspec['arc_type']['validationprocname'] = '';
         $this->fieldspec['arc_type']['c_size'] = '10';
         $this->fieldspec['arc_type']['prikey'] = 'N';
         $this->fieldspec['arc_type']['noedit'] = 'N';
         $this->fieldspec['arc_type']['nodisplay'] = 'N';
         $this->fieldspec['arc_type']['c_unsigned'] = 'N';
         $this->fieldspec['arc_type']['c_zerofill'] = 'N';
         $this->fieldspec['arc_type']['c_auto_increment'] = 'N';
         $this->fieldspec['arc_type']['foreign_table'] = '';
         $this->fieldspec['arc_type']['foreign_key'] = '';
         $this->fieldspec['arc_type']['application'] = 'workflow';
         $this->fieldspec['arc_type']['issearchable'] = '1';
         $this->fieldspec['arc_type']['preinserttrigger'] = '';
         $this->fieldspec['arc_type']['postinserttrigger'] = '';
         $this->fieldspec['arc_type']['preupdatetrigger'] = '';
         $this->fieldspec['arc_type']['postupdatetrigger'] = '';
         $this->fieldspec['arc_type']['predeletetrigger'] = '';
         $this->fieldspec['arc_type']['postdeletetrigger'] = '';
         $this->fieldspec['pre_condition']['metadata_id'] = '2713';
         $this->fieldspec['pre_condition']['table_name'] = 'statearc';
         $this->fieldspec['pre_condition']['column_name'] = 'pre_condition';
         $this->fieldspec['pre_condition']['pretty_name'] = '';
         $this->fieldspec['pre_condition']['abstract_data_type'] = 'text,
';
         $this->fieldspec['pre_condition']['db_data_type'] = 'text,
';
         $this->fieldspec['pre_condition']['field_null'] = 'NO';
         $this->fieldspec['pre_condition']['field_key'] = '';
         $this->fieldspec['pre_condition']['extra_sql'] = ' ';
         $this->fieldspec['pre_condition']['html_form_type'] = 'text';
         $this->fieldspec['pre_condition']['html_form_options'] = '';
         $this->fieldspec['pre_condition']['html_form_explanation'] = '';
         $this->fieldspec['pre_condition']['help_text'] = '';
         $this->fieldspec['pre_condition']['mandatory_p'] = 'N';
         $this->fieldspec['pre_condition']['sort_key'] = '0';
         $this->fieldspec['pre_condition']['form_sort_key'] = '0';
         $this->fieldspec['pre_condition']['form_number'] = '1';
         $this->fieldspec['pre_condition']['default_value'] = '';
         $this->fieldspec['pre_condition']['field_toupper'] = 'NO';
         $this->fieldspec['pre_condition']['validationprocname'] = '';
         $this->fieldspec['pre_condition']['c_size'] = '';
         $this->fieldspec['pre_condition']['prikey'] = 'N';
         $this->fieldspec['pre_condition']['noedit'] = 'N';
         $this->fieldspec['pre_condition']['nodisplay'] = 'N';
         $this->fieldspec['pre_condition']['c_unsigned'] = 'N';
         $this->fieldspec['pre_condition']['c_zerofill'] = 'N';
         $this->fieldspec['pre_condition']['c_auto_increment'] = 'N';
         $this->fieldspec['pre_condition']['foreign_table'] = '';
         $this->fieldspec['pre_condition']['foreign_key'] = '';
         $this->fieldspec['pre_condition']['application'] = 'workflow';
         $this->fieldspec['pre_condition']['issearchable'] = '1';
         $this->fieldspec['pre_condition']['preinserttrigger'] = '';
         $this->fieldspec['pre_condition']['postinserttrigger'] = '';
         $this->fieldspec['pre_condition']['preupdatetrigger'] = '';
         $this->fieldspec['pre_condition']['postupdatetrigger'] = '';
         $this->fieldspec['pre_condition']['predeletetrigger'] = '';
         $this->fieldspec['pre_condition']['postdeletetrigger'] = '';
         $this->fieldspec['created_date']['metadata_id'] = '2714';
         $this->fieldspec['created_date']['table_name'] = 'statearc';
         $this->fieldspec['created_date']['column_name'] = 'created_date';
         $this->fieldspec['created_date']['pretty_name'] = '';
         $this->fieldspec['created_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['created_date']['db_data_type'] = 'datetime';
         $this->fieldspec['created_date']['field_null'] = 'YES';
         $this->fieldspec['created_date']['field_key'] = '';
         $this->fieldspec['created_date']['extra_sql'] = ' ';
         $this->fieldspec['created_date']['html_form_type'] = 'datetime';
         $this->fieldspec['created_date']['html_form_options'] = '';
         $this->fieldspec['created_date']['html_form_explanation'] = '';
         $this->fieldspec['created_date']['help_text'] = '';
         $this->fieldspec['created_date']['mandatory_p'] = 'N';
         $this->fieldspec['created_date']['sort_key'] = '0';
         $this->fieldspec['created_date']['form_sort_key'] = '0';
         $this->fieldspec['created_date']['form_number'] = '1';
         $this->fieldspec['created_date']['default_value'] = '';
         $this->fieldspec['created_date']['field_toupper'] = 'NO';
         $this->fieldspec['created_date']['validationprocname'] = '';
         $this->fieldspec['created_date']['c_size'] = '';
         $this->fieldspec['created_date']['prikey'] = 'N';
         $this->fieldspec['created_date']['noedit'] = 'N';
         $this->fieldspec['created_date']['nodisplay'] = 'N';
         $this->fieldspec['created_date']['c_unsigned'] = 'N';
         $this->fieldspec['created_date']['c_zerofill'] = 'N';
         $this->fieldspec['created_date']['c_auto_increment'] = 'N';
         $this->fieldspec['created_date']['foreign_table'] = '';
         $this->fieldspec['created_date']['foreign_key'] = '';
         $this->fieldspec['created_date']['application'] = 'workflow';
         $this->fieldspec['created_date']['issearchable'] = '1';
         $this->fieldspec['created_date']['preinserttrigger'] = '';
         $this->fieldspec['created_date']['postinserttrigger'] = '';
         $this->fieldspec['created_date']['preupdatetrigger'] = '';
         $this->fieldspec['created_date']['postupdatetrigger'] = '';
         $this->fieldspec['created_date']['predeletetrigger'] = '';
         $this->fieldspec['created_date']['postdeletetrigger'] = '';
         $this->fieldspec['created_user']['metadata_id'] = '2715';
         $this->fieldspec['created_user']['table_name'] = 'statearc';
         $this->fieldspec['created_user']['column_name'] = 'created_user';
         $this->fieldspec['created_user']['pretty_name'] = '';
         $this->fieldspec['created_user']['abstract_data_type'] = 'varchar';
         $this->fieldspec['created_user']['db_data_type'] = 'varchar';
         $this->fieldspec['created_user']['field_null'] = 'NO';
         $this->fieldspec['created_user']['field_key'] = '';
         $this->fieldspec['created_user']['extra_sql'] = ' ';
         $this->fieldspec['created_user']['html_form_type'] = 'text';
         $this->fieldspec['created_user']['html_form_options'] = '';
         $this->fieldspec['created_user']['html_form_explanation'] = '';
         $this->fieldspec['created_user']['help_text'] = '';
         $this->fieldspec['created_user']['mandatory_p'] = 'N';
         $this->fieldspec['created_user']['sort_key'] = '0';
         $this->fieldspec['created_user']['form_sort_key'] = '0';
         $this->fieldspec['created_user']['form_number'] = '1';
         $this->fieldspec['created_user']['default_value'] = '';
         $this->fieldspec['created_user']['field_toupper'] = 'NO';
         $this->fieldspec['created_user']['validationprocname'] = '';
         $this->fieldspec['created_user']['c_size'] = '16';
         $this->fieldspec['created_user']['prikey'] = 'N';
         $this->fieldspec['created_user']['noedit'] = 'N';
         $this->fieldspec['created_user']['nodisplay'] = 'N';
         $this->fieldspec['created_user']['c_unsigned'] = 'N';
         $this->fieldspec['created_user']['c_zerofill'] = 'N';
         $this->fieldspec['created_user']['c_auto_increment'] = 'N';
         $this->fieldspec['created_user']['foreign_table'] = '';
         $this->fieldspec['created_user']['foreign_key'] = '';
         $this->fieldspec['created_user']['application'] = 'workflow';
         $this->fieldspec['created_user']['issearchable'] = '1';
         $this->fieldspec['created_user']['preinserttrigger'] = '';
         $this->fieldspec['created_user']['postinserttrigger'] = '';
         $this->fieldspec['created_user']['preupdatetrigger'] = '';
         $this->fieldspec['created_user']['postupdatetrigger'] = '';
         $this->fieldspec['created_user']['predeletetrigger'] = '';
         $this->fieldspec['created_user']['postdeletetrigger'] = '';
         $this->fieldspec['revised_date']['metadata_id'] = '2716';
         $this->fieldspec['revised_date']['table_name'] = 'statearc';
         $this->fieldspec['revised_date']['column_name'] = 'revised_date';
         $this->fieldspec['revised_date']['pretty_name'] = '';
         $this->fieldspec['revised_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['revised_date']['db_data_type'] = 'datetime';
         $this->fieldspec['revised_date']['field_null'] = 'NO';
         $this->fieldspec['revised_date']['field_key'] = '';
         $this->fieldspec['revised_date']['extra_sql'] = ' ';
         $this->fieldspec['revised_date']['html_form_type'] = 'datetime';
         $this->fieldspec['revised_date']['html_form_options'] = '';
         $this->fieldspec['revised_date']['html_form_explanation'] = '';
         $this->fieldspec['revised_date']['help_text'] = '';
         $this->fieldspec['revised_date']['mandatory_p'] = 'N';
         $this->fieldspec['revised_date']['sort_key'] = '0';
         $this->fieldspec['revised_date']['form_sort_key'] = '0';
         $this->fieldspec['revised_date']['form_number'] = '1';
         $this->fieldspec['revised_date']['default_value'] = '';
         $this->fieldspec['revised_date']['field_toupper'] = 'NO';
         $this->fieldspec['revised_date']['validationprocname'] = '';
         $this->fieldspec['revised_date']['c_size'] = '';
         $this->fieldspec['revised_date']['prikey'] = 'N';
         $this->fieldspec['revised_date']['noedit'] = 'N';
         $this->fieldspec['revised_date']['nodisplay'] = 'N';
         $this->fieldspec['revised_date']['c_unsigned'] = 'N';
         $this->fieldspec['revised_date']['c_zerofill'] = 'N';
         $this->fieldspec['revised_date']['c_auto_increment'] = 'N';
         $this->fieldspec['revised_date']['foreign_table'] = '';
         $this->fieldspec['revised_date']['foreign_key'] = '';
         $this->fieldspec['revised_date']['application'] = 'workflow';
         $this->fieldspec['revised_date']['issearchable'] = '1';
         $this->fieldspec['revised_date']['preinserttrigger'] = '';
         $this->fieldspec['revised_date']['postinserttrigger'] = '';
         $this->fieldspec['revised_date']['preupdatetrigger'] = '';
         $this->fieldspec['revised_date']['postupdatetrigger'] = '';
         $this->fieldspec['revised_date']['predeletetrigger'] = '';
         $this->fieldspec['revised_date']['postdeletetrigger'] = '';
         $this->fieldspec['revised_user']['metadata_id'] = '2717';
         $this->fieldspec['revised_user']['table_name'] = 'statearc';
         $this->fieldspec['revised_user']['column_name'] = 'revised_user';
         $this->fieldspec['revised_user']['pretty_name'] = '';
         $this->fieldspec['revised_user']['abstract_data_type'] = 'varchar';
         $this->fieldspec['revised_user']['db_data_type'] = 'varchar';
         $this->fieldspec['revised_user']['field_null'] = 'NO';
         $this->fieldspec['revised_user']['field_key'] = '';
         $this->fieldspec['revised_user']['extra_sql'] = ' ';
         $this->fieldspec['revised_user']['html_form_type'] = 'text';
         $this->fieldspec['revised_user']['html_form_options'] = '';
         $this->fieldspec['revised_user']['html_form_explanation'] = '';
         $this->fieldspec['revised_user']['help_text'] = '';
         $this->fieldspec['revised_user']['mandatory_p'] = 'N';
         $this->fieldspec['revised_user']['sort_key'] = '0';
         $this->fieldspec['revised_user']['form_sort_key'] = '0';
         $this->fieldspec['revised_user']['form_number'] = '1';
         $this->fieldspec['revised_user']['default_value'] = '';
         $this->fieldspec['revised_user']['field_toupper'] = 'NO';
         $this->fieldspec['revised_user']['validationprocname'] = '';
         $this->fieldspec['revised_user']['c_size'] = '16';
         $this->fieldspec['revised_user']['prikey'] = 'N';
         $this->fieldspec['revised_user']['noedit'] = 'N';
         $this->fieldspec['revised_user']['nodisplay'] = 'N';
         $this->fieldspec['revised_user']['c_unsigned'] = 'N';
         $this->fieldspec['revised_user']['c_zerofill'] = 'N';
         $this->fieldspec['revised_user']['c_auto_increment'] = 'N';
         $this->fieldspec['revised_user']['foreign_table'] = '';
         $this->fieldspec['revised_user']['foreign_key'] = '';
         $this->fieldspec['revised_user']['application'] = 'workflow';
         $this->fieldspec['revised_user']['issearchable'] = '1';
         $this->fieldspec['revised_user']['preinserttrigger'] = '';
         $this->fieldspec['revised_user']['postinserttrigger'] = '';
         $this->fieldspec['revised_user']['preupdatetrigger'] = '';
         $this->fieldspec['revised_user']['postupdatetrigger'] = '';
         $this->fieldspec['revised_user']['predeletetrigger'] = '';
         $this->fieldspec['revised_user']['postdeletetrigger'] = '';
         $this->fieldlist = array('workflow_id', 'transition_id', 'place_id', 'direction', 'arc_type', 'pre_condition', 'created_date', 'created_user', 'revised_date', 'revised_user', 'workflow_id', 'transition_id', 'place_id', 'direction', 'arc_type', 'pre_condition', 'created_date', 'created_user', 'revised_date', 'revised_user');
         $this->searchlist = array('workflow_id', 'transition_id', 'place_id', 'direction', 'arc_type', 'pre_condition', 'created_date', 'created_user', 'revised_date', 'revised_user', 'workflow_id', 'transition_id', 'place_id', 'direction', 'arc_type', 'pre_condition', 'created_date', 'created_user', 'revised_date', 'revised_user', );
	         return SUCCESS;
         }
         function statearc()
         { //For older php which doesn't have constructor
              return $this->__constructor();
         }
         function Push()
         {
	         $_SESSION['statearc'] = serialize($this);
	         return SUCCESS;
         }
         function Pop()
         {
                 //Can't do this in self - this is how to do it outside
	       //  $this = unserialize($_SESSION['statearc']);
	         return SUCCESS;
         }
         function ObserverRegister( $observer, $event )
         {
                 $this->observers[$event][] = $observer;
	         return SUCCESS;
         }
         function ObserverDeRegister( $observer )
         {
                 $this->observers[] = array_diff( $this->observers, array( $observer) );
	         return SUCCESS;
         }
         function ObserverNotify( $event, $msg )
         {
                 if ( isset( $this->observers[$event] ) )
                 	foreach ( $this->observers[$event] as $obs ) 
                 	{
                      		$obs->notify( $event, $msg );
                 	}
                 /* '**' being used as 'ALL' */
                 if ( isset( $this->observers['**'] ) )
                 	foreach ( $this->observers['**'] as $obs ) 
                 	{
                      		$obs->notify( $event, $msg );
                 	}
	         return SUCCESS;
         }
         function notify( $object )
         {
                 //Called when another object we are observing sends us a notification
	         return SUCCESS;
         }
         function Preworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Postworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Preworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Postworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Preworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Postworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Setworkflow_id($value)
         {
                 $this->workflow_id = $value;
	          return SUCCESS;
         }
         function Getworkflow_id()
         {
                    return $this->workflow_id;
         }
         function Pretransition_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idInsert ) )
	            return Pretransition_idInsert( $this );
                 else return;
         }
         function Posttransition_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idInsert ) )
	            return Pretransition_idInsert( $this );
                 else return;
         }
         function Pretransition_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idUpdate ) )
	            return Pretransition_idUpdate( $this );
                 else return;
         }
         function Posttransition_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idUpdate ) )
	            return Pretransition_idUpdate( $this );
                 else return;
         }
         function Pretransition_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idDelete ) )
	            return Pretransition_idDelete( $this );
                 else return;
         }
         function Posttransition_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idDelete ) )
	            return Pretransition_idDelete( $this );
                 else return;
         }
         function Settransition_id($value)
         {
                 $this->transition_id = $value;
	          return SUCCESS;
         }
         function Gettransition_id()
         {
                    return $this->transition_id;
         }
         function Preplace_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preplace_idInsert ) )
	            return Preplace_idInsert( $this );
                 else return;
         }
         function Postplace_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preplace_idInsert ) )
	            return Preplace_idInsert( $this );
                 else return;
         }
         function Preplace_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preplace_idUpdate ) )
	            return Preplace_idUpdate( $this );
                 else return;
         }
         function Postplace_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preplace_idUpdate ) )
	            return Preplace_idUpdate( $this );
                 else return;
         }
         function Preplace_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preplace_idDelete ) )
	            return Preplace_idDelete( $this );
                 else return;
         }
         function Postplace_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preplace_idDelete ) )
	            return Preplace_idDelete( $this );
                 else return;
         }
         function Setplace_id($value)
         {
                 $this->place_id = $value;
	          return SUCCESS;
         }
         function Getplace_id()
         {
                    return $this->place_id;
         }
         function PredirectionInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredirectionInsert ) )
	            return PredirectionInsert( $this );
                 else return;
         }
         function PostdirectionInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredirectionInsert ) )
	            return PredirectionInsert( $this );
                 else return;
         }
         function PredirectionUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredirectionUpdate ) )
	            return PredirectionUpdate( $this );
                 else return;
         }
         function PostdirectionUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredirectionUpdate ) )
	            return PredirectionUpdate( $this );
                 else return;
         }
         function PredirectionDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredirectionDelete ) )
	            return PredirectionDelete( $this );
                 else return;
         }
         function PostdirectionDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredirectionDelete ) )
	            return PredirectionDelete( $this );
                 else return;
         }
         function Setdirection($value)
         {
                 $this->direction = $value;
	          return SUCCESS;
         }
         function Getdirection()
         {
                    return $this->direction;
         }
         function Prearc_typeInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prearc_typeInsert ) )
	            return Prearc_typeInsert( $this );
                 else return;
         }
         function Postarc_typeInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prearc_typeInsert ) )
	            return Prearc_typeInsert( $this );
                 else return;
         }
         function Prearc_typeUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prearc_typeUpdate ) )
	            return Prearc_typeUpdate( $this );
                 else return;
         }
         function Postarc_typeUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prearc_typeUpdate ) )
	            return Prearc_typeUpdate( $this );
                 else return;
         }
         function Prearc_typeDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prearc_typeDelete ) )
	            return Prearc_typeDelete( $this );
                 else return;
         }
         function Postarc_typeDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prearc_typeDelete ) )
	            return Prearc_typeDelete( $this );
                 else return;
         }
         function Setarc_type($value)
         {
                 $this->arc_type = $value;
	          return SUCCESS;
         }
         function Getarc_type()
         {
                    return $this->arc_type;
         }
         function Prepre_conditionInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prepre_conditionInsert ) )
	            return Prepre_conditionInsert( $this );
                 else return;
         }
         function Postpre_conditionInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prepre_conditionInsert ) )
	            return Prepre_conditionInsert( $this );
                 else return;
         }
         function Prepre_conditionUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prepre_conditionUpdate ) )
	            return Prepre_conditionUpdate( $this );
                 else return;
         }
         function Postpre_conditionUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prepre_conditionUpdate ) )
	            return Prepre_conditionUpdate( $this );
                 else return;
         }
         function Prepre_conditionDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prepre_conditionDelete ) )
	            return Prepre_conditionDelete( $this );
                 else return;
         }
         function Postpre_conditionDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prepre_conditionDelete ) )
	            return Prepre_conditionDelete( $this );
                 else return;
         }
         function Setpre_condition($value)
         {
                 $this->pre_condition = $value;
	          return SUCCESS;
         }
         function Getpre_condition()
         {
                    return $this->pre_condition;
         }
         function Precreated_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateInsert ) )
	            return Precreated_dateInsert( $this );
                 else return;
         }
         function Postcreated_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateInsert ) )
	            return Precreated_dateInsert( $this );
                 else return;
         }
         function Precreated_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateUpdate ) )
	            return Precreated_dateUpdate( $this );
                 else return;
         }
         function Postcreated_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateUpdate ) )
	            return Precreated_dateUpdate( $this );
                 else return;
         }
         function Precreated_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateDelete ) )
	            return Precreated_dateDelete( $this );
                 else return;
         }
         function Postcreated_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateDelete ) )
	            return Precreated_dateDelete( $this );
                 else return;
         }
         function Setcreated_date($value)
         {
                 $this->created_date = $value;
	          return SUCCESS;
         }
         function Getcreated_date()
         {
                    return $this->created_date;
         }
         function Precreated_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userInsert ) )
	            return Precreated_userInsert( $this );
                 else return;
         }
         function Postcreated_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userInsert ) )
	            return Precreated_userInsert( $this );
                 else return;
         }
         function Precreated_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userUpdate ) )
	            return Precreated_userUpdate( $this );
                 else return;
         }
         function Postcreated_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userUpdate ) )
	            return Precreated_userUpdate( $this );
                 else return;
         }
         function Precreated_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userDelete ) )
	            return Precreated_userDelete( $this );
                 else return;
         }
         function Postcreated_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userDelete ) )
	            return Precreated_userDelete( $this );
                 else return;
         }
         function Setcreated_user($value)
         {
                 $this->created_user = $value;
	          return SUCCESS;
         }
         function Getcreated_user()
         {
                    return $this->created_user;
         }
         function Prerevised_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateInsert ) )
	            return Prerevised_dateInsert( $this );
                 else return;
         }
         function Postrevised_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateInsert ) )
	            return Prerevised_dateInsert( $this );
                 else return;
         }
         function Prerevised_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateUpdate ) )
	            return Prerevised_dateUpdate( $this );
                 else return;
         }
         function Postrevised_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateUpdate ) )
	            return Prerevised_dateUpdate( $this );
                 else return;
         }
         function Prerevised_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateDelete ) )
	            return Prerevised_dateDelete( $this );
                 else return;
         }
         function Postrevised_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateDelete ) )
	            return Prerevised_dateDelete( $this );
                 else return;
         }
         function Setrevised_date($value)
         {
                 $this->revised_date = $value;
	          return SUCCESS;
         }
         function Getrevised_date()
         {
                    return $this->revised_date;
         }
         function Prerevised_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userInsert ) )
	            return Prerevised_userInsert( $this );
                 else return;
         }
         function Postrevised_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userInsert ) )
	            return Prerevised_userInsert( $this );
                 else return;
         }
         function Prerevised_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userUpdate ) )
	            return Prerevised_userUpdate( $this );
                 else return;
         }
         function Postrevised_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userUpdate ) )
	            return Prerevised_userUpdate( $this );
                 else return;
         }
         function Prerevised_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userDelete ) )
	            return Prerevised_userDelete( $this );
                 else return;
         }
         function Postrevised_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userDelete ) )
	            return Prerevised_userDelete( $this );
                 else return;
         }
         function Setrevised_user($value)
         {
                 $this->revised_user = $value;
	          return SUCCESS;
         }
         function Getrevised_user()
         {
                    return $this->revised_user;
         }
         function Preworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Postworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Preworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Postworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Preworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Postworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Setworkflow_id($value)
         {
                 $this->workflow_id = $value;
	          return SUCCESS;
         }
         function Getworkflow_id()
         {
                    return $this->workflow_id;
         }
         function Pretransition_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idInsert ) )
	            return Pretransition_idInsert( $this );
                 else return;
         }
         function Posttransition_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idInsert ) )
	            return Pretransition_idInsert( $this );
                 else return;
         }
         function Pretransition_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idUpdate ) )
	            return Pretransition_idUpdate( $this );
                 else return;
         }
         function Posttransition_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idUpdate ) )
	            return Pretransition_idUpdate( $this );
                 else return;
         }
         function Pretransition_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idDelete ) )
	            return Pretransition_idDelete( $this );
                 else return;
         }
         function Posttransition_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idDelete ) )
	            return Pretransition_idDelete( $this );
                 else return;
         }
         function Settransition_id($value)
         {
                 $this->transition_id = $value;
	          return SUCCESS;
         }
         function Gettransition_id()
         {
                    return $this->transition_id;
         }
         function Preplace_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preplace_idInsert ) )
	            return Preplace_idInsert( $this );
                 else return;
         }
         function Postplace_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preplace_idInsert ) )
	            return Preplace_idInsert( $this );
                 else return;
         }
         function Preplace_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preplace_idUpdate ) )
	            return Preplace_idUpdate( $this );
                 else return;
         }
         function Postplace_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preplace_idUpdate ) )
	            return Preplace_idUpdate( $this );
                 else return;
         }
         function Preplace_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preplace_idDelete ) )
	            return Preplace_idDelete( $this );
                 else return;
         }
         function Postplace_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preplace_idDelete ) )
	            return Preplace_idDelete( $this );
                 else return;
         }
         function Setplace_id($value)
         {
                 $this->place_id = $value;
	          return SUCCESS;
         }
         function Getplace_id()
         {
                    return $this->place_id;
         }
         function PredirectionInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredirectionInsert ) )
	            return PredirectionInsert( $this );
                 else return;
         }
         function PostdirectionInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredirectionInsert ) )
	            return PredirectionInsert( $this );
                 else return;
         }
         function PredirectionUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredirectionUpdate ) )
	            return PredirectionUpdate( $this );
                 else return;
         }
         function PostdirectionUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredirectionUpdate ) )
	            return PredirectionUpdate( $this );
                 else return;
         }
         function PredirectionDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredirectionDelete ) )
	            return PredirectionDelete( $this );
                 else return;
         }
         function PostdirectionDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( PredirectionDelete ) )
	            return PredirectionDelete( $this );
                 else return;
         }
         function Setdirection($value)
         {
                 $this->direction = $value;
	          return SUCCESS;
         }
         function Getdirection()
         {
                    return $this->direction;
         }
         function Prearc_typeInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prearc_typeInsert ) )
	            return Prearc_typeInsert( $this );
                 else return;
         }
         function Postarc_typeInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prearc_typeInsert ) )
	            return Prearc_typeInsert( $this );
                 else return;
         }
         function Prearc_typeUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prearc_typeUpdate ) )
	            return Prearc_typeUpdate( $this );
                 else return;
         }
         function Postarc_typeUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prearc_typeUpdate ) )
	            return Prearc_typeUpdate( $this );
                 else return;
         }
         function Prearc_typeDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prearc_typeDelete ) )
	            return Prearc_typeDelete( $this );
                 else return;
         }
         function Postarc_typeDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prearc_typeDelete ) )
	            return Prearc_typeDelete( $this );
                 else return;
         }
         function Setarc_type($value)
         {
                 $this->arc_type = $value;
	          return SUCCESS;
         }
         function Getarc_type()
         {
                    return $this->arc_type;
         }
         function Prepre_conditionInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prepre_conditionInsert ) )
	            return Prepre_conditionInsert( $this );
                 else return;
         }
         function Postpre_conditionInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prepre_conditionInsert ) )
	            return Prepre_conditionInsert( $this );
                 else return;
         }
         function Prepre_conditionUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prepre_conditionUpdate ) )
	            return Prepre_conditionUpdate( $this );
                 else return;
         }
         function Postpre_conditionUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prepre_conditionUpdate ) )
	            return Prepre_conditionUpdate( $this );
                 else return;
         }
         function Prepre_conditionDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prepre_conditionDelete ) )
	            return Prepre_conditionDelete( $this );
                 else return;
         }
         function Postpre_conditionDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prepre_conditionDelete ) )
	            return Prepre_conditionDelete( $this );
                 else return;
         }
         function Setpre_condition($value)
         {
                 $this->pre_condition = $value;
	          return SUCCESS;
         }
         function Getpre_condition()
         {
                    return $this->pre_condition;
         }
         function Precreated_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateInsert ) )
	            return Precreated_dateInsert( $this );
                 else return;
         }
         function Postcreated_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateInsert ) )
	            return Precreated_dateInsert( $this );
                 else return;
         }
         function Precreated_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateUpdate ) )
	            return Precreated_dateUpdate( $this );
                 else return;
         }
         function Postcreated_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateUpdate ) )
	            return Precreated_dateUpdate( $this );
                 else return;
         }
         function Precreated_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateDelete ) )
	            return Precreated_dateDelete( $this );
                 else return;
         }
         function Postcreated_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateDelete ) )
	            return Precreated_dateDelete( $this );
                 else return;
         }
         function Setcreated_date($value)
         {
                 $this->created_date = $value;
	          return SUCCESS;
         }
         function Getcreated_date()
         {
                    return $this->created_date;
         }
         function Precreated_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userInsert ) )
	            return Precreated_userInsert( $this );
                 else return;
         }
         function Postcreated_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userInsert ) )
	            return Precreated_userInsert( $this );
                 else return;
         }
         function Precreated_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userUpdate ) )
	            return Precreated_userUpdate( $this );
                 else return;
         }
         function Postcreated_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userUpdate ) )
	            return Precreated_userUpdate( $this );
                 else return;
         }
         function Precreated_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userDelete ) )
	            return Precreated_userDelete( $this );
                 else return;
         }
         function Postcreated_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userDelete ) )
	            return Precreated_userDelete( $this );
                 else return;
         }
         function Setcreated_user($value)
         {
                 $this->created_user = $value;
	          return SUCCESS;
         }
         function Getcreated_user()
         {
                    return $this->created_user;
         }
         function Prerevised_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateInsert ) )
	            return Prerevised_dateInsert( $this );
                 else return;
         }
         function Postrevised_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateInsert ) )
	            return Prerevised_dateInsert( $this );
                 else return;
         }
         function Prerevised_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateUpdate ) )
	            return Prerevised_dateUpdate( $this );
                 else return;
         }
         function Postrevised_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateUpdate ) )
	            return Prerevised_dateUpdate( $this );
                 else return;
         }
         function Prerevised_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateDelete ) )
	            return Prerevised_dateDelete( $this );
                 else return;
         }
         function Postrevised_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateDelete ) )
	            return Prerevised_dateDelete( $this );
                 else return;
         }
         function Setrevised_date($value)
         {
                 $this->revised_date = $value;
	          return SUCCESS;
         }
         function Getrevised_date()
         {
                    return $this->revised_date;
         }
         function Prerevised_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userInsert ) )
	            return Prerevised_userInsert( $this );
                 else return;
         }
         function Postrevised_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userInsert ) )
	            return Prerevised_userInsert( $this );
                 else return;
         }
         function Prerevised_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userUpdate ) )
	            return Prerevised_userUpdate( $this );
                 else return;
         }
         function Postrevised_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userUpdate ) )
	            return Prerevised_userUpdate( $this );
                 else return;
         }
         function Prerevised_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userDelete ) )
	            return Prerevised_userDelete( $this );
                 else return;
         }
         function Postrevised_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userDelete ) )
	            return Prerevised_userDelete( $this );
                 else return;
         }
         function Setrevised_user($value)
         {
                 $this->revised_user = $value;
	          return SUCCESS;
         }
         function Getrevised_user()
         {
                    return $this->revised_user;
         }
} /* class statearc */
