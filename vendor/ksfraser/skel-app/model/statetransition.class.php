<?php 
//This file was generated by calling php /var/www/html/codemeta/generator.php workflow 

//this script may only be included - so its better to die if called directly.
if ( strpos( $_SERVER["SCRIPT_NAME"], basename(__FILE__) ) !== false ) {
  header( "location: ../index.php" );
  exit;
}

class statetransition extends generictable 
{
          private $observers;
         var $data; //data passed in by other calls         var $workflow_id;
		 /* */
         var $transition_id;
		 /* */
         var $transition_name;
		 /* */
         var $transition_desc;
		 /* */
         var $transition_trigger;
		 /* */
         var $time_limit;
		 /* */
         var $task_id;
		 /* */
         var $roles_id;
		 /* */
         var $created_date;
		 /* */
         var $created_user;
		 /* */
         var $revised_date;
		 /* */
         var $revised_user;
		 /* */
         var $workflow_id;
		 /* */
         var $transition_id;
		 /* */
         var $transition_name;
		 /* */
         var $transition_desc;
		 /* */
         var $transition_trigger;
		 /* */
         var $time_limit;
		 /* */
         var $task_id;
		 /* */
         var $roles_id;
		 /* */
         var $created_date;
		 /* */
         var $created_user;
		 /* */
         var $revised_date;
		 /* */
         var $revised_user;
		 /* */
         function __constructor()
         {
         $this->querytablename = 'statetransition';
         $this->fieldspec['workflow_id']['metadata_id'] = '2645';
         $this->fieldspec['workflow_id']['table_name'] = 'statetransition';
         $this->fieldspec['workflow_id']['column_name'] = 'workflow_id';
         $this->fieldspec['workflow_id']['pretty_name'] = '';
         $this->fieldspec['workflow_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['db_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['field_null'] = 'YES';
         $this->fieldspec['workflow_id']['field_key'] = '';
         $this->fieldspec['workflow_id']['extra_sql'] = ' ';
         $this->fieldspec['workflow_id']['html_form_type'] = 'integer';
         $this->fieldspec['workflow_id']['html_form_options'] = '';
         $this->fieldspec['workflow_id']['html_form_explanation'] = '';
         $this->fieldspec['workflow_id']['help_text'] = '';
         $this->fieldspec['workflow_id']['mandatory_p'] = 'N';
         $this->fieldspec['workflow_id']['sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_number'] = '1';
         $this->fieldspec['workflow_id']['default_value'] = '';
         $this->fieldspec['workflow_id']['field_toupper'] = 'NO';
         $this->fieldspec['workflow_id']['validationprocname'] = '';
         $this->fieldspec['workflow_id']['c_size'] = '5';
         $this->fieldspec['workflow_id']['prikey'] = 'Y';
         $this->fieldspec['workflow_id']['noedit'] = 'N';
         $this->fieldspec['workflow_id']['nodisplay'] = 'N';
         $this->fieldspec['workflow_id']['c_unsigned'] = 'Y';
         $this->fieldspec['workflow_id']['c_zerofill'] = 'N';
         $this->fieldspec['workflow_id']['c_auto_increment'] = 'N';
         $this->fieldspec['workflow_id']['foreign_table'] = '';
         $this->fieldspec['workflow_id']['foreign_key'] = '';
         $this->fieldspec['workflow_id']['application'] = 'workflow';
         $this->fieldspec['workflow_id']['issearchable'] = '1';
         $this->fieldspec['workflow_id']['preinserttrigger'] = '';
         $this->fieldspec['workflow_id']['postinserttrigger'] = '';
         $this->fieldspec['workflow_id']['preupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['postupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['predeletetrigger'] = '';
         $this->fieldspec['workflow_id']['postdeletetrigger'] = '';
         $this->fieldspec['transition_id']['metadata_id'] = '2646';
         $this->fieldspec['transition_id']['table_name'] = 'statetransition';
         $this->fieldspec['transition_id']['column_name'] = 'transition_id';
         $this->fieldspec['transition_id']['pretty_name'] = '';
         $this->fieldspec['transition_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['transition_id']['db_data_type'] = 'smallint';
         $this->fieldspec['transition_id']['field_null'] = 'YES';
         $this->fieldspec['transition_id']['field_key'] = '';
         $this->fieldspec['transition_id']['extra_sql'] = ' ';
         $this->fieldspec['transition_id']['html_form_type'] = 'integer';
         $this->fieldspec['transition_id']['html_form_options'] = '';
         $this->fieldspec['transition_id']['html_form_explanation'] = '';
         $this->fieldspec['transition_id']['help_text'] = '';
         $this->fieldspec['transition_id']['mandatory_p'] = 'N';
         $this->fieldspec['transition_id']['sort_key'] = '0';
         $this->fieldspec['transition_id']['form_sort_key'] = '0';
         $this->fieldspec['transition_id']['form_number'] = '1';
         $this->fieldspec['transition_id']['default_value'] = '';
         $this->fieldspec['transition_id']['field_toupper'] = 'NO';
         $this->fieldspec['transition_id']['validationprocname'] = '';
         $this->fieldspec['transition_id']['c_size'] = '5';
         $this->fieldspec['transition_id']['prikey'] = 'Y';
         $this->fieldspec['transition_id']['noedit'] = 'N';
         $this->fieldspec['transition_id']['nodisplay'] = 'N';
         $this->fieldspec['transition_id']['c_unsigned'] = 'Y';
         $this->fieldspec['transition_id']['c_zerofill'] = 'N';
         $this->fieldspec['transition_id']['c_auto_increment'] = 'N';
         $this->fieldspec['transition_id']['foreign_table'] = '';
         $this->fieldspec['transition_id']['foreign_key'] = '';
         $this->fieldspec['transition_id']['application'] = 'workflow';
         $this->fieldspec['transition_id']['issearchable'] = '1';
         $this->fieldspec['transition_id']['preinserttrigger'] = '';
         $this->fieldspec['transition_id']['postinserttrigger'] = '';
         $this->fieldspec['transition_id']['preupdatetrigger'] = '';
         $this->fieldspec['transition_id']['postupdatetrigger'] = '';
         $this->fieldspec['transition_id']['predeletetrigger'] = '';
         $this->fieldspec['transition_id']['postdeletetrigger'] = '';
         $this->fieldspec['transition_name']['metadata_id'] = '2647';
         $this->fieldspec['transition_name']['table_name'] = 'statetransition';
         $this->fieldspec['transition_name']['column_name'] = 'transition_name';
         $this->fieldspec['transition_name']['pretty_name'] = '';
         $this->fieldspec['transition_name']['abstract_data_type'] = 'varchar';
         $this->fieldspec['transition_name']['db_data_type'] = 'varchar';
         $this->fieldspec['transition_name']['field_null'] = 'YES';
         $this->fieldspec['transition_name']['field_key'] = '';
         $this->fieldspec['transition_name']['extra_sql'] = ' ';
         $this->fieldspec['transition_name']['html_form_type'] = 'text';
         $this->fieldspec['transition_name']['html_form_options'] = '';
         $this->fieldspec['transition_name']['html_form_explanation'] = '';
         $this->fieldspec['transition_name']['help_text'] = '';
         $this->fieldspec['transition_name']['mandatory_p'] = 'N';
         $this->fieldspec['transition_name']['sort_key'] = '0';
         $this->fieldspec['transition_name']['form_sort_key'] = '0';
         $this->fieldspec['transition_name']['form_number'] = '1';
         $this->fieldspec['transition_name']['default_value'] = '';
         $this->fieldspec['transition_name']['field_toupper'] = 'NO';
         $this->fieldspec['transition_name']['validationprocname'] = '';
         $this->fieldspec['transition_name']['c_size'] = '80';
         $this->fieldspec['transition_name']['prikey'] = 'N';
         $this->fieldspec['transition_name']['noedit'] = 'N';
         $this->fieldspec['transition_name']['nodisplay'] = 'N';
         $this->fieldspec['transition_name']['c_unsigned'] = 'N';
         $this->fieldspec['transition_name']['c_zerofill'] = 'N';
         $this->fieldspec['transition_name']['c_auto_increment'] = 'N';
         $this->fieldspec['transition_name']['foreign_table'] = '';
         $this->fieldspec['transition_name']['foreign_key'] = '';
         $this->fieldspec['transition_name']['application'] = 'workflow';
         $this->fieldspec['transition_name']['issearchable'] = '1';
         $this->fieldspec['transition_name']['preinserttrigger'] = '';
         $this->fieldspec['transition_name']['postinserttrigger'] = '';
         $this->fieldspec['transition_name']['preupdatetrigger'] = '';
         $this->fieldspec['transition_name']['postupdatetrigger'] = '';
         $this->fieldspec['transition_name']['predeletetrigger'] = '';
         $this->fieldspec['transition_name']['postdeletetrigger'] = '';
         $this->fieldspec['transition_desc']['metadata_id'] = '2648';
         $this->fieldspec['transition_desc']['table_name'] = 'statetransition';
         $this->fieldspec['transition_desc']['column_name'] = 'transition_desc';
         $this->fieldspec['transition_desc']['pretty_name'] = '';
         $this->fieldspec['transition_desc']['abstract_data_type'] = 'text,
';
         $this->fieldspec['transition_desc']['db_data_type'] = 'text,
';
         $this->fieldspec['transition_desc']['field_null'] = 'NO';
         $this->fieldspec['transition_desc']['field_key'] = '';
         $this->fieldspec['transition_desc']['extra_sql'] = ' ';
         $this->fieldspec['transition_desc']['html_form_type'] = 'text';
         $this->fieldspec['transition_desc']['html_form_options'] = '';
         $this->fieldspec['transition_desc']['html_form_explanation'] = '';
         $this->fieldspec['transition_desc']['help_text'] = '';
         $this->fieldspec['transition_desc']['mandatory_p'] = 'N';
         $this->fieldspec['transition_desc']['sort_key'] = '0';
         $this->fieldspec['transition_desc']['form_sort_key'] = '0';
         $this->fieldspec['transition_desc']['form_number'] = '1';
         $this->fieldspec['transition_desc']['default_value'] = '';
         $this->fieldspec['transition_desc']['field_toupper'] = 'NO';
         $this->fieldspec['transition_desc']['validationprocname'] = '';
         $this->fieldspec['transition_desc']['c_size'] = '';
         $this->fieldspec['transition_desc']['prikey'] = 'N';
         $this->fieldspec['transition_desc']['noedit'] = 'N';
         $this->fieldspec['transition_desc']['nodisplay'] = 'N';
         $this->fieldspec['transition_desc']['c_unsigned'] = 'N';
         $this->fieldspec['transition_desc']['c_zerofill'] = 'N';
         $this->fieldspec['transition_desc']['c_auto_increment'] = 'N';
         $this->fieldspec['transition_desc']['foreign_table'] = '';
         $this->fieldspec['transition_desc']['foreign_key'] = '';
         $this->fieldspec['transition_desc']['application'] = 'workflow';
         $this->fieldspec['transition_desc']['issearchable'] = '1';
         $this->fieldspec['transition_desc']['preinserttrigger'] = '';
         $this->fieldspec['transition_desc']['postinserttrigger'] = '';
         $this->fieldspec['transition_desc']['preupdatetrigger'] = '';
         $this->fieldspec['transition_desc']['postupdatetrigger'] = '';
         $this->fieldspec['transition_desc']['predeletetrigger'] = '';
         $this->fieldspec['transition_desc']['postdeletetrigger'] = '';
         $this->fieldspec['transition_trigger']['metadata_id'] = '2649';
         $this->fieldspec['transition_trigger']['table_name'] = 'statetransition';
         $this->fieldspec['transition_trigger']['column_name'] = 'transition_trigger';
         $this->fieldspec['transition_trigger']['pretty_name'] = '';
         $this->fieldspec['transition_trigger']['abstract_data_type'] = 'varchar';
         $this->fieldspec['transition_trigger']['db_data_type'] = 'varchar';
         $this->fieldspec['transition_trigger']['field_null'] = 'YES';
         $this->fieldspec['transition_trigger']['field_key'] = '';
         $this->fieldspec['transition_trigger']['extra_sql'] = ' ';
         $this->fieldspec['transition_trigger']['html_form_type'] = 'text';
         $this->fieldspec['transition_trigger']['html_form_options'] = '';
         $this->fieldspec['transition_trigger']['html_form_explanation'] = '';
         $this->fieldspec['transition_trigger']['help_text'] = '';
         $this->fieldspec['transition_trigger']['mandatory_p'] = 'N';
         $this->fieldspec['transition_trigger']['sort_key'] = '0';
         $this->fieldspec['transition_trigger']['form_sort_key'] = '0';
         $this->fieldspec['transition_trigger']['form_number'] = '1';
         $this->fieldspec['transition_trigger']['default_value'] = '';
         $this->fieldspec['transition_trigger']['field_toupper'] = 'NO';
         $this->fieldspec['transition_trigger']['validationprocname'] = '';
         $this->fieldspec['transition_trigger']['c_size'] = '4';
         $this->fieldspec['transition_trigger']['prikey'] = 'N';
         $this->fieldspec['transition_trigger']['noedit'] = 'N';
         $this->fieldspec['transition_trigger']['nodisplay'] = 'N';
         $this->fieldspec['transition_trigger']['c_unsigned'] = 'N';
         $this->fieldspec['transition_trigger']['c_zerofill'] = 'N';
         $this->fieldspec['transition_trigger']['c_auto_increment'] = 'N';
         $this->fieldspec['transition_trigger']['foreign_table'] = '';
         $this->fieldspec['transition_trigger']['foreign_key'] = '';
         $this->fieldspec['transition_trigger']['application'] = 'workflow';
         $this->fieldspec['transition_trigger']['issearchable'] = '1';
         $this->fieldspec['transition_trigger']['preinserttrigger'] = '';
         $this->fieldspec['transition_trigger']['postinserttrigger'] = '';
         $this->fieldspec['transition_trigger']['preupdatetrigger'] = '';
         $this->fieldspec['transition_trigger']['postupdatetrigger'] = '';
         $this->fieldspec['transition_trigger']['predeletetrigger'] = '';
         $this->fieldspec['transition_trigger']['postdeletetrigger'] = '';
         $this->fieldspec['time_limit']['metadata_id'] = '2650';
         $this->fieldspec['time_limit']['table_name'] = 'statetransition';
         $this->fieldspec['time_limit']['column_name'] = 'time_limit';
         $this->fieldspec['time_limit']['pretty_name'] = '';
         $this->fieldspec['time_limit']['abstract_data_type'] = 'smallint';
         $this->fieldspec['time_limit']['db_data_type'] = 'smallint';
         $this->fieldspec['time_limit']['field_null'] = 'NO';
         $this->fieldspec['time_limit']['field_key'] = '';
         $this->fieldspec['time_limit']['extra_sql'] = ' ';
         $this->fieldspec['time_limit']['html_form_type'] = 'integer';
         $this->fieldspec['time_limit']['html_form_options'] = '';
         $this->fieldspec['time_limit']['html_form_explanation'] = '';
         $this->fieldspec['time_limit']['help_text'] = '';
         $this->fieldspec['time_limit']['mandatory_p'] = 'N';
         $this->fieldspec['time_limit']['sort_key'] = '0';
         $this->fieldspec['time_limit']['form_sort_key'] = '0';
         $this->fieldspec['time_limit']['form_number'] = '1';
         $this->fieldspec['time_limit']['default_value'] = '';
         $this->fieldspec['time_limit']['field_toupper'] = 'NO';
         $this->fieldspec['time_limit']['validationprocname'] = '';
         $this->fieldspec['time_limit']['c_size'] = '5';
         $this->fieldspec['time_limit']['prikey'] = 'N';
         $this->fieldspec['time_limit']['noedit'] = 'N';
         $this->fieldspec['time_limit']['nodisplay'] = 'N';
         $this->fieldspec['time_limit']['c_unsigned'] = 'Y';
         $this->fieldspec['time_limit']['c_zerofill'] = 'N';
         $this->fieldspec['time_limit']['c_auto_increment'] = 'N';
         $this->fieldspec['time_limit']['foreign_table'] = '';
         $this->fieldspec['time_limit']['foreign_key'] = '';
         $this->fieldspec['time_limit']['application'] = 'workflow';
         $this->fieldspec['time_limit']['issearchable'] = '1';
         $this->fieldspec['time_limit']['preinserttrigger'] = '';
         $this->fieldspec['time_limit']['postinserttrigger'] = '';
         $this->fieldspec['time_limit']['preupdatetrigger'] = '';
         $this->fieldspec['time_limit']['postupdatetrigger'] = '';
         $this->fieldspec['time_limit']['predeletetrigger'] = '';
         $this->fieldspec['time_limit']['postdeletetrigger'] = '';
         $this->fieldspec['task_id']['metadata_id'] = '2651';
         $this->fieldspec['task_id']['table_name'] = 'statetransition';
         $this->fieldspec['task_id']['column_name'] = 'task_id';
         $this->fieldspec['task_id']['pretty_name'] = '';
         $this->fieldspec['task_id']['abstract_data_type'] = 'varchar';
         $this->fieldspec['task_id']['db_data_type'] = 'varchar';
         $this->fieldspec['task_id']['field_null'] = 'YES';
         $this->fieldspec['task_id']['field_key'] = '';
         $this->fieldspec['task_id']['extra_sql'] = ' ';
         $this->fieldspec['task_id']['html_form_type'] = 'text';
         $this->fieldspec['task_id']['html_form_options'] = '';
         $this->fieldspec['task_id']['html_form_explanation'] = '';
         $this->fieldspec['task_id']['help_text'] = '';
         $this->fieldspec['task_id']['mandatory_p'] = 'N';
         $this->fieldspec['task_id']['sort_key'] = '0';
         $this->fieldspec['task_id']['form_sort_key'] = '0';
         $this->fieldspec['task_id']['form_number'] = '1';
         $this->fieldspec['task_id']['default_value'] = '';
         $this->fieldspec['task_id']['field_toupper'] = 'NO';
         $this->fieldspec['task_id']['validationprocname'] = '';
         $this->fieldspec['task_id']['c_size'] = '40';
         $this->fieldspec['task_id']['prikey'] = 'N';
         $this->fieldspec['task_id']['noedit'] = 'N';
         $this->fieldspec['task_id']['nodisplay'] = 'N';
         $this->fieldspec['task_id']['c_unsigned'] = 'N';
         $this->fieldspec['task_id']['c_zerofill'] = 'N';
         $this->fieldspec['task_id']['c_auto_increment'] = 'N';
         $this->fieldspec['task_id']['foreign_table'] = '';
         $this->fieldspec['task_id']['foreign_key'] = '';
         $this->fieldspec['task_id']['application'] = 'workflow';
         $this->fieldspec['task_id']['issearchable'] = '1';
         $this->fieldspec['task_id']['preinserttrigger'] = '';
         $this->fieldspec['task_id']['postinserttrigger'] = '';
         $this->fieldspec['task_id']['preupdatetrigger'] = '';
         $this->fieldspec['task_id']['postupdatetrigger'] = '';
         $this->fieldspec['task_id']['predeletetrigger'] = '';
         $this->fieldspec['task_id']['postdeletetrigger'] = '';
         $this->fieldspec['roles_id']['metadata_id'] = '2652';
         $this->fieldspec['roles_id']['table_name'] = 'statetransition';
         $this->fieldspec['roles_id']['column_name'] = 'roles_id';
         $this->fieldspec['roles_id']['pretty_name'] = '';
         $this->fieldspec['roles_id']['abstract_data_type'] = 'varchar';
         $this->fieldspec['roles_id']['db_data_type'] = 'varchar';
         $this->fieldspec['roles_id']['field_null'] = 'NO';
         $this->fieldspec['roles_id']['field_key'] = '';
         $this->fieldspec['roles_id']['extra_sql'] = ' ';
         $this->fieldspec['roles_id']['html_form_type'] = 'text';
         $this->fieldspec['roles_id']['html_form_options'] = '';
         $this->fieldspec['roles_id']['html_form_explanation'] = '';
         $this->fieldspec['roles_id']['help_text'] = '';
         $this->fieldspec['roles_id']['mandatory_p'] = 'N';
         $this->fieldspec['roles_id']['sort_key'] = '0';
         $this->fieldspec['roles_id']['form_sort_key'] = '0';
         $this->fieldspec['roles_id']['form_number'] = '1';
         $this->fieldspec['roles_id']['default_value'] = '';
         $this->fieldspec['roles_id']['field_toupper'] = 'NO';
         $this->fieldspec['roles_id']['validationprocname'] = '';
         $this->fieldspec['roles_id']['c_size'] = '16';
         $this->fieldspec['roles_id']['prikey'] = 'N';
         $this->fieldspec['roles_id']['noedit'] = 'N';
         $this->fieldspec['roles_id']['nodisplay'] = 'N';
         $this->fieldspec['roles_id']['c_unsigned'] = 'N';
         $this->fieldspec['roles_id']['c_zerofill'] = 'N';
         $this->fieldspec['roles_id']['c_auto_increment'] = 'N';
         $this->fieldspec['roles_id']['foreign_table'] = '';
         $this->fieldspec['roles_id']['foreign_key'] = '';
         $this->fieldspec['roles_id']['application'] = 'workflow';
         $this->fieldspec['roles_id']['issearchable'] = '1';
         $this->fieldspec['roles_id']['preinserttrigger'] = '';
         $this->fieldspec['roles_id']['postinserttrigger'] = '';
         $this->fieldspec['roles_id']['preupdatetrigger'] = '';
         $this->fieldspec['roles_id']['postupdatetrigger'] = '';
         $this->fieldspec['roles_id']['predeletetrigger'] = '';
         $this->fieldspec['roles_id']['postdeletetrigger'] = '';
         $this->fieldspec['created_date']['metadata_id'] = '2653';
         $this->fieldspec['created_date']['table_name'] = 'statetransition';
         $this->fieldspec['created_date']['column_name'] = 'created_date';
         $this->fieldspec['created_date']['pretty_name'] = '';
         $this->fieldspec['created_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['created_date']['db_data_type'] = 'datetime';
         $this->fieldspec['created_date']['field_null'] = 'YES';
         $this->fieldspec['created_date']['field_key'] = '';
         $this->fieldspec['created_date']['extra_sql'] = ' ';
         $this->fieldspec['created_date']['html_form_type'] = 'datetime';
         $this->fieldspec['created_date']['html_form_options'] = '';
         $this->fieldspec['created_date']['html_form_explanation'] = '';
         $this->fieldspec['created_date']['help_text'] = '';
         $this->fieldspec['created_date']['mandatory_p'] = 'N';
         $this->fieldspec['created_date']['sort_key'] = '0';
         $this->fieldspec['created_date']['form_sort_key'] = '0';
         $this->fieldspec['created_date']['form_number'] = '1';
         $this->fieldspec['created_date']['default_value'] = '';
         $this->fieldspec['created_date']['field_toupper'] = 'NO';
         $this->fieldspec['created_date']['validationprocname'] = '';
         $this->fieldspec['created_date']['c_size'] = '';
         $this->fieldspec['created_date']['prikey'] = 'N';
         $this->fieldspec['created_date']['noedit'] = 'N';
         $this->fieldspec['created_date']['nodisplay'] = 'N';
         $this->fieldspec['created_date']['c_unsigned'] = 'N';
         $this->fieldspec['created_date']['c_zerofill'] = 'N';
         $this->fieldspec['created_date']['c_auto_increment'] = 'N';
         $this->fieldspec['created_date']['foreign_table'] = '';
         $this->fieldspec['created_date']['foreign_key'] = '';
         $this->fieldspec['created_date']['application'] = 'workflow';
         $this->fieldspec['created_date']['issearchable'] = '1';
         $this->fieldspec['created_date']['preinserttrigger'] = '';
         $this->fieldspec['created_date']['postinserttrigger'] = '';
         $this->fieldspec['created_date']['preupdatetrigger'] = '';
         $this->fieldspec['created_date']['postupdatetrigger'] = '';
         $this->fieldspec['created_date']['predeletetrigger'] = '';
         $this->fieldspec['created_date']['postdeletetrigger'] = '';
         $this->fieldspec['created_user']['metadata_id'] = '2654';
         $this->fieldspec['created_user']['table_name'] = 'statetransition';
         $this->fieldspec['created_user']['column_name'] = 'created_user';
         $this->fieldspec['created_user']['pretty_name'] = '';
         $this->fieldspec['created_user']['abstract_data_type'] = 'varchar';
         $this->fieldspec['created_user']['db_data_type'] = 'varchar';
         $this->fieldspec['created_user']['field_null'] = 'NO';
         $this->fieldspec['created_user']['field_key'] = '';
         $this->fieldspec['created_user']['extra_sql'] = ' ';
         $this->fieldspec['created_user']['html_form_type'] = 'text';
         $this->fieldspec['created_user']['html_form_options'] = '';
         $this->fieldspec['created_user']['html_form_explanation'] = '';
         $this->fieldspec['created_user']['help_text'] = '';
         $this->fieldspec['created_user']['mandatory_p'] = 'N';
         $this->fieldspec['created_user']['sort_key'] = '0';
         $this->fieldspec['created_user']['form_sort_key'] = '0';
         $this->fieldspec['created_user']['form_number'] = '1';
         $this->fieldspec['created_user']['default_value'] = '';
         $this->fieldspec['created_user']['field_toupper'] = 'NO';
         $this->fieldspec['created_user']['validationprocname'] = '';
         $this->fieldspec['created_user']['c_size'] = '16';
         $this->fieldspec['created_user']['prikey'] = 'N';
         $this->fieldspec['created_user']['noedit'] = 'N';
         $this->fieldspec['created_user']['nodisplay'] = 'N';
         $this->fieldspec['created_user']['c_unsigned'] = 'N';
         $this->fieldspec['created_user']['c_zerofill'] = 'N';
         $this->fieldspec['created_user']['c_auto_increment'] = 'N';
         $this->fieldspec['created_user']['foreign_table'] = '';
         $this->fieldspec['created_user']['foreign_key'] = '';
         $this->fieldspec['created_user']['application'] = 'workflow';
         $this->fieldspec['created_user']['issearchable'] = '1';
         $this->fieldspec['created_user']['preinserttrigger'] = '';
         $this->fieldspec['created_user']['postinserttrigger'] = '';
         $this->fieldspec['created_user']['preupdatetrigger'] = '';
         $this->fieldspec['created_user']['postupdatetrigger'] = '';
         $this->fieldspec['created_user']['predeletetrigger'] = '';
         $this->fieldspec['created_user']['postdeletetrigger'] = '';
         $this->fieldspec['revised_date']['metadata_id'] = '2655';
         $this->fieldspec['revised_date']['table_name'] = 'statetransition';
         $this->fieldspec['revised_date']['column_name'] = 'revised_date';
         $this->fieldspec['revised_date']['pretty_name'] = '';
         $this->fieldspec['revised_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['revised_date']['db_data_type'] = 'datetime';
         $this->fieldspec['revised_date']['field_null'] = 'NO';
         $this->fieldspec['revised_date']['field_key'] = '';
         $this->fieldspec['revised_date']['extra_sql'] = ' ';
         $this->fieldspec['revised_date']['html_form_type'] = 'datetime';
         $this->fieldspec['revised_date']['html_form_options'] = '';
         $this->fieldspec['revised_date']['html_form_explanation'] = '';
         $this->fieldspec['revised_date']['help_text'] = '';
         $this->fieldspec['revised_date']['mandatory_p'] = 'N';
         $this->fieldspec['revised_date']['sort_key'] = '0';
         $this->fieldspec['revised_date']['form_sort_key'] = '0';
         $this->fieldspec['revised_date']['form_number'] = '1';
         $this->fieldspec['revised_date']['default_value'] = '';
         $this->fieldspec['revised_date']['field_toupper'] = 'NO';
         $this->fieldspec['revised_date']['validationprocname'] = '';
         $this->fieldspec['revised_date']['c_size'] = '';
         $this->fieldspec['revised_date']['prikey'] = 'N';
         $this->fieldspec['revised_date']['noedit'] = 'N';
         $this->fieldspec['revised_date']['nodisplay'] = 'N';
         $this->fieldspec['revised_date']['c_unsigned'] = 'N';
         $this->fieldspec['revised_date']['c_zerofill'] = 'N';
         $this->fieldspec['revised_date']['c_auto_increment'] = 'N';
         $this->fieldspec['revised_date']['foreign_table'] = '';
         $this->fieldspec['revised_date']['foreign_key'] = '';
         $this->fieldspec['revised_date']['application'] = 'workflow';
         $this->fieldspec['revised_date']['issearchable'] = '1';
         $this->fieldspec['revised_date']['preinserttrigger'] = '';
         $this->fieldspec['revised_date']['postinserttrigger'] = '';
         $this->fieldspec['revised_date']['preupdatetrigger'] = '';
         $this->fieldspec['revised_date']['postupdatetrigger'] = '';
         $this->fieldspec['revised_date']['predeletetrigger'] = '';
         $this->fieldspec['revised_date']['postdeletetrigger'] = '';
         $this->fieldspec['revised_user']['metadata_id'] = '2656';
         $this->fieldspec['revised_user']['table_name'] = 'statetransition';
         $this->fieldspec['revised_user']['column_name'] = 'revised_user';
         $this->fieldspec['revised_user']['pretty_name'] = '';
         $this->fieldspec['revised_user']['abstract_data_type'] = 'varchar';
         $this->fieldspec['revised_user']['db_data_type'] = 'varchar';
         $this->fieldspec['revised_user']['field_null'] = 'NO';
         $this->fieldspec['revised_user']['field_key'] = '';
         $this->fieldspec['revised_user']['extra_sql'] = ' ';
         $this->fieldspec['revised_user']['html_form_type'] = 'text';
         $this->fieldspec['revised_user']['html_form_options'] = '';
         $this->fieldspec['revised_user']['html_form_explanation'] = '';
         $this->fieldspec['revised_user']['help_text'] = '';
         $this->fieldspec['revised_user']['mandatory_p'] = 'N';
         $this->fieldspec['revised_user']['sort_key'] = '0';
         $this->fieldspec['revised_user']['form_sort_key'] = '0';
         $this->fieldspec['revised_user']['form_number'] = '1';
         $this->fieldspec['revised_user']['default_value'] = '';
         $this->fieldspec['revised_user']['field_toupper'] = 'NO';
         $this->fieldspec['revised_user']['validationprocname'] = '';
         $this->fieldspec['revised_user']['c_size'] = '16';
         $this->fieldspec['revised_user']['prikey'] = 'N';
         $this->fieldspec['revised_user']['noedit'] = 'N';
         $this->fieldspec['revised_user']['nodisplay'] = 'N';
         $this->fieldspec['revised_user']['c_unsigned'] = 'N';
         $this->fieldspec['revised_user']['c_zerofill'] = 'N';
         $this->fieldspec['revised_user']['c_auto_increment'] = 'N';
         $this->fieldspec['revised_user']['foreign_table'] = '';
         $this->fieldspec['revised_user']['foreign_key'] = '';
         $this->fieldspec['revised_user']['application'] = 'workflow';
         $this->fieldspec['revised_user']['issearchable'] = '1';
         $this->fieldspec['revised_user']['preinserttrigger'] = '';
         $this->fieldspec['revised_user']['postinserttrigger'] = '';
         $this->fieldspec['revised_user']['preupdatetrigger'] = '';
         $this->fieldspec['revised_user']['postupdatetrigger'] = '';
         $this->fieldspec['revised_user']['predeletetrigger'] = '';
         $this->fieldspec['revised_user']['postdeletetrigger'] = '';
         $this->fieldspec['workflow_id']['metadata_id'] = '2721';
         $this->fieldspec['workflow_id']['table_name'] = 'statetransition';
         $this->fieldspec['workflow_id']['column_name'] = 'workflow_id';
         $this->fieldspec['workflow_id']['pretty_name'] = '';
         $this->fieldspec['workflow_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['db_data_type'] = 'smallint';
         $this->fieldspec['workflow_id']['field_null'] = 'YES';
         $this->fieldspec['workflow_id']['field_key'] = '';
         $this->fieldspec['workflow_id']['extra_sql'] = ' ';
         $this->fieldspec['workflow_id']['html_form_type'] = 'integer';
         $this->fieldspec['workflow_id']['html_form_options'] = '';
         $this->fieldspec['workflow_id']['html_form_explanation'] = '';
         $this->fieldspec['workflow_id']['help_text'] = '';
         $this->fieldspec['workflow_id']['mandatory_p'] = 'N';
         $this->fieldspec['workflow_id']['sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_sort_key'] = '0';
         $this->fieldspec['workflow_id']['form_number'] = '1';
         $this->fieldspec['workflow_id']['default_value'] = '';
         $this->fieldspec['workflow_id']['field_toupper'] = 'NO';
         $this->fieldspec['workflow_id']['validationprocname'] = '';
         $this->fieldspec['workflow_id']['c_size'] = '5';
         $this->fieldspec['workflow_id']['prikey'] = 'Y';
         $this->fieldspec['workflow_id']['noedit'] = 'N';
         $this->fieldspec['workflow_id']['nodisplay'] = 'N';
         $this->fieldspec['workflow_id']['c_unsigned'] = 'Y';
         $this->fieldspec['workflow_id']['c_zerofill'] = 'N';
         $this->fieldspec['workflow_id']['c_auto_increment'] = 'N';
         $this->fieldspec['workflow_id']['foreign_table'] = '';
         $this->fieldspec['workflow_id']['foreign_key'] = '';
         $this->fieldspec['workflow_id']['application'] = 'workflow';
         $this->fieldspec['workflow_id']['issearchable'] = '1';
         $this->fieldspec['workflow_id']['preinserttrigger'] = '';
         $this->fieldspec['workflow_id']['postinserttrigger'] = '';
         $this->fieldspec['workflow_id']['preupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['postupdatetrigger'] = '';
         $this->fieldspec['workflow_id']['predeletetrigger'] = '';
         $this->fieldspec['workflow_id']['postdeletetrigger'] = '';
         $this->fieldspec['transition_id']['metadata_id'] = '2722';
         $this->fieldspec['transition_id']['table_name'] = 'statetransition';
         $this->fieldspec['transition_id']['column_name'] = 'transition_id';
         $this->fieldspec['transition_id']['pretty_name'] = '';
         $this->fieldspec['transition_id']['abstract_data_type'] = 'smallint';
         $this->fieldspec['transition_id']['db_data_type'] = 'smallint';
         $this->fieldspec['transition_id']['field_null'] = 'YES';
         $this->fieldspec['transition_id']['field_key'] = '';
         $this->fieldspec['transition_id']['extra_sql'] = ' ';
         $this->fieldspec['transition_id']['html_form_type'] = 'integer';
         $this->fieldspec['transition_id']['html_form_options'] = '';
         $this->fieldspec['transition_id']['html_form_explanation'] = '';
         $this->fieldspec['transition_id']['help_text'] = '';
         $this->fieldspec['transition_id']['mandatory_p'] = 'N';
         $this->fieldspec['transition_id']['sort_key'] = '0';
         $this->fieldspec['transition_id']['form_sort_key'] = '0';
         $this->fieldspec['transition_id']['form_number'] = '1';
         $this->fieldspec['transition_id']['default_value'] = '';
         $this->fieldspec['transition_id']['field_toupper'] = 'NO';
         $this->fieldspec['transition_id']['validationprocname'] = '';
         $this->fieldspec['transition_id']['c_size'] = '5';
         $this->fieldspec['transition_id']['prikey'] = 'Y';
         $this->fieldspec['transition_id']['noedit'] = 'N';
         $this->fieldspec['transition_id']['nodisplay'] = 'N';
         $this->fieldspec['transition_id']['c_unsigned'] = 'Y';
         $this->fieldspec['transition_id']['c_zerofill'] = 'N';
         $this->fieldspec['transition_id']['c_auto_increment'] = 'N';
         $this->fieldspec['transition_id']['foreign_table'] = '';
         $this->fieldspec['transition_id']['foreign_key'] = '';
         $this->fieldspec['transition_id']['application'] = 'workflow';
         $this->fieldspec['transition_id']['issearchable'] = '1';
         $this->fieldspec['transition_id']['preinserttrigger'] = '';
         $this->fieldspec['transition_id']['postinserttrigger'] = '';
         $this->fieldspec['transition_id']['preupdatetrigger'] = '';
         $this->fieldspec['transition_id']['postupdatetrigger'] = '';
         $this->fieldspec['transition_id']['predeletetrigger'] = '';
         $this->fieldspec['transition_id']['postdeletetrigger'] = '';
         $this->fieldspec['transition_name']['metadata_id'] = '2723';
         $this->fieldspec['transition_name']['table_name'] = 'statetransition';
         $this->fieldspec['transition_name']['column_name'] = 'transition_name';
         $this->fieldspec['transition_name']['pretty_name'] = '';
         $this->fieldspec['transition_name']['abstract_data_type'] = 'varchar';
         $this->fieldspec['transition_name']['db_data_type'] = 'varchar';
         $this->fieldspec['transition_name']['field_null'] = 'YES';
         $this->fieldspec['transition_name']['field_key'] = '';
         $this->fieldspec['transition_name']['extra_sql'] = ' ';
         $this->fieldspec['transition_name']['html_form_type'] = 'text';
         $this->fieldspec['transition_name']['html_form_options'] = '';
         $this->fieldspec['transition_name']['html_form_explanation'] = '';
         $this->fieldspec['transition_name']['help_text'] = '';
         $this->fieldspec['transition_name']['mandatory_p'] = 'N';
         $this->fieldspec['transition_name']['sort_key'] = '0';
         $this->fieldspec['transition_name']['form_sort_key'] = '0';
         $this->fieldspec['transition_name']['form_number'] = '1';
         $this->fieldspec['transition_name']['default_value'] = '';
         $this->fieldspec['transition_name']['field_toupper'] = 'NO';
         $this->fieldspec['transition_name']['validationprocname'] = '';
         $this->fieldspec['transition_name']['c_size'] = '80';
         $this->fieldspec['transition_name']['prikey'] = 'N';
         $this->fieldspec['transition_name']['noedit'] = 'N';
         $this->fieldspec['transition_name']['nodisplay'] = 'N';
         $this->fieldspec['transition_name']['c_unsigned'] = 'N';
         $this->fieldspec['transition_name']['c_zerofill'] = 'N';
         $this->fieldspec['transition_name']['c_auto_increment'] = 'N';
         $this->fieldspec['transition_name']['foreign_table'] = '';
         $this->fieldspec['transition_name']['foreign_key'] = '';
         $this->fieldspec['transition_name']['application'] = 'workflow';
         $this->fieldspec['transition_name']['issearchable'] = '1';
         $this->fieldspec['transition_name']['preinserttrigger'] = '';
         $this->fieldspec['transition_name']['postinserttrigger'] = '';
         $this->fieldspec['transition_name']['preupdatetrigger'] = '';
         $this->fieldspec['transition_name']['postupdatetrigger'] = '';
         $this->fieldspec['transition_name']['predeletetrigger'] = '';
         $this->fieldspec['transition_name']['postdeletetrigger'] = '';
         $this->fieldspec['transition_desc']['metadata_id'] = '2724';
         $this->fieldspec['transition_desc']['table_name'] = 'statetransition';
         $this->fieldspec['transition_desc']['column_name'] = 'transition_desc';
         $this->fieldspec['transition_desc']['pretty_name'] = '';
         $this->fieldspec['transition_desc']['abstract_data_type'] = 'text,
';
         $this->fieldspec['transition_desc']['db_data_type'] = 'text,
';
         $this->fieldspec['transition_desc']['field_null'] = 'NO';
         $this->fieldspec['transition_desc']['field_key'] = '';
         $this->fieldspec['transition_desc']['extra_sql'] = ' ';
         $this->fieldspec['transition_desc']['html_form_type'] = 'text';
         $this->fieldspec['transition_desc']['html_form_options'] = '';
         $this->fieldspec['transition_desc']['html_form_explanation'] = '';
         $this->fieldspec['transition_desc']['help_text'] = '';
         $this->fieldspec['transition_desc']['mandatory_p'] = 'N';
         $this->fieldspec['transition_desc']['sort_key'] = '0';
         $this->fieldspec['transition_desc']['form_sort_key'] = '0';
         $this->fieldspec['transition_desc']['form_number'] = '1';
         $this->fieldspec['transition_desc']['default_value'] = '';
         $this->fieldspec['transition_desc']['field_toupper'] = 'NO';
         $this->fieldspec['transition_desc']['validationprocname'] = '';
         $this->fieldspec['transition_desc']['c_size'] = '';
         $this->fieldspec['transition_desc']['prikey'] = 'N';
         $this->fieldspec['transition_desc']['noedit'] = 'N';
         $this->fieldspec['transition_desc']['nodisplay'] = 'N';
         $this->fieldspec['transition_desc']['c_unsigned'] = 'N';
         $this->fieldspec['transition_desc']['c_zerofill'] = 'N';
         $this->fieldspec['transition_desc']['c_auto_increment'] = 'N';
         $this->fieldspec['transition_desc']['foreign_table'] = '';
         $this->fieldspec['transition_desc']['foreign_key'] = '';
         $this->fieldspec['transition_desc']['application'] = 'workflow';
         $this->fieldspec['transition_desc']['issearchable'] = '1';
         $this->fieldspec['transition_desc']['preinserttrigger'] = '';
         $this->fieldspec['transition_desc']['postinserttrigger'] = '';
         $this->fieldspec['transition_desc']['preupdatetrigger'] = '';
         $this->fieldspec['transition_desc']['postupdatetrigger'] = '';
         $this->fieldspec['transition_desc']['predeletetrigger'] = '';
         $this->fieldspec['transition_desc']['postdeletetrigger'] = '';
         $this->fieldspec['transition_trigger']['metadata_id'] = '2725';
         $this->fieldspec['transition_trigger']['table_name'] = 'statetransition';
         $this->fieldspec['transition_trigger']['column_name'] = 'transition_trigger';
         $this->fieldspec['transition_trigger']['pretty_name'] = '';
         $this->fieldspec['transition_trigger']['abstract_data_type'] = 'varchar';
         $this->fieldspec['transition_trigger']['db_data_type'] = 'varchar';
         $this->fieldspec['transition_trigger']['field_null'] = 'YES';
         $this->fieldspec['transition_trigger']['field_key'] = '';
         $this->fieldspec['transition_trigger']['extra_sql'] = ' ';
         $this->fieldspec['transition_trigger']['html_form_type'] = 'text';
         $this->fieldspec['transition_trigger']['html_form_options'] = '';
         $this->fieldspec['transition_trigger']['html_form_explanation'] = '';
         $this->fieldspec['transition_trigger']['help_text'] = '';
         $this->fieldspec['transition_trigger']['mandatory_p'] = 'N';
         $this->fieldspec['transition_trigger']['sort_key'] = '0';
         $this->fieldspec['transition_trigger']['form_sort_key'] = '0';
         $this->fieldspec['transition_trigger']['form_number'] = '1';
         $this->fieldspec['transition_trigger']['default_value'] = '';
         $this->fieldspec['transition_trigger']['field_toupper'] = 'NO';
         $this->fieldspec['transition_trigger']['validationprocname'] = '';
         $this->fieldspec['transition_trigger']['c_size'] = '4';
         $this->fieldspec['transition_trigger']['prikey'] = 'N';
         $this->fieldspec['transition_trigger']['noedit'] = 'N';
         $this->fieldspec['transition_trigger']['nodisplay'] = 'N';
         $this->fieldspec['transition_trigger']['c_unsigned'] = 'N';
         $this->fieldspec['transition_trigger']['c_zerofill'] = 'N';
         $this->fieldspec['transition_trigger']['c_auto_increment'] = 'N';
         $this->fieldspec['transition_trigger']['foreign_table'] = '';
         $this->fieldspec['transition_trigger']['foreign_key'] = '';
         $this->fieldspec['transition_trigger']['application'] = 'workflow';
         $this->fieldspec['transition_trigger']['issearchable'] = '1';
         $this->fieldspec['transition_trigger']['preinserttrigger'] = '';
         $this->fieldspec['transition_trigger']['postinserttrigger'] = '';
         $this->fieldspec['transition_trigger']['preupdatetrigger'] = '';
         $this->fieldspec['transition_trigger']['postupdatetrigger'] = '';
         $this->fieldspec['transition_trigger']['predeletetrigger'] = '';
         $this->fieldspec['transition_trigger']['postdeletetrigger'] = '';
         $this->fieldspec['time_limit']['metadata_id'] = '2726';
         $this->fieldspec['time_limit']['table_name'] = 'statetransition';
         $this->fieldspec['time_limit']['column_name'] = 'time_limit';
         $this->fieldspec['time_limit']['pretty_name'] = '';
         $this->fieldspec['time_limit']['abstract_data_type'] = 'smallint';
         $this->fieldspec['time_limit']['db_data_type'] = 'smallint';
         $this->fieldspec['time_limit']['field_null'] = 'NO';
         $this->fieldspec['time_limit']['field_key'] = '';
         $this->fieldspec['time_limit']['extra_sql'] = ' ';
         $this->fieldspec['time_limit']['html_form_type'] = 'integer';
         $this->fieldspec['time_limit']['html_form_options'] = '';
         $this->fieldspec['time_limit']['html_form_explanation'] = '';
         $this->fieldspec['time_limit']['help_text'] = '';
         $this->fieldspec['time_limit']['mandatory_p'] = 'N';
         $this->fieldspec['time_limit']['sort_key'] = '0';
         $this->fieldspec['time_limit']['form_sort_key'] = '0';
         $this->fieldspec['time_limit']['form_number'] = '1';
         $this->fieldspec['time_limit']['default_value'] = '';
         $this->fieldspec['time_limit']['field_toupper'] = 'NO';
         $this->fieldspec['time_limit']['validationprocname'] = '';
         $this->fieldspec['time_limit']['c_size'] = '5';
         $this->fieldspec['time_limit']['prikey'] = 'N';
         $this->fieldspec['time_limit']['noedit'] = 'N';
         $this->fieldspec['time_limit']['nodisplay'] = 'N';
         $this->fieldspec['time_limit']['c_unsigned'] = 'Y';
         $this->fieldspec['time_limit']['c_zerofill'] = 'N';
         $this->fieldspec['time_limit']['c_auto_increment'] = 'N';
         $this->fieldspec['time_limit']['foreign_table'] = '';
         $this->fieldspec['time_limit']['foreign_key'] = '';
         $this->fieldspec['time_limit']['application'] = 'workflow';
         $this->fieldspec['time_limit']['issearchable'] = '1';
         $this->fieldspec['time_limit']['preinserttrigger'] = '';
         $this->fieldspec['time_limit']['postinserttrigger'] = '';
         $this->fieldspec['time_limit']['preupdatetrigger'] = '';
         $this->fieldspec['time_limit']['postupdatetrigger'] = '';
         $this->fieldspec['time_limit']['predeletetrigger'] = '';
         $this->fieldspec['time_limit']['postdeletetrigger'] = '';
         $this->fieldspec['task_id']['metadata_id'] = '2727';
         $this->fieldspec['task_id']['table_name'] = 'statetransition';
         $this->fieldspec['task_id']['column_name'] = 'task_id';
         $this->fieldspec['task_id']['pretty_name'] = '';
         $this->fieldspec['task_id']['abstract_data_type'] = 'varchar';
         $this->fieldspec['task_id']['db_data_type'] = 'varchar';
         $this->fieldspec['task_id']['field_null'] = 'YES';
         $this->fieldspec['task_id']['field_key'] = '';
         $this->fieldspec['task_id']['extra_sql'] = ' ';
         $this->fieldspec['task_id']['html_form_type'] = 'text';
         $this->fieldspec['task_id']['html_form_options'] = '';
         $this->fieldspec['task_id']['html_form_explanation'] = '';
         $this->fieldspec['task_id']['help_text'] = '';
         $this->fieldspec['task_id']['mandatory_p'] = 'N';
         $this->fieldspec['task_id']['sort_key'] = '0';
         $this->fieldspec['task_id']['form_sort_key'] = '0';
         $this->fieldspec['task_id']['form_number'] = '1';
         $this->fieldspec['task_id']['default_value'] = '';
         $this->fieldspec['task_id']['field_toupper'] = 'NO';
         $this->fieldspec['task_id']['validationprocname'] = '';
         $this->fieldspec['task_id']['c_size'] = '40';
         $this->fieldspec['task_id']['prikey'] = 'N';
         $this->fieldspec['task_id']['noedit'] = 'N';
         $this->fieldspec['task_id']['nodisplay'] = 'N';
         $this->fieldspec['task_id']['c_unsigned'] = 'N';
         $this->fieldspec['task_id']['c_zerofill'] = 'N';
         $this->fieldspec['task_id']['c_auto_increment'] = 'N';
         $this->fieldspec['task_id']['foreign_table'] = '';
         $this->fieldspec['task_id']['foreign_key'] = '';
         $this->fieldspec['task_id']['application'] = 'workflow';
         $this->fieldspec['task_id']['issearchable'] = '1';
         $this->fieldspec['task_id']['preinserttrigger'] = '';
         $this->fieldspec['task_id']['postinserttrigger'] = '';
         $this->fieldspec['task_id']['preupdatetrigger'] = '';
         $this->fieldspec['task_id']['postupdatetrigger'] = '';
         $this->fieldspec['task_id']['predeletetrigger'] = '';
         $this->fieldspec['task_id']['postdeletetrigger'] = '';
         $this->fieldspec['roles_id']['metadata_id'] = '2728';
         $this->fieldspec['roles_id']['table_name'] = 'statetransition';
         $this->fieldspec['roles_id']['column_name'] = 'roles_id';
         $this->fieldspec['roles_id']['pretty_name'] = '';
         $this->fieldspec['roles_id']['abstract_data_type'] = 'varchar';
         $this->fieldspec['roles_id']['db_data_type'] = 'varchar';
         $this->fieldspec['roles_id']['field_null'] = 'NO';
         $this->fieldspec['roles_id']['field_key'] = '';
         $this->fieldspec['roles_id']['extra_sql'] = ' ';
         $this->fieldspec['roles_id']['html_form_type'] = 'text';
         $this->fieldspec['roles_id']['html_form_options'] = '';
         $this->fieldspec['roles_id']['html_form_explanation'] = '';
         $this->fieldspec['roles_id']['help_text'] = '';
         $this->fieldspec['roles_id']['mandatory_p'] = 'N';
         $this->fieldspec['roles_id']['sort_key'] = '0';
         $this->fieldspec['roles_id']['form_sort_key'] = '0';
         $this->fieldspec['roles_id']['form_number'] = '1';
         $this->fieldspec['roles_id']['default_value'] = '';
         $this->fieldspec['roles_id']['field_toupper'] = 'NO';
         $this->fieldspec['roles_id']['validationprocname'] = '';
         $this->fieldspec['roles_id']['c_size'] = '16';
         $this->fieldspec['roles_id']['prikey'] = 'N';
         $this->fieldspec['roles_id']['noedit'] = 'N';
         $this->fieldspec['roles_id']['nodisplay'] = 'N';
         $this->fieldspec['roles_id']['c_unsigned'] = 'N';
         $this->fieldspec['roles_id']['c_zerofill'] = 'N';
         $this->fieldspec['roles_id']['c_auto_increment'] = 'N';
         $this->fieldspec['roles_id']['foreign_table'] = '';
         $this->fieldspec['roles_id']['foreign_key'] = '';
         $this->fieldspec['roles_id']['application'] = 'workflow';
         $this->fieldspec['roles_id']['issearchable'] = '1';
         $this->fieldspec['roles_id']['preinserttrigger'] = '';
         $this->fieldspec['roles_id']['postinserttrigger'] = '';
         $this->fieldspec['roles_id']['preupdatetrigger'] = '';
         $this->fieldspec['roles_id']['postupdatetrigger'] = '';
         $this->fieldspec['roles_id']['predeletetrigger'] = '';
         $this->fieldspec['roles_id']['postdeletetrigger'] = '';
         $this->fieldspec['created_date']['metadata_id'] = '2729';
         $this->fieldspec['created_date']['table_name'] = 'statetransition';
         $this->fieldspec['created_date']['column_name'] = 'created_date';
         $this->fieldspec['created_date']['pretty_name'] = '';
         $this->fieldspec['created_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['created_date']['db_data_type'] = 'datetime';
         $this->fieldspec['created_date']['field_null'] = 'YES';
         $this->fieldspec['created_date']['field_key'] = '';
         $this->fieldspec['created_date']['extra_sql'] = ' ';
         $this->fieldspec['created_date']['html_form_type'] = 'datetime';
         $this->fieldspec['created_date']['html_form_options'] = '';
         $this->fieldspec['created_date']['html_form_explanation'] = '';
         $this->fieldspec['created_date']['help_text'] = '';
         $this->fieldspec['created_date']['mandatory_p'] = 'N';
         $this->fieldspec['created_date']['sort_key'] = '0';
         $this->fieldspec['created_date']['form_sort_key'] = '0';
         $this->fieldspec['created_date']['form_number'] = '1';
         $this->fieldspec['created_date']['default_value'] = '';
         $this->fieldspec['created_date']['field_toupper'] = 'NO';
         $this->fieldspec['created_date']['validationprocname'] = '';
         $this->fieldspec['created_date']['c_size'] = '';
         $this->fieldspec['created_date']['prikey'] = 'N';
         $this->fieldspec['created_date']['noedit'] = 'N';
         $this->fieldspec['created_date']['nodisplay'] = 'N';
         $this->fieldspec['created_date']['c_unsigned'] = 'N';
         $this->fieldspec['created_date']['c_zerofill'] = 'N';
         $this->fieldspec['created_date']['c_auto_increment'] = 'N';
         $this->fieldspec['created_date']['foreign_table'] = '';
         $this->fieldspec['created_date']['foreign_key'] = '';
         $this->fieldspec['created_date']['application'] = 'workflow';
         $this->fieldspec['created_date']['issearchable'] = '1';
         $this->fieldspec['created_date']['preinserttrigger'] = '';
         $this->fieldspec['created_date']['postinserttrigger'] = '';
         $this->fieldspec['created_date']['preupdatetrigger'] = '';
         $this->fieldspec['created_date']['postupdatetrigger'] = '';
         $this->fieldspec['created_date']['predeletetrigger'] = '';
         $this->fieldspec['created_date']['postdeletetrigger'] = '';
         $this->fieldspec['created_user']['metadata_id'] = '2730';
         $this->fieldspec['created_user']['table_name'] = 'statetransition';
         $this->fieldspec['created_user']['column_name'] = 'created_user';
         $this->fieldspec['created_user']['pretty_name'] = '';
         $this->fieldspec['created_user']['abstract_data_type'] = 'varchar';
         $this->fieldspec['created_user']['db_data_type'] = 'varchar';
         $this->fieldspec['created_user']['field_null'] = 'NO';
         $this->fieldspec['created_user']['field_key'] = '';
         $this->fieldspec['created_user']['extra_sql'] = ' ';
         $this->fieldspec['created_user']['html_form_type'] = 'text';
         $this->fieldspec['created_user']['html_form_options'] = '';
         $this->fieldspec['created_user']['html_form_explanation'] = '';
         $this->fieldspec['created_user']['help_text'] = '';
         $this->fieldspec['created_user']['mandatory_p'] = 'N';
         $this->fieldspec['created_user']['sort_key'] = '0';
         $this->fieldspec['created_user']['form_sort_key'] = '0';
         $this->fieldspec['created_user']['form_number'] = '1';
         $this->fieldspec['created_user']['default_value'] = '';
         $this->fieldspec['created_user']['field_toupper'] = 'NO';
         $this->fieldspec['created_user']['validationprocname'] = '';
         $this->fieldspec['created_user']['c_size'] = '16';
         $this->fieldspec['created_user']['prikey'] = 'N';
         $this->fieldspec['created_user']['noedit'] = 'N';
         $this->fieldspec['created_user']['nodisplay'] = 'N';
         $this->fieldspec['created_user']['c_unsigned'] = 'N';
         $this->fieldspec['created_user']['c_zerofill'] = 'N';
         $this->fieldspec['created_user']['c_auto_increment'] = 'N';
         $this->fieldspec['created_user']['foreign_table'] = '';
         $this->fieldspec['created_user']['foreign_key'] = '';
         $this->fieldspec['created_user']['application'] = 'workflow';
         $this->fieldspec['created_user']['issearchable'] = '1';
         $this->fieldspec['created_user']['preinserttrigger'] = '';
         $this->fieldspec['created_user']['postinserttrigger'] = '';
         $this->fieldspec['created_user']['preupdatetrigger'] = '';
         $this->fieldspec['created_user']['postupdatetrigger'] = '';
         $this->fieldspec['created_user']['predeletetrigger'] = '';
         $this->fieldspec['created_user']['postdeletetrigger'] = '';
         $this->fieldspec['revised_date']['metadata_id'] = '2731';
         $this->fieldspec['revised_date']['table_name'] = 'statetransition';
         $this->fieldspec['revised_date']['column_name'] = 'revised_date';
         $this->fieldspec['revised_date']['pretty_name'] = '';
         $this->fieldspec['revised_date']['abstract_data_type'] = 'datetime';
         $this->fieldspec['revised_date']['db_data_type'] = 'datetime';
         $this->fieldspec['revised_date']['field_null'] = 'NO';
         $this->fieldspec['revised_date']['field_key'] = '';
         $this->fieldspec['revised_date']['extra_sql'] = ' ';
         $this->fieldspec['revised_date']['html_form_type'] = 'datetime';
         $this->fieldspec['revised_date']['html_form_options'] = '';
         $this->fieldspec['revised_date']['html_form_explanation'] = '';
         $this->fieldspec['revised_date']['help_text'] = '';
         $this->fieldspec['revised_date']['mandatory_p'] = 'N';
         $this->fieldspec['revised_date']['sort_key'] = '0';
         $this->fieldspec['revised_date']['form_sort_key'] = '0';
         $this->fieldspec['revised_date']['form_number'] = '1';
         $this->fieldspec['revised_date']['default_value'] = '';
         $this->fieldspec['revised_date']['field_toupper'] = 'NO';
         $this->fieldspec['revised_date']['validationprocname'] = '';
         $this->fieldspec['revised_date']['c_size'] = '';
         $this->fieldspec['revised_date']['prikey'] = 'N';
         $this->fieldspec['revised_date']['noedit'] = 'N';
         $this->fieldspec['revised_date']['nodisplay'] = 'N';
         $this->fieldspec['revised_date']['c_unsigned'] = 'N';
         $this->fieldspec['revised_date']['c_zerofill'] = 'N';
         $this->fieldspec['revised_date']['c_auto_increment'] = 'N';
         $this->fieldspec['revised_date']['foreign_table'] = '';
         $this->fieldspec['revised_date']['foreign_key'] = '';
         $this->fieldspec['revised_date']['application'] = 'workflow';
         $this->fieldspec['revised_date']['issearchable'] = '1';
         $this->fieldspec['revised_date']['preinserttrigger'] = '';
         $this->fieldspec['revised_date']['postinserttrigger'] = '';
         $this->fieldspec['revised_date']['preupdatetrigger'] = '';
         $this->fieldspec['revised_date']['postupdatetrigger'] = '';
         $this->fieldspec['revised_date']['predeletetrigger'] = '';
         $this->fieldspec['revised_date']['postdeletetrigger'] = '';
         $this->fieldspec['revised_user']['metadata_id'] = '2732';
         $this->fieldspec['revised_user']['table_name'] = 'statetransition';
         $this->fieldspec['revised_user']['column_name'] = 'revised_user';
         $this->fieldspec['revised_user']['pretty_name'] = '';
         $this->fieldspec['revised_user']['abstract_data_type'] = 'varchar';
         $this->fieldspec['revised_user']['db_data_type'] = 'varchar';
         $this->fieldspec['revised_user']['field_null'] = 'NO';
         $this->fieldspec['revised_user']['field_key'] = '';
         $this->fieldspec['revised_user']['extra_sql'] = ' ';
         $this->fieldspec['revised_user']['html_form_type'] = 'text';
         $this->fieldspec['revised_user']['html_form_options'] = '';
         $this->fieldspec['revised_user']['html_form_explanation'] = '';
         $this->fieldspec['revised_user']['help_text'] = '';
         $this->fieldspec['revised_user']['mandatory_p'] = 'N';
         $this->fieldspec['revised_user']['sort_key'] = '0';
         $this->fieldspec['revised_user']['form_sort_key'] = '0';
         $this->fieldspec['revised_user']['form_number'] = '1';
         $this->fieldspec['revised_user']['default_value'] = '';
         $this->fieldspec['revised_user']['field_toupper'] = 'NO';
         $this->fieldspec['revised_user']['validationprocname'] = '';
         $this->fieldspec['revised_user']['c_size'] = '16';
         $this->fieldspec['revised_user']['prikey'] = 'N';
         $this->fieldspec['revised_user']['noedit'] = 'N';
         $this->fieldspec['revised_user']['nodisplay'] = 'N';
         $this->fieldspec['revised_user']['c_unsigned'] = 'N';
         $this->fieldspec['revised_user']['c_zerofill'] = 'N';
         $this->fieldspec['revised_user']['c_auto_increment'] = 'N';
         $this->fieldspec['revised_user']['foreign_table'] = '';
         $this->fieldspec['revised_user']['foreign_key'] = '';
         $this->fieldspec['revised_user']['application'] = 'workflow';
         $this->fieldspec['revised_user']['issearchable'] = '1';
         $this->fieldspec['revised_user']['preinserttrigger'] = '';
         $this->fieldspec['revised_user']['postinserttrigger'] = '';
         $this->fieldspec['revised_user']['preupdatetrigger'] = '';
         $this->fieldspec['revised_user']['postupdatetrigger'] = '';
         $this->fieldspec['revised_user']['predeletetrigger'] = '';
         $this->fieldspec['revised_user']['postdeletetrigger'] = '';
         $this->fieldlist = array('workflow_id', 'transition_id', 'transition_name', 'transition_desc', 'transition_trigger', 'time_limit', 'task_id', 'roles_id', 'created_date', 'created_user', 'revised_date', 'revised_user', 'workflow_id', 'transition_id', 'transition_name', 'transition_desc', 'transition_trigger', 'time_limit', 'task_id', 'roles_id', 'created_date', 'created_user', 'revised_date', 'revised_user');
         $this->searchlist = array('workflow_id', 'transition_id', 'transition_name', 'transition_desc', 'transition_trigger', 'time_limit', 'task_id', 'roles_id', 'created_date', 'created_user', 'revised_date', 'revised_user', 'workflow_id', 'transition_id', 'transition_name', 'transition_desc', 'transition_trigger', 'time_limit', 'task_id', 'roles_id', 'created_date', 'created_user', 'revised_date', 'revised_user', );
	         return SUCCESS;
         }
         function statetransition()
         { //For older php which doesn't have constructor
              return $this->__constructor();
         }
         function Push()
         {
	         $_SESSION['statetransition'] = serialize($this);
	         return SUCCESS;
         }
         function Pop()
         {
                 //Can't do this in self - this is how to do it outside
	       //  $this = unserialize($_SESSION['statetransition']);
	         return SUCCESS;
         }
         function ObserverRegister( $observer, $event )
         {
                 $this->observers[$event][] = $observer;
	         return SUCCESS;
         }
         function ObserverDeRegister( $observer )
         {
                 $this->observers[] = array_diff( $this->observers, array( $observer) );
	         return SUCCESS;
         }
         function ObserverNotify( $event, $msg )
         {
                 if ( isset( $this->observers[$event] ) )
                 	foreach ( $this->observers[$event] as $obs ) 
                 	{
                      		$obs->notify( $event, $msg );
                 	}
                 /* '**' being used as 'ALL' */
                 if ( isset( $this->observers['**'] ) )
                 	foreach ( $this->observers['**'] as $obs ) 
                 	{
                      		$obs->notify( $event, $msg );
                 	}
	         return SUCCESS;
         }
         function notify( $object )
         {
                 //Called when another object we are observing sends us a notification
	         return SUCCESS;
         }
         function Preworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Postworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Preworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Postworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Preworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Postworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Setworkflow_id($value)
         {
                 $this->workflow_id = $value;
	          return SUCCESS;
         }
         function Getworkflow_id()
         {
                    return $this->workflow_id;
         }
         function Pretransition_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idInsert ) )
	            return Pretransition_idInsert( $this );
                 else return;
         }
         function Posttransition_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idInsert ) )
	            return Pretransition_idInsert( $this );
                 else return;
         }
         function Pretransition_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idUpdate ) )
	            return Pretransition_idUpdate( $this );
                 else return;
         }
         function Posttransition_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idUpdate ) )
	            return Pretransition_idUpdate( $this );
                 else return;
         }
         function Pretransition_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idDelete ) )
	            return Pretransition_idDelete( $this );
                 else return;
         }
         function Posttransition_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idDelete ) )
	            return Pretransition_idDelete( $this );
                 else return;
         }
         function Settransition_id($value)
         {
                 $this->transition_id = $value;
	          return SUCCESS;
         }
         function Gettransition_id()
         {
                    return $this->transition_id;
         }
         function Pretransition_nameInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_nameInsert ) )
	            return Pretransition_nameInsert( $this );
                 else return;
         }
         function Posttransition_nameInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_nameInsert ) )
	            return Pretransition_nameInsert( $this );
                 else return;
         }
         function Pretransition_nameUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_nameUpdate ) )
	            return Pretransition_nameUpdate( $this );
                 else return;
         }
         function Posttransition_nameUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_nameUpdate ) )
	            return Pretransition_nameUpdate( $this );
                 else return;
         }
         function Pretransition_nameDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_nameDelete ) )
	            return Pretransition_nameDelete( $this );
                 else return;
         }
         function Posttransition_nameDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_nameDelete ) )
	            return Pretransition_nameDelete( $this );
                 else return;
         }
         function Settransition_name($value)
         {
                 $this->transition_name = $value;
	          return SUCCESS;
         }
         function Gettransition_name()
         {
                    return $this->transition_name;
         }
         function Pretransition_descInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_descInsert ) )
	            return Pretransition_descInsert( $this );
                 else return;
         }
         function Posttransition_descInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_descInsert ) )
	            return Pretransition_descInsert( $this );
                 else return;
         }
         function Pretransition_descUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_descUpdate ) )
	            return Pretransition_descUpdate( $this );
                 else return;
         }
         function Posttransition_descUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_descUpdate ) )
	            return Pretransition_descUpdate( $this );
                 else return;
         }
         function Pretransition_descDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_descDelete ) )
	            return Pretransition_descDelete( $this );
                 else return;
         }
         function Posttransition_descDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_descDelete ) )
	            return Pretransition_descDelete( $this );
                 else return;
         }
         function Settransition_desc($value)
         {
                 $this->transition_desc = $value;
	          return SUCCESS;
         }
         function Gettransition_desc()
         {
                    return $this->transition_desc;
         }
         function Pretransition_triggerInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerInsert ) )
	            return Pretransition_triggerInsert( $this );
                 else return;
         }
         function Posttransition_triggerInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerInsert ) )
	            return Pretransition_triggerInsert( $this );
                 else return;
         }
         function Pretransition_triggerUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerUpdate ) )
	            return Pretransition_triggerUpdate( $this );
                 else return;
         }
         function Posttransition_triggerUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerUpdate ) )
	            return Pretransition_triggerUpdate( $this );
                 else return;
         }
         function Pretransition_triggerDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerDelete ) )
	            return Pretransition_triggerDelete( $this );
                 else return;
         }
         function Posttransition_triggerDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerDelete ) )
	            return Pretransition_triggerDelete( $this );
                 else return;
         }
         function Settransition_trigger($value)
         {
                 $this->transition_trigger = $value;
	          return SUCCESS;
         }
         function Gettransition_trigger()
         {
                    return $this->transition_trigger;
         }
         function Pretime_limitInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretime_limitInsert ) )
	            return Pretime_limitInsert( $this );
                 else return;
         }
         function Posttime_limitInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretime_limitInsert ) )
	            return Pretime_limitInsert( $this );
                 else return;
         }
         function Pretime_limitUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretime_limitUpdate ) )
	            return Pretime_limitUpdate( $this );
                 else return;
         }
         function Posttime_limitUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretime_limitUpdate ) )
	            return Pretime_limitUpdate( $this );
                 else return;
         }
         function Pretime_limitDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretime_limitDelete ) )
	            return Pretime_limitDelete( $this );
                 else return;
         }
         function Posttime_limitDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretime_limitDelete ) )
	            return Pretime_limitDelete( $this );
                 else return;
         }
         function Settime_limit($value)
         {
                 $this->time_limit = $value;
	          return SUCCESS;
         }
         function Gettime_limit()
         {
                    return $this->time_limit;
         }
         function Pretask_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idInsert ) )
	            return Pretask_idInsert( $this );
                 else return;
         }
         function Posttask_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idInsert ) )
	            return Pretask_idInsert( $this );
                 else return;
         }
         function Pretask_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idUpdate ) )
	            return Pretask_idUpdate( $this );
                 else return;
         }
         function Posttask_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idUpdate ) )
	            return Pretask_idUpdate( $this );
                 else return;
         }
         function Pretask_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idDelete ) )
	            return Pretask_idDelete( $this );
                 else return;
         }
         function Posttask_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idDelete ) )
	            return Pretask_idDelete( $this );
                 else return;
         }
         function Settask_id($value)
         {
                 $this->task_id = $value;
	          return SUCCESS;
         }
         function Gettask_id()
         {
                    return $this->task_id;
         }
         function Preroles_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idInsert ) )
	            return Preroles_idInsert( $this );
                 else return;
         }
         function Postroles_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idInsert ) )
	            return Preroles_idInsert( $this );
                 else return;
         }
         function Preroles_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idUpdate ) )
	            return Preroles_idUpdate( $this );
                 else return;
         }
         function Postroles_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idUpdate ) )
	            return Preroles_idUpdate( $this );
                 else return;
         }
         function Preroles_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idDelete ) )
	            return Preroles_idDelete( $this );
                 else return;
         }
         function Postroles_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idDelete ) )
	            return Preroles_idDelete( $this );
                 else return;
         }
         function Setroles_id($value)
         {
                 $this->roles_id = $value;
	          return SUCCESS;
         }
         function Getroles_id()
         {
                    return $this->roles_id;
         }
         function Precreated_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateInsert ) )
	            return Precreated_dateInsert( $this );
                 else return;
         }
         function Postcreated_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateInsert ) )
	            return Precreated_dateInsert( $this );
                 else return;
         }
         function Precreated_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateUpdate ) )
	            return Precreated_dateUpdate( $this );
                 else return;
         }
         function Postcreated_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateUpdate ) )
	            return Precreated_dateUpdate( $this );
                 else return;
         }
         function Precreated_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateDelete ) )
	            return Precreated_dateDelete( $this );
                 else return;
         }
         function Postcreated_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateDelete ) )
	            return Precreated_dateDelete( $this );
                 else return;
         }
         function Setcreated_date($value)
         {
                 $this->created_date = $value;
	          return SUCCESS;
         }
         function Getcreated_date()
         {
                    return $this->created_date;
         }
         function Precreated_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userInsert ) )
	            return Precreated_userInsert( $this );
                 else return;
         }
         function Postcreated_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userInsert ) )
	            return Precreated_userInsert( $this );
                 else return;
         }
         function Precreated_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userUpdate ) )
	            return Precreated_userUpdate( $this );
                 else return;
         }
         function Postcreated_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userUpdate ) )
	            return Precreated_userUpdate( $this );
                 else return;
         }
         function Precreated_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userDelete ) )
	            return Precreated_userDelete( $this );
                 else return;
         }
         function Postcreated_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userDelete ) )
	            return Precreated_userDelete( $this );
                 else return;
         }
         function Setcreated_user($value)
         {
                 $this->created_user = $value;
	          return SUCCESS;
         }
         function Getcreated_user()
         {
                    return $this->created_user;
         }
         function Prerevised_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateInsert ) )
	            return Prerevised_dateInsert( $this );
                 else return;
         }
         function Postrevised_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateInsert ) )
	            return Prerevised_dateInsert( $this );
                 else return;
         }
         function Prerevised_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateUpdate ) )
	            return Prerevised_dateUpdate( $this );
                 else return;
         }
         function Postrevised_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateUpdate ) )
	            return Prerevised_dateUpdate( $this );
                 else return;
         }
         function Prerevised_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateDelete ) )
	            return Prerevised_dateDelete( $this );
                 else return;
         }
         function Postrevised_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateDelete ) )
	            return Prerevised_dateDelete( $this );
                 else return;
         }
         function Setrevised_date($value)
         {
                 $this->revised_date = $value;
	          return SUCCESS;
         }
         function Getrevised_date()
         {
                    return $this->revised_date;
         }
         function Prerevised_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userInsert ) )
	            return Prerevised_userInsert( $this );
                 else return;
         }
         function Postrevised_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userInsert ) )
	            return Prerevised_userInsert( $this );
                 else return;
         }
         function Prerevised_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userUpdate ) )
	            return Prerevised_userUpdate( $this );
                 else return;
         }
         function Postrevised_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userUpdate ) )
	            return Prerevised_userUpdate( $this );
                 else return;
         }
         function Prerevised_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userDelete ) )
	            return Prerevised_userDelete( $this );
                 else return;
         }
         function Postrevised_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userDelete ) )
	            return Prerevised_userDelete( $this );
                 else return;
         }
         function Setrevised_user($value)
         {
                 $this->revised_user = $value;
	          return SUCCESS;
         }
         function Getrevised_user()
         {
                    return $this->revised_user;
         }
         function Preworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Postworkflow_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idInsert ) )
	            return Preworkflow_idInsert( $this );
                 else return;
         }
         function Preworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Postworkflow_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idUpdate ) )
	            return Preworkflow_idUpdate( $this );
                 else return;
         }
         function Preworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Postworkflow_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preworkflow_idDelete ) )
	            return Preworkflow_idDelete( $this );
                 else return;
         }
         function Setworkflow_id($value)
         {
                 $this->workflow_id = $value;
	          return SUCCESS;
         }
         function Getworkflow_id()
         {
                    return $this->workflow_id;
         }
         function Pretransition_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idInsert ) )
	            return Pretransition_idInsert( $this );
                 else return;
         }
         function Posttransition_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idInsert ) )
	            return Pretransition_idInsert( $this );
                 else return;
         }
         function Pretransition_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idUpdate ) )
	            return Pretransition_idUpdate( $this );
                 else return;
         }
         function Posttransition_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idUpdate ) )
	            return Pretransition_idUpdate( $this );
                 else return;
         }
         function Pretransition_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idDelete ) )
	            return Pretransition_idDelete( $this );
                 else return;
         }
         function Posttransition_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_idDelete ) )
	            return Pretransition_idDelete( $this );
                 else return;
         }
         function Settransition_id($value)
         {
                 $this->transition_id = $value;
	          return SUCCESS;
         }
         function Gettransition_id()
         {
                    return $this->transition_id;
         }
         function Pretransition_nameInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_nameInsert ) )
	            return Pretransition_nameInsert( $this );
                 else return;
         }
         function Posttransition_nameInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_nameInsert ) )
	            return Pretransition_nameInsert( $this );
                 else return;
         }
         function Pretransition_nameUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_nameUpdate ) )
	            return Pretransition_nameUpdate( $this );
                 else return;
         }
         function Posttransition_nameUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_nameUpdate ) )
	            return Pretransition_nameUpdate( $this );
                 else return;
         }
         function Pretransition_nameDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_nameDelete ) )
	            return Pretransition_nameDelete( $this );
                 else return;
         }
         function Posttransition_nameDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_nameDelete ) )
	            return Pretransition_nameDelete( $this );
                 else return;
         }
         function Settransition_name($value)
         {
                 $this->transition_name = $value;
	          return SUCCESS;
         }
         function Gettransition_name()
         {
                    return $this->transition_name;
         }
         function Pretransition_descInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_descInsert ) )
	            return Pretransition_descInsert( $this );
                 else return;
         }
         function Posttransition_descInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_descInsert ) )
	            return Pretransition_descInsert( $this );
                 else return;
         }
         function Pretransition_descUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_descUpdate ) )
	            return Pretransition_descUpdate( $this );
                 else return;
         }
         function Posttransition_descUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_descUpdate ) )
	            return Pretransition_descUpdate( $this );
                 else return;
         }
         function Pretransition_descDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_descDelete ) )
	            return Pretransition_descDelete( $this );
                 else return;
         }
         function Posttransition_descDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_descDelete ) )
	            return Pretransition_descDelete( $this );
                 else return;
         }
         function Settransition_desc($value)
         {
                 $this->transition_desc = $value;
	          return SUCCESS;
         }
         function Gettransition_desc()
         {
                    return $this->transition_desc;
         }
         function Pretransition_triggerInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerInsert ) )
	            return Pretransition_triggerInsert( $this );
                 else return;
         }
         function Posttransition_triggerInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerInsert ) )
	            return Pretransition_triggerInsert( $this );
                 else return;
         }
         function Pretransition_triggerUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerUpdate ) )
	            return Pretransition_triggerUpdate( $this );
                 else return;
         }
         function Posttransition_triggerUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerUpdate ) )
	            return Pretransition_triggerUpdate( $this );
                 else return;
         }
         function Pretransition_triggerDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerDelete ) )
	            return Pretransition_triggerDelete( $this );
                 else return;
         }
         function Posttransition_triggerDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretransition_triggerDelete ) )
	            return Pretransition_triggerDelete( $this );
                 else return;
         }
         function Settransition_trigger($value)
         {
                 $this->transition_trigger = $value;
	          return SUCCESS;
         }
         function Gettransition_trigger()
         {
                    return $this->transition_trigger;
         }
         function Pretime_limitInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretime_limitInsert ) )
	            return Pretime_limitInsert( $this );
                 else return;
         }
         function Posttime_limitInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretime_limitInsert ) )
	            return Pretime_limitInsert( $this );
                 else return;
         }
         function Pretime_limitUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretime_limitUpdate ) )
	            return Pretime_limitUpdate( $this );
                 else return;
         }
         function Posttime_limitUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretime_limitUpdate ) )
	            return Pretime_limitUpdate( $this );
                 else return;
         }
         function Pretime_limitDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretime_limitDelete ) )
	            return Pretime_limitDelete( $this );
                 else return;
         }
         function Posttime_limitDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretime_limitDelete ) )
	            return Pretime_limitDelete( $this );
                 else return;
         }
         function Settime_limit($value)
         {
                 $this->time_limit = $value;
	          return SUCCESS;
         }
         function Gettime_limit()
         {
                    return $this->time_limit;
         }
         function Pretask_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idInsert ) )
	            return Pretask_idInsert( $this );
                 else return;
         }
         function Posttask_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idInsert ) )
	            return Pretask_idInsert( $this );
                 else return;
         }
         function Pretask_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idUpdate ) )
	            return Pretask_idUpdate( $this );
                 else return;
         }
         function Posttask_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idUpdate ) )
	            return Pretask_idUpdate( $this );
                 else return;
         }
         function Pretask_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idDelete ) )
	            return Pretask_idDelete( $this );
                 else return;
         }
         function Posttask_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Pretask_idDelete ) )
	            return Pretask_idDelete( $this );
                 else return;
         }
         function Settask_id($value)
         {
                 $this->task_id = $value;
	          return SUCCESS;
         }
         function Gettask_id()
         {
                    return $this->task_id;
         }
         function Preroles_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idInsert ) )
	            return Preroles_idInsert( $this );
                 else return;
         }
         function Postroles_idInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idInsert ) )
	            return Preroles_idInsert( $this );
                 else return;
         }
         function Preroles_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idUpdate ) )
	            return Preroles_idUpdate( $this );
                 else return;
         }
         function Postroles_idUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idUpdate ) )
	            return Preroles_idUpdate( $this );
                 else return;
         }
         function Preroles_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idDelete ) )
	            return Preroles_idDelete( $this );
                 else return;
         }
         function Postroles_idDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Preroles_idDelete ) )
	            return Preroles_idDelete( $this );
                 else return;
         }
         function Setroles_id($value)
         {
                 $this->roles_id = $value;
	          return SUCCESS;
         }
         function Getroles_id()
         {
                    return $this->roles_id;
         }
         function Precreated_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateInsert ) )
	            return Precreated_dateInsert( $this );
                 else return;
         }
         function Postcreated_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateInsert ) )
	            return Precreated_dateInsert( $this );
                 else return;
         }
         function Precreated_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateUpdate ) )
	            return Precreated_dateUpdate( $this );
                 else return;
         }
         function Postcreated_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateUpdate ) )
	            return Precreated_dateUpdate( $this );
                 else return;
         }
         function Precreated_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateDelete ) )
	            return Precreated_dateDelete( $this );
                 else return;
         }
         function Postcreated_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_dateDelete ) )
	            return Precreated_dateDelete( $this );
                 else return;
         }
         function Setcreated_date($value)
         {
                 $this->created_date = $value;
	          return SUCCESS;
         }
         function Getcreated_date()
         {
                    return $this->created_date;
         }
         function Precreated_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userInsert ) )
	            return Precreated_userInsert( $this );
                 else return;
         }
         function Postcreated_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userInsert ) )
	            return Precreated_userInsert( $this );
                 else return;
         }
         function Precreated_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userUpdate ) )
	            return Precreated_userUpdate( $this );
                 else return;
         }
         function Postcreated_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userUpdate ) )
	            return Precreated_userUpdate( $this );
                 else return;
         }
         function Precreated_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userDelete ) )
	            return Precreated_userDelete( $this );
                 else return;
         }
         function Postcreated_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Precreated_userDelete ) )
	            return Precreated_userDelete( $this );
                 else return;
         }
         function Setcreated_user($value)
         {
                 $this->created_user = $value;
	          return SUCCESS;
         }
         function Getcreated_user()
         {
                    return $this->created_user;
         }
         function Prerevised_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateInsert ) )
	            return Prerevised_dateInsert( $this );
                 else return;
         }
         function Postrevised_dateInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateInsert ) )
	            return Prerevised_dateInsert( $this );
                 else return;
         }
         function Prerevised_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateUpdate ) )
	            return Prerevised_dateUpdate( $this );
                 else return;
         }
         function Postrevised_dateUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateUpdate ) )
	            return Prerevised_dateUpdate( $this );
                 else return;
         }
         function Prerevised_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateDelete ) )
	            return Prerevised_dateDelete( $this );
                 else return;
         }
         function Postrevised_dateDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_dateDelete ) )
	            return Prerevised_dateDelete( $this );
                 else return;
         }
         function Setrevised_date($value)
         {
                 $this->revised_date = $value;
	          return SUCCESS;
         }
         function Getrevised_date()
         {
                    return $this->revised_date;
         }
         function Prerevised_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userInsert ) )
	            return Prerevised_userInsert( $this );
                 else return;
         }
         function Postrevised_userInsert( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userInsert ) )
	            return Prerevised_userInsert( $this );
                 else return;
         }
         function Prerevised_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userUpdate ) )
	            return Prerevised_userUpdate( $this );
                 else return;
         }
         function Postrevised_userUpdate( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userUpdate ) )
	            return Prerevised_userUpdate( $this );
                 else return;
         }
         function Prerevised_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userDelete ) )
	            return Prerevised_userDelete( $this );
                 else return;
         }
         function Postrevised_userDelete( $data )
         {
         $this->data = $data;
                 if ( is_callable( Prerevised_userDelete ) )
	            return Prerevised_userDelete( $this );
                 else return;
         }
         function Setrevised_user($value)
         {
                 $this->revised_user = $value;
	          return SUCCESS;
         }
         function Getrevised_user()
         {
                    return $this->revised_user;
         }
} /* class statetransition */
